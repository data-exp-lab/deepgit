<?xml version='1.0' encoding='utf-8'?>
<gexf xmlns="http://www.gexf.net/1.2draft" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.gexf.net/1.2draft http://www.gexf.net/1.2draft/gexf.xsd" version="1.2">
  <meta lastmodifieddate="2025-03-05">
    <creator>NetworkX 3.4.2</creator>
  </meta>
  <graph defaultedgetype="undirected" mode="static" name="">
    <attributes mode="static" class="node">
      <attribute id="0" title="topics" type="string" />
      <attribute id="1" title="url" type="string" />
      <attribute id="2" title="stars" type="long" />
      <attribute id="3" title="category" type="string" />
      <attribute id="4" title="cluster_id" type="long" />
      <attribute id="5" title="color" type="string" />
    </attributes>
    <nodes>
      <node id="epost/psc-query" label="epost/psc-query">
        <attvalues>
          <attvalue for="0" value="datalog,fact-extractor,knowledgebase,logic-programming,purescript,query,source-code-analysis" />
          <attvalue for="1" value="https://github.com/epost/psc-query" />
          <attvalue for="2" value="9" />
          <attvalue for="3" value="fact-extractor" />
          <attvalue for="4" value="0" />
          <attvalue for="5" value="#1f77b4" />
        </attvalues>
      </node>
      <node id="tasos14/reactQueens" label="tasos14/reactQueens">
        <attvalues>
          <attvalue for="0" value="react,react-redux,redux,redux-saga,swi-pengines,swi-prolog" />
          <attvalue for="1" value="https://github.com/tasos14/reactQueens" />
          <attvalue for="2" value="10" />
          <attvalue for="3" value="redux" />
          <attvalue for="4" value="1" />
          <attvalue for="5" value="#aec7e8" />
        </attvalues>
      </node>
      <node id="langston-barrett/souffle-lint" label="langston-barrett/souffle-lint">
        <attvalues>
          <attvalue for="0" value="datalog,linter,souffle" />
          <attvalue for="1" value="https://github.com/langston-barrett/souffle-lint" />
          <attvalue for="2" value="13" />
          <attvalue for="3" value="souffle" />
          <attvalue for="4" value="2" />
          <attvalue for="5" value="#ff7f0e" />
        </attvalues>
      </node>
      <node id="brmuch/COMP9814" label="brmuch/COMP9814">
        <attvalues>
          <attvalue for="0" value="ai,prolog-programming-language" />
          <attvalue for="1" value="https://github.com/brmuch/COMP9814" />
          <attvalue for="2" value="9" />
          <attvalue for="3" value="ai" />
          <attvalue for="4" value="3" />
          <attvalue for="5" value="#2ca02c" />
        </attvalues>
      </node>
      <node id="thesofakillers/iclingo" label="thesofakillers/iclingo">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,clingo,ipykernel,jupyter,kernel,logic-programming" />
          <attvalue for="1" value="https://github.com/thesofakillers/iclingo" />
          <attvalue for="2" value="6" />
          <attvalue for="3" value="kernel" />
          <attvalue for="4" value="4" />
          <attvalue for="5" value="#98df8a" />
        </attvalues>
      </node>
      <node id="ptarau/pypro" label="ptarau/pypro">
        <attvalues>
          <attvalue for="0" value="interpreter,nested-tuples,prolog,python3,tuple-mining,unification" />
          <attvalue for="1" value="https://github.com/ptarau/pypro" />
          <attvalue for="2" value="20" />
          <attvalue for="3" value="unification" />
          <attvalue for="4" value="5" />
          <attvalue for="5" value="#ff9896" />
        </attvalues>
      </node>
      <node id="seanpm2001/AI2001" label="seanpm2001/AI2001">
        <attvalues>
          <attvalue for="0" value="ai,ai-2001,ai2001,artificial-intelligence,artificial-intelligence-2001,c,cython,gpl3,gplv3,home,home-repo,home-repository,homepage,julia,md,prolog,python,r,txt" />
          <attvalue for="1" value="https://github.com/seanpm2001/AI2001" />
          <attvalue for="2" value="12" />
          <attvalue for="3" value="r" />
          <attvalue for="4" value="6" />
          <attvalue for="5" value="#9467bd" />
        </attvalues>
      </node>
      <node id="anarsiel/University" label="anarsiel/University">
        <attvalues>
          <attvalue for="0" value="algorithms-and-data-structures,assembly,c-plus-plus,clojure,discrete-mathematics,itmo-university,java,javascript,labs,latex,paradigms,prolog,readme,web" />
          <attvalue for="1" value="https://github.com/anarsiel/University" />
          <attvalue for="2" value="7" />
          <attvalue for="3" value="assembly" />
          <attvalue for="4" value="7" />
          <attvalue for="5" value="#8c564b" />
        </attvalues>
      </node>
      <node id="AmziLS/AmziProlog" label="AmziLS/AmziProlog">
        <attvalues>
          <attvalue for="0" value="eclipse-plugin,ide,logic-programming,prolog,virtual-machine" />
          <attvalue for="1" value="https://github.com/AmziLS/AmziProlog" />
          <attvalue for="2" value="119" />
          <attvalue for="3" value="ide" />
          <attvalue for="4" value="8" />
          <attvalue for="5" value="#c49c94" />
        </attvalues>
      </node>
      <node id="dayfundora/Azul_Board_Game" label="dayfundora/Azul_Board_Game">
        <attvalues>
          <attvalue for="0" value="azul-game,board-game,prolog" />
          <attvalue for="1" value="https://github.com/dayfundora/Azul_Board_Game" />
          <attvalue for="2" value="7" />
          <attvalue for="3" value="azul-game" />
          <attvalue for="4" value="9" />
          <attvalue for="5" value="#e377c2" />
        </attvalues>
      </node>
      <node id="martinmogusu/course_advisor" label="martinmogusu/course_advisor">
        <attvalues>
          <attvalue for="0" value="artificial-intelligence,expert-system,knowledge-representation,prolog" />
          <attvalue for="1" value="https://github.com/martinmogusu/course_advisor" />
          <attvalue for="2" value="18" />
          <attvalue for="3" value="artificial-intelligence" />
          <attvalue for="4" value="10" />
          <attvalue for="5" value="#7f7f7f" />
        </attvalues>
      </node>
      <node id="thiagopbueno/mdp-problog" label="thiagopbueno/mdp-problog">
        <attvalues>
          <attvalue for="0" value="logic-programming,markov-decision-processes,mdp,planning,probabilistic-programming,problog" />
          <attvalue for="1" value="https://github.com/thiagopbueno/mdp-problog" />
          <attvalue for="2" value="8" />
          <attvalue for="3" value="planning" />
          <attvalue for="4" value="11" />
          <attvalue for="5" value="#c7c7c7" />
        </attvalues>
      </node>
      <node id="memgonzales/medical-expert-ehrlich" label="memgonzales/medical-expert-ehrlich">
        <attvalues>
          <attvalue for="0" value="backward-chaining,backward-chaining-prolog,expert-system,intelligent-systems,medical-expert-system,prolog,uncertainty" />
          <attvalue for="1" value="https://github.com/memgonzales/medical-expert-ehrlich" />
          <attvalue for="2" value="7" />
          <attvalue for="3" value="backward-chaining" />
          <attvalue for="4" value="12" />
          <attvalue for="5" value="#dbdb8d" />
        </attvalues>
      </node>
      <node id="jocap/russian-numbers" label="jocap/russian-numbers">
        <attvalues>
          <attvalue for="0" value="linguistics,prolog,russian" />
          <attvalue for="1" value="https://github.com/jocap/russian-numbers" />
          <attvalue for="2" value="7" />
          <attvalue for="3" value="prolog" />
          <attvalue for="4" value="13" />
          <attvalue for="5" value="#17becf" />
        </attvalues>
      </node>
      <node id="robsimmons/dusa" label="robsimmons/dusa">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,datalog,forward-chaining,logic-programming" />
          <attvalue for="1" value="https://github.com/robsimmons/dusa" />
          <attvalue for="2" value="110" />
          <attvalue for="3" value="forward-chaining" />
          <attvalue for="4" value="14" />
          <attvalue for="5" value="#9edae5" />
        </attvalues>
      </node>
      <node id="LogtalkDotOrg/logtalk3" label="LogtalkDotOrg/logtalk3">
        <attvalues>
          <attvalue for="0" value="declarative-language,declarative-programming,logic-programming,logtalk,oop,prolog" />
          <attvalue for="1" value="https://github.com/LogtalkDotOrg/logtalk3" />
          <attvalue for="2" value="438" />
        </attvalues>
      </node>
      <node id="replikativ/datahike" label="replikativ/datahike">
        <attvalues>
          <attvalue for="0" value="clojure,database,datahike,datalog,open-source" />
          <attvalue for="1" value="https://github.com/replikativ/datahike" />
          <attvalue for="2" value="1652" />
        </attvalues>
      </node>
      <node id="sasagawa888/Elxlog" label="sasagawa888/Elxlog">
        <attvalues>
          <attvalue for="0" value="elixir,prolog" />
          <attvalue for="1" value="https://github.com/sasagawa888/Elxlog" />
          <attvalue for="2" value="33" />
        </attvalues>
      </node>
      <node id="dirkschumacher/logician" label="dirkschumacher/logician">
        <attvalues>
          <attvalue for="0" value="datalog,logic-programming,prolog,r" />
          <attvalue for="1" value="https://github.com/dirkschumacher/logician" />
          <attvalue for="2" value="37" />
        </attvalues>
      </node>
      <node id="ostis-ai/scl-machine" label="ostis-ai/scl-machine">
        <attvalues>
          <attvalue for="0" value="logic,logic-inference,logic-programming,ostis" />
          <attvalue for="1" value="https://github.com/ostis-ai/scl-machine" />
          <attvalue for="2" value="14" />
        </attvalues>
      </node>
      <node id="ChunghaSung/EC-Diff" label="ChunghaSung/EC-Diff">
        <attvalues>
          <attvalue for="0" value="concurrent-programs,datalog,diffing,llvm,semantic-diff" />
          <attvalue for="1" value="https://github.com/ChunghaSung/EC-Diff" />
          <attvalue for="2" value="6" />
        </attvalues>
      </node>
      <node id="jaunerc/minimax-prolog" label="jaunerc/minimax-prolog">
        <attvalues>
          <attvalue for="0" value="minimax,prolog,rest-api" />
          <attvalue for="1" value="https://github.com/jaunerc/minimax-prolog" />
          <attvalue for="2" value="10" />
        </attvalues>
      </node>
      <node id="d-dimos/programming_languages1_ntua" label="d-dimos/programming_languages1_ntua">
        <attvalues>
          <attvalue for="0" value="cplusplus,java,prolog,python,sml" />
          <attvalue for="1" value="https://github.com/d-dimos/programming_languages1_ntua" />
          <attvalue for="2" value="6" />
        </attvalues>
      </node>
      <node id="prismplp/prism" label="prismplp/prism">
        <attvalues>
          <attvalue for="0" value="logic-programming,probabilistic-models,probabilistic-neural-network,probabilistic-programming" />
          <attvalue for="1" value="https://github.com/prismplp/prism" />
          <attvalue for="2" value="28" />
        </attvalues>
      </node>
      <node id="lyxell/sjp" label="lyxell/sjp">
        <attvalues>
          <attvalue for="0" value="datalog,metaprogramming" />
          <attvalue for="1" value="https://github.com/lyxell/sjp" />
          <attvalue for="2" value="9" />
        </attvalues>
      </node>
      <node id="jdaridis/souffle-lsp-plugin" label="jdaridis/souffle-lsp-plugin">
        <attvalues>
          <attvalue for="0" value="antlr4,datalog,ide,language-server,lsp-server,souffle,static-analysis,vscode-extension" />
          <attvalue for="1" value="https://github.com/jdaridis/souffle-lsp-plugin" />
          <attvalue for="2" value="11" />
        </attvalues>
      </node>
      <node id="RedWn/Prolog-Akari" label="RedWn/Prolog-Akari">
        <attvalues>
          <attvalue for="0" value="ai,cpp,js,lights-out-game,prolog,puzzle-solver" />
          <attvalue for="1" value="https://github.com/RedWn/Prolog-Akari" />
          <attvalue for="2" value="8" />
        </attvalues>
      </node>
      <node id="mthom/scryer-prolog" label="mthom/scryer-prolog">
        <attvalues>
          <attvalue for="0" value="iso-prolog-standard,prolog,prolog-implementation,prolog-interpreter,prolog-programming-language,rust" />
          <attvalue for="1" value="https://github.com/mthom/scryer-prolog" />
          <attvalue for="2" value="2163" />
        </attvalues>
      </node>
      <node id="dnmfarrell/dict" label="dnmfarrell/dict">
        <attvalues>
          <attvalue for="0" value="binary-search-tree,data-structures-and-algorithms,iso-prolog-standard,prolog" />
          <attvalue for="1" value="https://github.com/dnmfarrell/dict" />
          <attvalue for="2" value="6" />
        </attvalues>
      </node>
      <node id="bramucas/xclingo2" label="bramucas/xclingo2">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,debugging-tool,explainability,logic-programming" />
          <attvalue for="1" value="https://github.com/bramucas/xclingo2" />
          <attvalue for="2" value="13" />
        </attvalues>
      </node>
      <node id="RustemB/profetch" label="RustemB/profetch">
        <attvalues>
          <attvalue for="0" value="fetch,neofetch,prolog" />
          <attvalue for="1" value="https://github.com/RustemB/profetch" />
          <attvalue for="2" value="14" />
        </attvalues>
      </node>
      <node id="triska/clpfd" label="triska/clpfd">
        <attvalues>
          <attvalue for="0" value="clp,constraint-programming,constraints,integer-arithmetic,prolog,teaching" />
          <attvalue for="1" value="https://github.com/triska/clpfd" />
          <attvalue for="2" value="174" />
        </attvalues>
      </node>
      <node id="SAKET-SK/Programming-Aptitude-Interview-Prep" label="SAKET-SK/Programming-Aptitude-Interview-Prep">
        <attvalues>
          <attvalue for="0" value="aptitude,aptitude-solver,aptitude-tests,aptitudetraining,exercises,interview-technical,logic-programming,programming-languages,technical-test" />
          <attvalue for="1" value="https://github.com/SAKET-SK/Programming-Aptitude-Interview-Prep" />
          <attvalue for="2" value="136" />
        </attvalues>
      </node>
      <node id="Jaraxxus-Me/LogiCity" label="Jaraxxus-Me/LogiCity">
        <attvalues>
          <attvalue for="0" value="logic-programming,planning,reasoning,reinforcement-learning-environments" />
          <attvalue for="1" value="https://github.com/Jaraxxus-Me/LogiCity" />
          <attvalue for="2" value="20" />
        </attvalues>
      </node>
      <node id="ciao-lang/ciaowasm" label="ciao-lang/ciaowasm">
        <attvalues>
          <attvalue for="0" value="ciao-prolog,javascript,prolog,wasm,webassembly" />
          <attvalue for="1" value="https://github.com/ciao-lang/ciaowasm" />
          <attvalue for="2" value="8" />
        </attvalues>
      </node>
      <node id="xieyuheng/logic-db" label="xieyuheng/logic-db">
        <attvalues>
          <attvalue for="0" value="logic-programming,prolog,typescript" />
          <attvalue for="1" value="https://github.com/xieyuheng/logic-db" />
          <attvalue for="2" value="18" />
        </attvalues>
      </node>
      <node id="jaalonso/Lecturas_GLC" label="jaalonso/Lecturas_GLC">
        <attvalues>
          <attvalue for="0" value="coq,functional-programming,haskell,isabelle-hol,itp,leanprover,logic,logic-programming,prolog" />
          <attvalue for="1" value="https://github.com/jaalonso/Lecturas_GLC" />
          <attvalue for="2" value="74" />
        </attvalues>
      </node>
      <node id="DevOgabek/LeetCodePythonSolutions" label="DevOgabek/LeetCodePythonSolutions">
        <attvalues>
          <attvalue for="0" value="leetcode,leetcode-python,leetcode-solutions,logic-programming,solutions" />
          <attvalue for="1" value="https://github.com/DevOgabek/LeetCodePythonSolutions" />
          <attvalue for="2" value="19" />
        </attvalues>
      </node>
      <node id="yuce/pyswip" label="yuce/pyswip">
        <attvalues>
          <attvalue for="0" value="artificial-intelligence,expert-systems,logic-programming,natural-language-processing,prolog,python,robotics,swi-prolog" />
          <attvalue for="1" value="https://github.com/yuce/pyswip" />
          <attvalue for="2" value="503" />
        </attvalues>
      </node>
      <node id="dirkschumacher/nodepicosat" label="dirkschumacher/nodepicosat">
        <attvalues>
          <attvalue for="0" value="logic,logic-programming,node-module,picosat,picosat-solver,sat-solver" />
          <attvalue for="1" value="https://github.com/dirkschumacher/nodepicosat" />
          <attvalue for="2" value="8" />
        </attvalues>
      </node>
      <node id="susuhahnml/asp-game-strategies" label="susuhahnml/asp-game-strategies">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,clingo,game-strategy,ilasp,minimax,monte-carlo-tree-search,nim,tic-tac-toe" />
          <attvalue for="1" value="https://github.com/susuhahnml/asp-game-strategies" />
          <attvalue for="2" value="8" />
        </attvalues>
      </node>
      <node id="py-typedlogic/py-typedlogic" label="py-typedlogic/py-typedlogic">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,clif,clingo,common-logic,datalog,description-logic,linkml,logic,owl-dl,prolog,python,souffle,theorem-provers,z3" />
          <attvalue for="1" value="https://github.com/py-typedlogic/py-typedlogic" />
          <attvalue for="2" value="9" />
        </attvalues>
      </node>
      <node id="Aluriak/concept-generation" label="Aluriak/concept-generation">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,benchmark,formal-concept-analysis" />
          <attvalue for="1" value="https://github.com/Aluriak/concept-generation" />
          <attvalue for="2" value="6" />
        </attvalues>
      </node>
      <node id="kyouko-taiga/LogicKit" label="kyouko-taiga/LogicKit">
        <attvalues>
          <attvalue for="0" value="domain-specific-language,logic-programming" />
          <attvalue for="1" value="https://github.com/kyouko-taiga/LogicKit" />
          <attvalue for="2" value="61" />
        </attvalues>
      </node>
      <node id="RichardMoot/Grail" label="RichardMoot/Grail">
        <attvalues>
          <attvalue for="0" value="categorial-grammar,logic-programming,parser,proof-net,swi-prolog,theorem-prover" />
          <attvalue for="1" value="https://github.com/RichardMoot/Grail" />
          <attvalue for="2" value="8" />
        </attvalues>
      </node>
      <node id="thuwzy/Neural-Symbolic-and-Probabilistic-Logic-Papers" label="thuwzy/Neural-Symbolic-and-Probabilistic-Logic-Papers">
        <attvalues>
          <attvalue for="0" value="deep-logic,logic-programming,neural-logic,neural-module-networks,neural-symbolic,neurosymbolic,probabilistic-logic,probability" />
          <attvalue for="1" value="https://github.com/thuwzy/Neural-Symbolic-and-Probabilistic-Logic-Papers" />
          <attvalue for="2" value="120" />
        </attvalues>
      </node>
      <node id="nicoladileo/NephroDoctor" label="nicoladileo/NephroDoctor">
        <attvalues>
          <attvalue for="0" value="artificial-intelligence,expert-system,inference-engine,knowledge-base,medical-informatics,prolog-interpreter,prolog-programming-language,rule-based,uncertainty" />
          <attvalue for="1" value="https://github.com/nicoladileo/NephroDoctor" />
          <attvalue for="2" value="30" />
        </attvalues>
      </node>
      <node id="mracos/asdf-swiprolog" label="mracos/asdf-swiprolog">
        <attvalues>
          <attvalue for="0" value="asdf,asdf-swiprolog,asdf-vm,prolog,swi-prolog,version-manager" />
          <attvalue for="1" value="https://github.com/mracos/asdf-swiprolog" />
          <attvalue for="2" value="10" />
        </attvalues>
      </node>
      <node id="theronic/eacl" label="theronic/eacl">
        <attvalues>
          <attvalue for="0" value="access-control,clojure,datalog,enterprise" />
          <attvalue for="1" value="https://github.com/theronic/eacl" />
          <attvalue for="2" value="43" />
        </attvalues>
      </node>
      <node id="namin/scalogno" label="namin/scalogno">
        <attvalues>
          <attvalue for="0" value="logic-programming,metaprogramming,scala,smt,tabling" />
          <attvalue for="1" value="https://github.com/namin/scalogno" />
          <attvalue for="2" value="41" />
        </attvalues>
      </node>
      <node id="CapelliC/hitchhicker-prolog" label="CapelliC/hitchhicker-prolog">
        <attvalues>
          <attvalue for="0" value="browser,javascript,logic-programming,nodejs,prolog,prolog-implementation,semantic-publishing,virtual-machine" />
          <attvalue for="1" value="https://github.com/CapelliC/hitchhicker-prolog" />
          <attvalue for="2" value="18" />
        </attvalues>
      </node>
      <node id="philzook58/duckegg" label="philzook58/duckegg">
        <attvalues>
          <attvalue for="0" value="datalog,egg,egraph,sql" />
          <attvalue for="1" value="https://github.com/philzook58/duckegg" />
          <attvalue for="2" value="25" />
        </attvalues>
      </node>
      <node id="awalterschulze/gominikanren" label="awalterschulze/gominikanren">
        <attvalues>
          <attvalue for="0" value="go,logic-programming,minikanren" />
          <attvalue for="1" value="https://github.com/awalterschulze/gominikanren" />
          <attvalue for="2" value="41" />
        </attvalues>
      </node>
      <node id="cmungall/sparqlprog" label="cmungall/sparqlprog">
        <attvalues>
          <attvalue for="0" value="bioinformatics,datalog,ontology,prolog,rdf,semantic-web,sparql,swi-prolog" />
          <attvalue for="1" value="https://github.com/cmungall/sparqlprog" />
          <attvalue for="2" value="47" />
        </attvalues>
      </node>
      <node id="mumuki/mulang" label="mumuki/mulang">
        <attvalues>
          <attvalue for="0" value="ast,browser,code-analysis,educational,functional,haskell,inspection,java,javascript,languages,logic-paradigm,mulang-ast,mumuki,nodejs,object-oriented,prolog,python,ruby,static-analysis" />
          <attvalue for="1" value="https://github.com/mumuki/mulang" />
          <attvalue for="2" value="125" />
        </attvalues>
      </node>
      <node id="fuzzy-reasoner/fuzzy-reasoner" label="fuzzy-reasoner/fuzzy-reasoner">
        <attvalues>
          <attvalue for="0" value="prolog,python,reasoning,symbolic-logic" />
          <attvalue for="1" value="https://github.com/fuzzy-reasoner/fuzzy-reasoner" />
          <attvalue for="2" value="7" />
        </attvalues>
      </node>
      <node id="tesseradecade/swi-orm" label="tesseradecade/swi-orm">
        <attvalues>
          <attvalue for="0" value="predicates,prolog,python" />
          <attvalue for="1" value="https://github.com/tesseradecade/swi-orm" />
          <attvalue for="2" value="6" />
        </attvalues>
      </node>
      <node id="smallhelm/level-fact-base" label="smallhelm/level-fact-base">
        <attvalues>
          <attvalue for="0" value="datalog,datomic,immutability,ledger,query-engine" />
          <attvalue for="1" value="https://github.com/smallhelm/level-fact-base" />
          <attvalue for="2" value="48" />
        </attvalues>
      </node>
      <node id="sdbtools/void-pi" label="sdbtools/void-pi">
        <attvalues>
          <attvalue for="0" value="gprolog,prolog,void-linux,voidlinux" />
          <attvalue for="1" value="https://github.com/sdbtools/void-pi" />
          <attvalue for="2" value="23" />
        </attvalues>
      </node>
      <node id="jpellegrini/pll" label="jpellegrini/pll">
        <attvalues>
          <attvalue for="0" value="didactic,lisp,prolog,scheme" />
          <attvalue for="1" value="https://github.com/jpellegrini/pll" />
          <attvalue for="2" value="6" />
        </attvalues>
      </node>
      <node id="twolodzko/prolog-rs" label="twolodzko/prolog-rs">
        <attvalues>
          <attvalue for="0" value="prolog,prolog-implementation,prolog-interpreter,rust,rust-lang" />
          <attvalue for="1" value="https://github.com/twolodzko/prolog-rs" />
          <attvalue for="2" value="43" />
        </attvalues>
      </node>
      <node id="kovvalsky/LangPro" label="kovvalsky/LangPro">
        <attvalues>
          <attvalue for="0" value="formal-semantics,lambda-logical-form,natural-language-inference,natural-language-processing,natural-logic,natural-tableau,nli,prolog,semantic-tableau,theorem-prover,theorem-proving" />
          <attvalue for="1" value="https://github.com/kovvalsky/LangPro" />
          <attvalue for="2" value="116" />
        </attvalues>
      </node>
      <node id="logicmoo/programk" label="logicmoo/programk">
        <attvalues>
          <attvalue for="0" value="aiml,aiml-interpreter,aiml2,chatbot,prolog" />
          <attvalue for="1" value="https://github.com/logicmoo/programk" />
          <attvalue for="2" value="15" />
        </attvalues>
      </node>
      <node id="jariazavalverde/blog" label="jariazavalverde/blog">
        <attvalues>
          <attvalue for="0" value="blog,declarative-programming,functional-programming,haskell,logic-programming,prolog" />
          <attvalue for="1" value="https://github.com/jariazavalverde/blog" />
          <attvalue for="2" value="8" />
        </attvalues>
      </node>
      <node id="mistupv/SWIPrologZ3" label="mistupv/SWIPrologZ3">
        <attvalues>
          <attvalue for="0" value="api,c,prolog,swi,z3,z3-smt-solver" />
          <attvalue for="1" value="https://github.com/mistupv/SWIPrologZ3" />
          <attvalue for="2" value="14" />
        </attvalues>
      </node>
      <node id="rzese/trill" label="rzese/trill">
        <attvalues>
          <attvalue for="0" value="axiom-pinpointing,description-logics,probabilistic-description-logics,probabilistic-knowledge-bases,prolog,tableau-reasoner,trill" />
          <attvalue for="1" value="https://github.com/rzese/trill" />
          <attvalue for="2" value="13" />
        </attvalues>
      </node>
      <node id="chansey97/clprosette-miniKanren" label="chansey97/clprosette-miniKanren">
        <attvalues>
          <attvalue for="0" value="constraint-logic-programming,constraints,logic-programming,minikanren,racket,rosette,smt" />
          <attvalue for="1" value="https://github.com/chansey97/clprosette-miniKanren" />
          <attvalue for="2" value="9" />
        </attvalues>
      </node>
      <node id="Naereen/Tiny-Prolog-in-OCaml" label="Naereen/Tiny-Prolog-in-OCaml">
        <attvalues>
          <attvalue for="0" value="agregation,exemples,francais,ocaml,ocaml-library,prolog" />
          <attvalue for="1" value="https://github.com/Naereen/Tiny-Prolog-in-OCaml" />
          <attvalue for="2" value="6" />
        </attvalues>
      </node>
      <node id="MarcelRobeer/VisualNarrator" label="MarcelRobeer/VisualNarrator">
        <attvalues>
          <attvalue for="0" value="conceptual-models,prolog,requirements-engineering,requirements-quality-analysis,user-story" />
          <attvalue for="1" value="https://github.com/MarcelRobeer/VisualNarrator" />
          <attvalue for="2" value="26" />
        </attvalues>
      </node>
      <node id="Bodigrim/logict" label="Bodigrim/logict">
        <attvalues>
          <attvalue for="0" value="backtracking,logic-programming,logict,monad-transformers" />
          <attvalue for="1" value="https://github.com/Bodigrim/logict" />
          <attvalue for="2" value="86" />
        </attvalues>
      </node>
      <node id="program-spiritual/KongFuOfArchitect" label="program-spiritual/KongFuOfArchitect">
        <attvalues>
          <attvalue for="0" value="architect,architecture-guidelines,c,c-sharp,csharp,erlang,go,golang,java,javascript,lisp,nodejs,object-c,perl,prolog,python,rust,scala,swift" />
          <attvalue for="1" value="https://github.com/program-spiritual/KongFuOfArchitect" />
          <attvalue for="2" value="362" />
        </attvalues>
      </node>
      <node id="VanHakobyan/SWI-Prolog" label="VanHakobyan/SWI-Prolog">
        <attvalues>
          <attvalue for="0" value="logical-programming,prolog,prolog-programming-language,swi-prolog" />
          <attvalue for="1" value="https://github.com/VanHakobyan/SWI-Prolog" />
          <attvalue for="2" value="16" />
        </attvalues>
      </node>
      <node id="racket/datalog" label="racket/datalog">
        <attvalues>
          <attvalue for="0" value="datalog,racket" />
          <attvalue for="1" value="https://github.com/racket/datalog" />
          <attvalue for="2" value="45" />
        </attvalues>
      </node>
      <node id="microsoft/Guan" label="microsoft/Guan">
        <attvalues>
          <attvalue for="0" value="csharp,guan,library,linux,logic-programming,netstandard20,prolog,windows" />
          <attvalue for="1" value="https://github.com/microsoft/Guan" />
          <attvalue for="2" value="75" />
        </attvalues>
      </node>
      <node id="cozodb/cozo" label="cozodb/cozo">
        <attvalues>
          <attvalue for="0" value="client-server,cozo,cozoscript,cross-platform,database,datalog,embedded-database,graph,graph-algorithms,graph-database,graphdb,relational-database,single-executable" />
          <attvalue for="1" value="https://github.com/cozodb/cozo" />
          <attvalue for="2" value="3537" />
        </attvalues>
      </node>
      <node id="Aluriak/learning-ASP" label="Aluriak/learning-ASP">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,learning" />
          <attvalue for="1" value="https://github.com/Aluriak/learning-ASP" />
          <attvalue for="2" value="9" />
        </attvalues>
      </node>
      <node id="AndreaInfUFSM/elc117-2020a" label="AndreaInfUFSM/elc117-2020a">
        <attvalues>
          <attvalue for="0" value="concurrent-programming,education,functional-programming,haskell,java,logic-programming,object-oriented-programming,programming-paradigms,prolog" />
          <attvalue for="1" value="https://github.com/AndreaInfUFSM/elc117-2020a" />
          <attvalue for="2" value="7" />
        </attvalues>
      </node>
      <node id="acharal/hopes" label="acharal/hopes">
        <attvalues>
          <attvalue for="0" value="higher-order-logic,hopes,interpreter,logic-programming,prolog" />
          <attvalue for="1" value="https://github.com/acharal/hopes" />
          <attvalue for="2" value="53" />
        </attvalues>
      </node>
      <node id="triska/bitcoinolog" label="triska/bitcoinolog">
        <attvalues>
          <attvalue for="0" value="bitcoin,bitcoin-wallet,cryptocurrency,elliptic-curves,offline-capable,prolog" />
          <attvalue for="1" value="https://github.com/triska/bitcoinolog" />
          <attvalue for="2" value="22" />
        </attvalues>
      </node>
      <node id="Swirrl/matcha" label="Swirrl/matcha">
        <attvalues>
          <attvalue for="0" value="clojure,datalog,dsl,linked-data,query-engine,rdf,sparql" />
          <attvalue for="1" value="https://github.com/Swirrl/matcha" />
          <attvalue for="2" value="22" />
        </attvalues>
      </node>
      <node id="MNoorFawi/logic-programming-in-python" label="MNoorFawi/logic-programming-in-python">
        <attvalues>
          <attvalue for="0" value="logic-programming,prolog,python" />
          <attvalue for="1" value="https://github.com/MNoorFawi/logic-programming-in-python" />
          <attvalue for="2" value="9" />
        </attvalues>
      </node>
      <node id="Vastyen/paradigmas-de-la-programacion" label="Vastyen/paradigmas-de-la-programacion">
        <attvalues>
          <attvalue for="0" value="drracket,functional-programming,java,logic-programming,oop,poo,prolog,scheme" />
          <attvalue for="1" value="https://github.com/Vastyen/paradigmas-de-la-programacion" />
          <attvalue for="2" value="6" />
        </attvalues>
      </node>
      <node id="ciao-lang/ciao_playground" label="ciao-lang/ciao_playground">
        <attvalues>
          <attvalue for="0" value="ciao-prolog,playground,prolog,webassembly" />
          <attvalue for="1" value="https://github.com/ciao-lang/ciao_playground" />
          <attvalue for="2" value="8" />
        </attvalues>
      </node>
      <node id="marcode24/weekly-challenges" label="marcode24/weekly-challenges">
        <attvalues>
          <attvalue for="0" value="challenge,challenges,challenges-solutions,coding-challenge,coding-challenges,eslint,hackerrank,hackerrank-solutions,husky,husky-hooks,javascript,jest,lint-staged,logic-programming,mouredev,roadmap,solutions,testing,unit-testing,weekly-challenges" />
          <attvalue for="1" value="https://github.com/marcode24/weekly-challenges" />
          <attvalue for="2" value="7" />
        </attvalues>
      </node>
      <node id="santifa/pasp-mode" label="santifa/pasp-mode">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,emacs,major-mode" />
          <attvalue for="1" value="https://github.com/santifa/pasp-mode" />
          <attvalue for="2" value="12" />
        </attvalues>
      </node>
      <node id="iliastsa/woof" label="iliastsa/woof">
        <attvalues>
          <attvalue for="0" value="bottom-up,datalog,interpreter,logic-programming,python,well-founded" />
          <attvalue for="1" value="https://github.com/iliastsa/woof" />
          <attvalue for="2" value="8" />
        </attvalues>
      </node>
      <node id="harshjuly12/SWI-Prolog" label="harshjuly12/SWI-Prolog">
        <attvalues>
          <attvalue for="0" value="prolog,prolog-exercises,prolog-implementation,prolog-programming-language" />
          <attvalue for="1" value="https://github.com/harshjuly12/SWI-Prolog" />
          <attvalue for="2" value="9" />
        </attvalues>
      </node>
      <node id="schwering/golog" label="schwering/golog">
        <attvalues>
          <attvalue for="0" value="action-language,functional-programming,golog,haskell,logic-programming,plan-recognition,situation-calculus" />
          <attvalue for="1" value="https://github.com/schwering/golog" />
          <attvalue for="2" value="6" />
        </attvalues>
      </node>
      <node id="galactose/wviews" label="galactose/wviews">
        <attvalues>
          <attvalue for="0" value="automated-reasoning,logic-programming" />
          <attvalue for="1" value="https://github.com/galactose/wviews" />
          <attvalue for="2" value="8" />
        </attvalues>
      </node>
      <node id="EricZinda/InductorHtn" label="EricZinda/InductorHtn">
        <attvalues>
          <attvalue for="0" value="ai,c-plus-plus,cplusplus,cpp,cpp-library,hierarchical-task-network,htn,prolog-implementation,python,python-3,python-library,python3" />
          <attvalue for="1" value="https://github.com/EricZinda/InductorHtn" />
          <attvalue for="2" value="37" />
        </attvalues>
      </node>
      <node id="mndrix/regex" label="mndrix/regex">
        <attvalues>
          <attvalue for="0" value="prolog,regex,regular-expression" />
          <attvalue for="1" value="https://github.com/mndrix/regex" />
          <attvalue for="2" value="17" />
        </attvalues>
      </node>
      <node id="jariazavalverde/prolog-smtlib" label="jariazavalverde/prolog-smtlib">
        <attvalues>
          <attvalue for="0" value="parser,prolog,smtlib,smtlibv2,swi-prolog" />
          <attvalue for="1" value="https://github.com/jariazavalverde/prolog-smtlib" />
          <attvalue for="2" value="8" />
        </attvalues>
      </node>
      <node id="pchampio/othello-prolog" label="pchampio/othello-prolog">
        <attvalues>
          <attvalue for="0" value="alpha-beta,artificial-intelligence,board-game,logic-programming,minmax,othello-game,prolog,student-project,swipl,univ-lemans" />
          <attvalue for="1" value="https://github.com/pchampio/othello-prolog" />
          <attvalue for="2" value="16" />
        </attvalues>
      </node>
      <node id="mdiep/Kanren.swift" label="mdiep/Kanren.swift">
        <attvalues>
          <attvalue for="0" value="kanren,logic-programming,swift" />
          <attvalue for="1" value="https://github.com/mdiep/Kanren.swift" />
          <attvalue for="2" value="12" />
        </attvalues>
      </node>
      <node id="gbaptista/datomic-pro-docker" label="gbaptista/datomic-pro-docker">
        <attvalues>
          <attvalue for="0" value="clojure,datalog,datomic,datomic-database,datomic-flare,datomic-pro" />
          <attvalue for="1" value="https://github.com/gbaptista/datomic-pro-docker" />
          <attvalue for="2" value="19" />
        </attvalues>
      </node>
      <node id="roboticslab-cseiitg/ProjectTartarus" label="roboticslab-cseiitg/ProjectTartarus">
        <attvalues>
          <attvalue for="0" value="agent,agent-oriented-programming,autonomous-agents,cyber-physical-systems,emulation,internet-of-things,mobile-agents,multi-agent-systems,prolog,raspberry-pi,swi-prolog,tartarus" />
          <attvalue for="1" value="https://github.com/roboticslab-cseiitg/ProjectTartarus" />
          <attvalue for="2" value="18" />
        </attvalues>
      </node>
      <node id="HKUNLP/SymGen" label="HKUNLP/SymGen">
        <attvalues>
          <attvalue for="0" value="bash,codex,data-generation,mtop,prolog,python,sql,symbolic-language" />
          <attvalue for="1" value="https://github.com/HKUNLP/SymGen" />
          <attvalue for="2" value="17" />
        </attvalues>
      </node>
      <node id="noprompt/meander" label="noprompt/meander">
        <attvalues>
          <attvalue for="0" value="logic-programming,pattern-matching,program-transformation,substitution,term-rewriting,unification" />
          <attvalue for="1" value="https://github.com/noprompt/meander" />
          <attvalue for="2" value="941" />
        </attvalues>
      </node>
      <node id="UberPyro/prowl" label="UberPyro/prowl">
        <attvalues>
          <attvalue for="0" value="based-stack-based-language,forth-like,functional-programming,logic-programming,ocaml,proglangs-discord,programming-language,regex,stack-based-language" />
          <attvalue for="1" value="https://github.com/UberPyro/prowl" />
          <attvalue for="2" value="42" />
        </attvalues>
      </node>
      <node id="mcsoto/cosmos" label="mcsoto/cosmos">
        <attvalues>
          <attvalue for="0" value="composite-types,cosmos,cosmos-language,functors,interpreter,language,logic-programming,prolog" />
          <attvalue for="1" value="https://github.com/mcsoto/cosmos" />
          <attvalue for="2" value="175" />
        </attvalues>
      </node>
      <node id="rla/docstore" label="rla/docstore">
        <attvalues>
          <attvalue for="0" value="database,swi-prolog" />
          <attvalue for="1" value="https://github.com/rla/docstore" />
          <attvalue for="2" value="10" />
        </attvalues>
      </node>
      <node id="matchilling/brexit" label="matchilling/brexit">
        <attvalues>
          <attvalue for="0" value="adventure-game,brexit,prolog" />
          <attvalue for="1" value="https://github.com/matchilling/brexit" />
          <attvalue for="2" value="15" />
        </attvalues>
      </node>
      <node id="langston-barrett/duckalog" label="langston-barrett/duckalog">
        <attvalues>
          <attvalue for="0" value="datalog,duckdb" />
          <attvalue for="1" value="https://github.com/langston-barrett/duckalog" />
          <attvalue for="2" value="9" />
        </attvalues>
      </node>
      <node id="EvgSkv/logica" label="EvgSkv/logica">
        <attvalues>
          <attvalue for="0" value="bigquery,datalog,language,logic-programming,logica,postgresql,presto,prolog,prolog-implementation,sql,sqlite,trino" />
          <attvalue for="1" value="https://github.com/EvgSkv/logica" />
          <attvalue for="2" value="1946" />
        </attvalues>
      </node>
      <node id="simply-logical/simply-logical" label="simply-logical/simply-logical">
        <attvalues>
          <attvalue for="0" value="jupyter-book,prolog,simply-logical,swish" />
          <attvalue for="1" value="https://github.com/simply-logical/simply-logical" />
          <attvalue for="2" value="132" />
        </attvalues>
      </node>
      <node id="the-kenny/hellschreiber" label="the-kenny/hellschreiber">
        <attvalues>
          <attvalue for="0" value="database,datalog,datomic,persistence,rust,sqlite" />
          <attvalue for="1" value="https://github.com/the-kenny/hellschreiber" />
          <attvalue for="2" value="10" />
        </attvalues>
      </node>
      <node id="triska/clpb" label="triska/clpb">
        <attvalues>
          <attvalue for="0" value="bdd,clp,constraint-programming,constraints,independent-sets,matchsticks-puzzle,prolog,sat,satisfiability" />
          <attvalue for="1" value="https://github.com/triska/clpb" />
          <attvalue for="2" value="39" />
        </attvalues>
      </node>
      <node id="jsakamoto/Spprologa" label="jsakamoto/Spprologa">
        <attvalues>
          <attvalue for="0" value="blazor,prolog,spa" />
          <attvalue for="1" value="https://github.com/jsakamoto/Spprologa" />
          <attvalue for="2" value="6" />
        </attvalues>
      </node>
      <node id="Shen-Language/shen-sources" label="Shen-Language/shen-sources">
        <attvalues>
          <attvalue for="0" value="functional-programming,lisp,logic-programming,programming-language,prolog,shen,static-typing" />
          <attvalue for="1" value="https://github.com/Shen-Language/shen-sources" />
          <attvalue for="2" value="368" />
        </attvalues>
      </node>
      <node id="hargettp/prolog_lsp" label="hargettp/prolog_lsp">
        <attvalues>
          <attvalue for="0" value="language-server-protocol,prolog" />
          <attvalue for="1" value="https://github.com/hargettp/prolog_lsp" />
          <attvalue for="2" value="11" />
        </attvalues>
      </node>
      <node id="jimmyg1997/NTUA-ai-artificial-intelligence" label="jimmyg1997/NTUA-ai-artificial-intelligence">
        <attvalues>
          <attvalue for="0" value="a-star,artificial-intelligence,google-maps,java,ntua-ece,prolog,taxi-app" />
          <attvalue for="1" value="https://github.com/jimmyg1997/NTUA-ai-artificial-intelligence" />
          <attvalue for="2" value="14" />
        </attvalues>
      </node>
      <node id="oldcompcz/micro-PROLOG" label="oldcompcz/micro-PROLOG">
        <attvalues>
          <attvalue for="0" value="prolog,z80,zx-spectrum" />
          <attvalue for="1" value="https://github.com/oldcompcz/micro-PROLOG" />
          <attvalue for="2" value="35" />
        </attvalues>
      </node>
      <node id="AndreaInfUFSM/elc117-2024b" label="AndreaInfUFSM/elc117-2024b">
        <attvalues>
          <attvalue for="0" value="concurrent-programming,functional-programming,haskell,java,liascript-course,logic-programming,object-oriented-programming,programming-paradigms,prolog" />
          <attvalue for="1" value="https://github.com/AndreaInfUFSM/elc117-2024b" />
          <attvalue for="2" value="20" />
        </attvalues>
      </node>
      <node id="dcasella/k-means" label="dcasella/k-means">
        <attvalues>
          <attvalue for="0" value="c,common-lisp,kmeans,prolog,ruby" />
          <attvalue for="1" value="https://github.com/dcasella/k-means" />
          <attvalue for="2" value="6" />
        </attvalues>
      </node>
      <node id="abhigupta768/CSE-231N-AI_assignments" label="abhigupta768/CSE-231N-AI_assignments">
        <attvalues>
          <attvalue for="0" value="artificial-intelligence,hidden-markov-model,kmeans-clustering,linear-regression,logic-programming,logistic-regression,searching-algorithms,viterbi-algorithm" />
          <attvalue for="1" value="https://github.com/abhigupta768/CSE-231N-AI_assignments" />
          <attvalue for="2" value="7" />
        </attvalues>
      </node>
      <node id="averykatko/buffalo" label="averykatko/buffalo">
        <attvalues>
          <attvalue for="0" value="buffalo,grammar,prolog,swi-prolog" />
          <attvalue for="1" value="https://github.com/averykatko/buffalo" />
          <attvalue for="2" value="9" />
        </attvalues>
      </node>
      <node id="AAAI-DISIM-UnivAQ/DALI" label="AAAI-DISIM-UnivAQ/DALI">
        <attvalues>
          <attvalue for="0" value="event-driven,logic-programming,multi-agent-systems,prolog" />
          <attvalue for="1" value="https://github.com/AAAI-DISIM-UnivAQ/DALI" />
          <attvalue for="2" value="39" />
        </attvalues>
      </node>
      <node id="haldai/Jurassic.pl" label="haldai/Jurassic.pl">
        <attvalues>
          <attvalue for="0" value="interface,julia,prolog,swi-prolog" />
          <attvalue for="1" value="https://github.com/haldai/Jurassic.pl" />
          <attvalue for="2" value="27" />
        </attvalues>
      </node>
      <node id="jasonfilippou/Prob-EC" label="jasonfilippou/Prob-EC">
        <attvalues>
          <attvalue for="0" value="event-forecasting,event-recognition,knowledge-representation,logic-programming,probabilistic-graphical-models,probabilistic-logic-programming,prolog,statistical-relational-learning" />
          <attvalue for="1" value="https://github.com/jasonfilippou/Prob-EC" />
          <attvalue for="2" value="6" />
        </attvalues>
      </node>
      <node id="philzook58/egglog0" label="philzook58/egglog0">
        <attvalues>
          <attvalue for="0" value="prolog,rust,theorem-prover" />
          <attvalue for="1" value="https://github.com/philzook58/egglog0" />
          <attvalue for="2" value="65" />
        </attvalues>
      </node>
      <node id="lps-js/lps.js" label="lps-js/lps.js">
        <attvalues>
          <attvalue for="0" value="ai,artificial-intelligence,interpreter,javascript,language,languages,library,logic,lps,production-systems,programming-language,prolog" />
          <attvalue for="1" value="https://github.com/lps-js/lps.js" />
          <attvalue for="2" value="51" />
        </attvalues>
      </node>
      <node id="norswap/prolog-dry" label="norswap/prolog-dry">
        <attvalues>
          <attvalue for="0" value="backtracking,dcg,logic-programming,prolog" />
          <attvalue for="1" value="https://github.com/norswap/prolog-dry" />
          <attvalue for="2" value="41" />
        </attvalues>
      </node>
      <node id="reprograma/on6-xp-s3-logica-js" label="reprograma/on6-xp-s3-logica-js">
        <attvalues>
          <attvalue for="0" value="javascript,logic-programming,logica-de-programacao,nodejs" />
          <attvalue for="1" value="https://github.com/reprograma/on6-xp-s3-logica-js" />
          <attvalue for="2" value="6" />
        </attvalues>
      </node>
      <node id="luc-tielen/bakery" label="luc-tielen/bakery">
        <attvalues>
          <attvalue for="0" value="datalog,eclair,webassembly,webserver" />
          <attvalue for="1" value="https://github.com/luc-tielen/bakery" />
          <attvalue for="2" value="8" />
        </attvalues>
      </node>
      <node id="Aluriak/clyngor" label="Aluriak/clyngor">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,python,python-library,python3,wrapper" />
          <attvalue for="1" value="https://github.com/Aluriak/clyngor" />
          <attvalue for="2" value="34" />
        </attvalues>
      </node>
      <node id="Kaljurand/owl-verbalizer" label="Kaljurand/owl-verbalizer">
        <attvalues>
          <attvalue for="0" value="ace,owl,swi-prolog,web-ontology-language" />
          <attvalue for="1" value="https://github.com/Kaljurand/owl-verbalizer" />
          <attvalue for="2" value="37" />
        </attvalues>
      </node>
      <node id="joes-esolangs/cassette" label="joes-esolangs/cassette">
        <attvalues>
          <attvalue for="0" value="concatenative,functional-programming,homoiconic,interpreter,metaprogramming,programming-language,programming-languages,prolog,tape-based,untyped" />
          <attvalue for="1" value="https://github.com/joes-esolangs/cassette" />
          <attvalue for="2" value="16" />
        </attvalues>
      </node>
      <node id="ParhamP/Natural_Logic_Interpreter" label="ParhamP/Natural_Logic_Interpreter">
        <attvalues>
          <attvalue for="0" value="logic-design,logic-programming,logical-knowledge-inference,logical-knowledge-representation,natural-language" />
          <attvalue for="1" value="https://github.com/ParhamP/Natural_Logic_Interpreter" />
          <attvalue for="2" value="116" />
        </attvalues>
      </node>
      <node id="bennaaym/adventure-game-prolog" label="bennaaym/adventure-game-prolog">
        <attvalues>
          <attvalue for="0" value="game,logic-programming,natural-language-processing,prolog,prolog-programming-language,text-based-game" />
          <attvalue for="1" value="https://github.com/bennaaym/adventure-game-prolog" />
          <attvalue for="2" value="9" />
        </attvalues>
      </node>
      <node id="matsud224/wamcompiler" label="matsud224/wamcompiler">
        <attvalues>
          <attvalue for="0" value="common-lisp,compiler,prolog,wam,warren-abstract-machine" />
          <attvalue for="1" value="https://github.com/matsud224/wamcompiler" />
          <attvalue for="2" value="42" />
        </attvalues>
      </node>
      <node id="TOTBWF/MLogic" label="TOTBWF/MLogic">
        <attvalues>
          <attvalue for="0" value="memes,ml,prolog" />
          <attvalue for="1" value="https://github.com/TOTBWF/MLogic" />
          <attvalue for="2" value="7" />
        </attvalues>
      </node>
      <node id="logicmoo/wam_common_lisp" label="logicmoo/wam_common_lisp">
        <attvalues>
          <attvalue for="0" value="common-lisp,greenspun,lisp,lisp-compiler,lisp-interpreter,object-oriented-programming,oop,prolog,prolog-programmers,prolog-programming-language,swi,swi-prolog,swi-prolog-library,yap-prolog" />
          <attvalue for="1" value="https://github.com/logicmoo/wam_common_lisp" />
          <attvalue for="2" value="101" />
        </attvalues>
      </node>
      <node id="alexanyernas/Ejercicios-Practicos" label="alexanyernas/Ejercicios-Practicos">
        <attvalues>
          <attvalue for="0" value="exercises,logic,logic-programming,practice" />
          <attvalue for="1" value="https://github.com/alexanyernas/Ejercicios-Practicos" />
          <attvalue for="2" value="404" />
        </attvalues>
      </node>
      <node id="yabetancourt/LimitExpert" label="yabetancourt/LimitExpert">
        <attvalues>
          <attvalue for="0" value="ai,derivatives,java,katex,limit,math,prolog,vaadin,webapp" />
          <attvalue for="1" value="https://github.com/yabetancourt/LimitExpert" />
          <attvalue for="2" value="8" />
        </attvalues>
      </node>
      <node id="djellemah/upl" label="djellemah/upl">
        <attvalues>
          <attvalue for="0" value="ffi,prolog,ruby,rubygem,swi-prolog" />
          <attvalue for="1" value="https://github.com/djellemah/upl" />
          <attvalue for="2" value="9" />
        </attvalues>
      </node>
      <node id="guregu/pengine" label="guregu/pengine">
        <attvalues>
          <attvalue for="0" value="go,logic-programming,pengines,prolog,swipl" />
          <attvalue for="1" value="https://github.com/guregu/pengine" />
          <attvalue for="2" value="7" />
        </attvalues>
      </node>
      <node id="wouterbeek/prolog_library_collection" label="wouterbeek/prolog_library_collection">
        <attvalues>
          <attvalue for="0" value="prolog,swi-prolog" />
          <attvalue for="1" value="https://github.com/wouterbeek/prolog_library_collection" />
          <attvalue for="2" value="88" />
        </attvalues>
      </node>
      <node id="triska/clpz" label="triska/clpz">
        <attvalues>
          <attvalue for="0" value="clp,constraint-programming,constraints,integer-arithmetic,prolog,sicstus-prolog" />
          <attvalue for="1" value="https://github.com/triska/clpz" />
          <attvalue for="2" value="191" />
        </attvalues>
      </node>
      <node id="Average-user/adventofcode-pl-2017" label="Average-user/adventofcode-pl-2017">
        <attvalues>
          <attvalue for="0" value="advent-of-code,advent-of-code-2017,adventofcode,adventofcode2017,aoc,aoc2017,prolog" />
          <attvalue for="1" value="https://github.com/Average-user/adventofcode-pl-2017" />
          <attvalue for="2" value="9" />
        </attvalues>
      </node>
      <node id="remexre/wam-tutorial-reconstruction" label="remexre/wam-tutorial-reconstruction">
        <attvalues>
          <attvalue for="0" value="prolog,rust,warren-abstract-machine" />
          <attvalue for="1" value="https://github.com/remexre/wam-tutorial-reconstruction" />
          <attvalue for="2" value="10" />
        </attvalues>
      </node>
      <node id="vvvvalvalval/datalog-rules" label="vvvvalvalval/datalog-rules">
        <attvalues>
          <attvalue for="0" value="clojure,datalog,datascript,datomic" />
          <attvalue for="1" value="https://github.com/vvvvalvalval/datalog-rules" />
          <attvalue for="2" value="48" />
        </attvalues>
      </node>
      <node id="dragonwasrobot/learn-prolog-now-exercises" label="dragonwasrobot/learn-prolog-now-exercises">
        <attvalues>
          <attvalue for="0" value="prolog" />
          <attvalue for="1" value="https://github.com/dragonwasrobot/learn-prolog-now-exercises" />
          <attvalue for="2" value="288" />
        </attvalues>
      </node>
      <node id="guregu/trealla-js" label="guregu/trealla-js">
        <attvalues>
          <attvalue for="0" value="javascript,logic-programming,prolog,webassembly" />
          <attvalue for="1" value="https://github.com/guregu/trealla-js" />
          <attvalue for="2" value="46" />
        </attvalues>
      </node>
      <node id="jakublevy/leetcode" label="jakublevy/leetcode">
        <attvalues>
          <attvalue for="0" value="haskell,leetcode,leetcode-haskell,leetcode-prolog,leetcode-solutions,prolog" />
          <attvalue for="1" value="https://github.com/jakublevy/leetcode" />
          <attvalue for="2" value="8" />
        </attvalues>
      </node>
      <node id="acharal/wam" label="acharal/wam">
        <attvalues>
          <attvalue for="0" value="logic-programming,machine,prolog,prolog-compiler,wam,warren" />
          <attvalue for="1" value="https://github.com/acharal/wam" />
          <attvalue for="2" value="19" />
        </attvalues>
      </node>
      <node id="mkremins/felt" label="mkremins/felt">
        <attvalues>
          <attvalue for="0" value="datalog,datascript,interactive-storytelling,narrative-generation,story-generation,story-sifting" />
          <attvalue for="1" value="https://github.com/mkremins/felt" />
          <attvalue for="2" value="19" />
        </attvalues>
      </node>
      <node id="MNoorFawi/pytholog" label="MNoorFawi/pytholog">
        <attvalues>
          <attvalue for="0" value="backtracking,logic-programming,neuro-symbolic-learning,prolog,prolog-syntax,python,symbolic-artificial-intelligence" />
          <attvalue for="1" value="https://github.com/MNoorFawi/pytholog" />
          <attvalue for="2" value="120" />
        </attvalues>
      </node>
      <node id="zhzLuke96/prolog-tut-cn" label="zhzLuke96/prolog-tut-cn">
        <attvalues>
          <attvalue for="0" value="chinese,logic-programming,prolog,tutorial" />
          <attvalue for="1" value="https://github.com/zhzLuke96/prolog-tut-cn" />
          <attvalue for="2" value="7" />
        </attvalues>
      </node>
      <node id="nuc134r/ExpertSystem" label="nuc134r/ExpertSystem">
        <attvalues>
          <attvalue for="0" value="logic-programming" />
          <attvalue for="1" value="https://github.com/nuc134r/ExpertSystem" />
          <attvalue for="2" value="7" />
        </attvalues>
      </node>
      <node id="rla/alternative-router" label="rla/alternative-router">
        <attvalues>
          <attvalue for="0" value="route-handler,router,routing-engine,swi-prolog" />
          <attvalue for="1" value="https://github.com/rla/alternative-router" />
          <attvalue for="2" value="11" />
        </attvalues>
      </node>
      <node id="titouanfreville/SupinfoResources" label="titouanfreville/SupinfoResources">
        <attvalues>
          <attvalue for="0" value="analyser,artificial-intelligence,automata,automation,c,caml,checker,course-material,functional-programming,grammars,lex,lisp,logic,logic-programming,parser,prologue,robotics,yacc" />
          <attvalue for="1" value="https://github.com/titouanfreville/SupinfoResources" />
          <attvalue for="2" value="6" />
        </attvalues>
      </node>
      <node id="xieyuheng/exo" label="xieyuheng/exo">
        <attvalues>
          <attvalue for="0" value="elixir,logic-programming,microkanren,minikanren,the-reasoned-schemer" />
          <attvalue for="1" value="https://github.com/xieyuheng/exo" />
          <attvalue for="2" value="11" />
        </attvalues>
      </node>
      <node id="Symontoclay/SymOntoClay" label="Symontoclay/SymOntoClay">
        <attvalues>
          <attvalue for="0" value="ai,ai-engine,artificial-intelligence,game-ai,game-engine,logic-programming,poc,programming-language,proof-of-concept,symontoclay,unity,unity3d" />
          <attvalue for="1" value="https://github.com/Symontoclay/SymOntoClay" />
          <attvalue for="2" value="6" />
        </attvalues>
      </node>
      <node id="GuilhermeNobrega/C-Projects" label="GuilhermeNobrega/C-Projects">
        <attvalues>
          <attvalue for="0" value="c,colab,colab-notebook,colab-tutorial,csharp,introduction-to-algorithms,logic-programming" />
          <attvalue for="1" value="https://github.com/GuilhermeNobrega/C-Projects" />
          <attvalue for="2" value="6" />
        </attvalues>
      </node>
      <node id="prove-rs/z3.rs" label="prove-rs/z3.rs">
        <attvalues>
          <attvalue for="0" value="ffi-bindings,logic-programming,rust,rust-bindings,smt,smt-solver" />
          <attvalue for="1" value="https://github.com/prove-rs/z3.rs" />
          <attvalue for="2" value="377" />
        </attvalues>
      </node>
      <node id="AndreaInfUFSM/elc117-2022b" label="AndreaInfUFSM/elc117-2022b">
        <attvalues>
          <attvalue for="0" value="concurrent-programming,education,functional-programming,java,liascript-course,logic-programming,object-oriented-programming,programming-paradigms" />
          <attvalue for="1" value="https://github.com/AndreaInfUFSM/elc117-2022b" />
          <attvalue for="2" value="9" />
        </attvalues>
      </node>
      <node id="dmeoli/PESAD" label="dmeoli/PESAD">
        <attvalues>
          <attvalue for="0" value="anxiety-disorders,artificial-intelligence,expert,expert-system,knowledge,knowledge-base-system,prolog" />
          <attvalue for="1" value="https://github.com/dmeoli/PESAD" />
          <attvalue for="2" value="6" />
        </attvalues>
      </node>
      <node id="CapelliC/hhprolog" label="CapelliC/hhprolog">
        <attvalues>
          <attvalue for="0" value="cpp,javascript,prolog,prolog-implementation,virtual-machine" />
          <attvalue for="1" value="https://github.com/CapelliC/hhprolog" />
          <attvalue for="2" value="11" />
        </attvalues>
      </node>
      <node id="namin/clpset-miniKanren" label="namin/clpset-miniKanren">
        <attvalues>
          <attvalue for="0" value="constraints,logic-programming,minikanren,paper-implementations,prolog,scheme" />
          <attvalue for="1" value="https://github.com/namin/clpset-miniKanren" />
          <attvalue for="2" value="22" />
        </attvalues>
      </node>
      <node id="raghavio/RelationFinder" label="raghavio/RelationFinder">
        <attvalues>
          <attvalue for="0" value="family-tree,kinship,kinship-information,prolog" />
          <attvalue for="1" value="https://github.com/raghavio/RelationFinder" />
          <attvalue for="2" value="9" />
        </attvalues>
      </node>
      <node id="rntz/datafun" label="rntz/datafun">
        <attvalues>
          <attvalue for="0" value="compiler,datalog,monotonicity,programming-language,query,semilattices,type-theory" />
          <attvalue for="1" value="https://github.com/rntz/datafun" />
          <attvalue for="2" value="392" />
        </attvalues>
      </node>
      <node id="acorrenson/modulus" label="acorrenson/modulus">
        <attvalues>
          <attvalue for="0" value="hacktoberfest,logic,logic-programming,sat,sat-solver,smt,smt-lib,smt-solver,solver,solvers,theories" />
          <attvalue for="1" value="https://github.com/acorrenson/modulus" />
          <attvalue for="2" value="10" />
        </attvalues>
      </node>
      <node id="alpha-asp/Alpha" label="alpha-asp/Alpha">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,lazy-grounding,logic-programming,solver" />
          <attvalue for="1" value="https://github.com/alpha-asp/Alpha" />
          <attvalue for="2" value="60" />
        </attvalues>
      </node>
      <node id="cicada-lang/chimera" label="cicada-lang/chimera">
        <attvalues>
          <attvalue for="0" value="json,logic,logic-programming,programming-language" />
          <attvalue for="1" value="https://github.com/cicada-lang/chimera" />
          <attvalue for="2" value="72" />
        </attvalues>
      </node>
      <node id="cybercongress/cyber" label="cybercongress/cyber">
        <attvalues>
          <attvalue for="0" value="agi,ai,collective-intelligence,collective-knowledge,cosmos-sdk,cosmwasm,cuda,cyb,cyber,datalog,ethereum,google,ibc,ipfs,p2p,search,supercomputer,superintelligence,tendermint,web3" />
          <attvalue for="1" value="https://github.com/cybercongress/cyber" />
          <attvalue for="2" value="43" />
        </attvalues>
      </node>
      <node id="triska/lisprolog" label="triska/lisprolog">
        <attvalues>
          <attvalue for="0" value="interpreter,lisp,prolog" />
          <attvalue for="1" value="https://github.com/triska/lisprolog" />
          <attvalue for="2" value="145" />
        </attvalues>
      </node>
      <node id="gkastrinis/panda" label="gkastrinis/panda">
        <attvalues>
          <attvalue for="0" value="compiler,datalog,datalog-compiler" />
          <attvalue for="1" value="https://github.com/gkastrinis/panda" />
          <attvalue for="2" value="19" />
        </attvalues>
      </node>
      <node id="triska/ediprolog" label="triska/ediprolog">
        <attvalues>
          <attvalue for="0" value="emacs,emacs-lisp,prolog,prolog-process" />
          <attvalue for="1" value="https://github.com/triska/ediprolog" />
          <attvalue for="2" value="40" />
        </attvalues>
      </node>
      <node id="guregu/predicates" label="guregu/predicates">
        <attvalues>
          <attvalue for="0" value="dynamodb,go,prolog" />
          <attvalue for="1" value="https://github.com/guregu/predicates" />
          <attvalue for="2" value="15" />
        </attvalues>
      </node>
      <node id="tadashi9e/gprolog-utf8" label="tadashi9e/gprolog-utf8">
        <attvalues>
          <attvalue for="0" value="compiler,gnu,prolog,utf-8" />
          <attvalue for="1" value="https://github.com/tadashi9e/gprolog-utf8" />
          <attvalue for="2" value="7" />
        </attvalues>
      </node>
      <node id="rntz/minikanren-datalog" label="rntz/minikanren-datalog">
        <attvalues>
          <attvalue for="0" value="datalog,kanren,logic-programming,minikanren" />
          <attvalue for="1" value="https://github.com/rntz/minikanren-datalog" />
          <attvalue for="2" value="24" />
        </attvalues>
      </node>
      <node id="Aluriak/PowerGrASP" label="Aluriak/PowerGrASP">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,graph-compression,python,python-library" />
          <attvalue for="1" value="https://github.com/Aluriak/PowerGrASP" />
          <attvalue for="2" value="12" />
        </attvalues>
      </node>
      <node id="ekzhang/crepe" label="ekzhang/crepe">
        <attvalues>
          <attvalue for="0" value="datalog,logic-programming,rust,souffle,static-analysis,translator" />
          <attvalue for="1" value="https://github.com/ekzhang/crepe" />
          <attvalue for="2" value="468" />
        </attvalues>
      </node>
      <node id="snejugal/typedKanren" label="snejugal/typedKanren">
        <attvalues>
          <attvalue for="0" value="haskell,logic-programming,minikanren" />
          <attvalue for="1" value="https://github.com/snejugal/typedKanren" />
          <attvalue for="2" value="8" />
        </attvalues>
      </node>
      <node id="viebel/klipse" label="viebel/klipse">
        <attvalues>
          <attvalue for="0" value="brainfuck,clojure,clojurescript,code-evaluation,codemirror-editor,common-lisp,evaluation,interactive-snippets,javascript,klipse-plugin,lua,ocaml,prolog,python,react,reactjs,reasonml,ruby,scheme" />
          <attvalue for="1" value="https://github.com/viebel/klipse" />
          <attvalue for="2" value="3121" />
        </attvalues>
      </node>
      <node id="FLHonker/Awesome-Neural-Logic" label="FLHonker/Awesome-Neural-Logic">
        <attvalues>
          <attvalue for="0" value="causal,causal-inference,causality,first-order-logic,inductive-logic-programming,logic,logic-programming,markov,neural-network" />
          <attvalue for="1" value="https://github.com/FLHonker/Awesome-Neural-Logic" />
          <attvalue for="2" value="133" />
        </attvalues>
      </node>
      <node id="hylang/hydiomatic" label="hylang/hydiomatic">
        <attvalues>
          <attvalue for="0" value="hy,logic-programming,minikanren,python,static-code-analysis,symbolic-computation" />
          <attvalue for="1" value="https://github.com/hylang/hydiomatic" />
          <attvalue for="2" value="80" />
        </attvalues>
      </node>
      <node id="sdiehl/haskell-picosat" label="sdiehl/haskell-picosat">
        <attvalues>
          <attvalue for="0" value="haskell,haskell-library,logic,logic-programming,picosat,picosat-solver,sat-solver" />
          <attvalue for="1" value="https://github.com/sdiehl/haskell-picosat" />
          <attvalue for="2" value="16" />
        </attvalues>
      </node>
      <node id="NEKERAFA/CS-IndustryLP" label="NEKERAFA/CS-IndustryLP">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,cities-skylines,csharp,csharp-library,final-project,logic-programming,potassco" />
          <attvalue for="1" value="https://github.com/NEKERAFA/CS-IndustryLP" />
          <attvalue for="2" value="7" />
        </attvalues>
      </node>
      <node id="Cuttlerat/prolog_bot" label="Cuttlerat/prolog_bot">
        <attvalues>
          <attvalue for="0" value="prolog,prolog-programming-language,telegram-bot" />
          <attvalue for="1" value="https://github.com/Cuttlerat/prolog_bot" />
          <attvalue for="2" value="6" />
        </attvalues>
      </node>
      <node id="aditeyabaral/DDCO-Lab-UE18CS207" label="aditeyabaral/DDCO-Lab-UE18CS207">
        <attvalues>
          <attvalue for="0" value="computer-organization,digital-design,icarus-verilog,logic-programming,verilog,verilog-code" />
          <attvalue for="1" value="https://github.com/aditeyabaral/DDCO-Lab-UE18CS207" />
          <attvalue for="2" value="16" />
        </attvalues>
      </node>
      <node id="LukasZahradnik/PyNeuraLogic" label="LukasZahradnik/PyNeuraLogic">
        <attvalues>
          <attvalue for="0" value="deep-learning,differentiable-programming,geometric-deep-learning,graph-neural-networks,logic-programming,machine-learning,python,pytorch,relational-learning" />
          <attvalue for="1" value="https://github.com/LukasZahradnik/PyNeuraLogic" />
          <attvalue for="2" value="288" />
        </attvalues>
      </node>
      <node id="jsakamoto/Prolog-on-Browser" label="jsakamoto/Prolog-on-Browser">
        <attvalues>
          <attvalue for="0" value="blazor,blazor-client-side,blazor-wasm,blazor-web-assembly,blazor-webassembly,prolog,prolog-interpreter" />
          <attvalue for="1" value="https://github.com/jsakamoto/Prolog-on-Browser" />
          <attvalue for="2" value="8" />
        </attvalues>
      </node>
      <node id="DeMaCS-UNICAL/Angry-HEX" label="DeMaCS-UNICAL/Angry-HEX">
        <attvalues>
          <attvalue for="0" value="angry-birds,artificial-intelligence,logic-programming,planning" />
          <attvalue for="1" value="https://github.com/DeMaCS-UNICAL/Angry-HEX" />
          <attvalue for="2" value="18" />
        </attvalues>
      </node>
      <node id="crossbowerbt/prolog-talk" label="crossbowerbt/prolog-talk">
        <attvalues>
          <attvalue for="0" value="artificial-intelligence,common-lisp,natural-language-processing,prolog" />
          <attvalue for="1" value="https://github.com/crossbowerbt/prolog-talk" />
          <attvalue for="2" value="22" />
        </attvalues>
      </node>
      <node id="ice1000/learn" label="ice1000/learn">
        <attvalues>
          <attvalue for="0" value="android,c,clojure,cpp,csharp,dart,go,groovy,haskell,java,jni,kotlin,learning,prolog,python" />
          <attvalue for="1" value="https://github.com/ice1000/learn" />
          <attvalue for="2" value="47" />
        </attvalues>
      </node>
      <node id="comnik/declarative-dataflow" label="comnik/declarative-dataflow">
        <attvalues>
          <attvalue for="0" value="datalog,differential-dataflows,graphql,reactive-query-engine,relational" />
          <attvalue for="1" value="https://github.com/comnik/declarative-dataflow" />
          <attvalue for="2" value="316" />
        </attvalues>
      </node>
      <node id="JakubGrobelny/aurox-lang" label="JakubGrobelny/aurox-lang">
        <attvalues>
          <attvalue for="0" value="compilers,cpp,dcg,functional-programming,interpreter,logic-programming,logical-programming,ml,parametric-polymorphism,parsing,programming-languages,prolog,statically-typed,toy-language,transpiler,university-project" />
          <attvalue for="1" value="https://github.com/JakubGrobelny/aurox-lang" />
          <attvalue for="2" value="10" />
        </attvalues>
      </node>
      <node id="massimo-nocentini/microkanrenpy" label="massimo-nocentini/microkanrenpy">
        <attvalues>
          <attvalue for="0" value="logic-programming,microkanren,minikanren,python3" />
          <attvalue for="1" value="https://github.com/massimo-nocentini/microkanrenpy" />
          <attvalue for="2" value="9" />
        </attvalues>
      </node>
      <node id="alejandroaperez1994g/js-shopping-wizard" label="alejandroaperez1994g/js-shopping-wizard">
        <attvalues>
          <attvalue for="0" value="css,forms-validation,html,javascript,logic-programming" />
          <attvalue for="1" value="https://github.com/alejandroaperez1994g/js-shopping-wizard" />
          <attvalue for="2" value="13" />
        </attvalues>
      </node>
      <node id="Attempto/APE" label="Attempto/APE">
        <attvalues>
          <attvalue for="0" value="ace,attempto,cnl,nlp,swi-prolog" />
          <attvalue for="1" value="https://github.com/Attempto/APE" />
          <attvalue for="2" value="194" />
        </attvalues>
      </node>
      <node id="lorenzosinisi/retex" label="lorenzosinisi/retex">
        <attvalues>
          <attvalue for="0" value="elixir,graph,logic-programming,protocol,rete,rete-algorithm,rule-engine" />
          <attvalue for="1" value="https://github.com/lorenzosinisi/retex" />
          <attvalue for="2" value="63" />
        </attvalues>
      </node>
      <node id="vijayphoenix/IITH-BTECH-Courses" label="vijayphoenix/IITH-BTECH-Courses">
        <attvalues>
          <attvalue for="0" value="compiler,computer-architecture,computer-networks,computer-vision,cool-compiler,data-structures-and-algorithms,dbms,eiffel,iith,image-processing,lattice-theory,linear-optimization,numerical-methods,operating-system,popl,prolog,reinforcement-learning,representation-learning" />
          <attvalue for="1" value="https://github.com/vijayphoenix/IITH-BTECH-Courses" />
          <attvalue for="2" value="8" />
        </attvalues>
      </node>
      <node id="luc-tielen/eclair-lang" label="luc-tielen/eclair-lang">
        <attvalues>
          <attvalue for="0" value="compiler,datalog,haskell,llvm,logic-programming" />
          <attvalue for="1" value="https://github.com/luc-tielen/eclair-lang" />
          <attvalue for="2" value="222" />
        </attvalues>
      </node>
      <node id="itsanshulverma/du-cs-undergrad-course" label="itsanshulverma/du-cs-undergrad-course">
        <attvalues>
          <attvalue for="0" value="android,assembly,computer-science,cpp,du,html-css-javascript,java,lex,prolog,python,r,undergraduate-course,yacc" />
          <attvalue for="1" value="https://github.com/itsanshulverma/du-cs-undergrad-course" />
          <attvalue for="2" value="20" />
        </attvalues>
      </node>
      <node id="Sintrastes/Montague" label="Sintrastes/Montague">
        <attvalues>
          <attvalue for="0" value="kripke-model,logic-programming,nlp,parsing" />
          <attvalue for="1" value="https://github.com/Sintrastes/Montague" />
          <attvalue for="2" value="17" />
        </attvalues>
      </node>
      <node id="rla/simple-template" label="rla/simple-template">
        <attvalues>
          <attvalue for="0" value="swi-prolog,template-engine" />
          <attvalue for="1" value="https://github.com/rla/simple-template" />
          <attvalue for="2" value="32" />
        </attvalues>
      </node>
      <node id="terohuttunen/proto-vulcan" label="terohuttunen/proto-vulcan">
        <attvalues>
          <attvalue for="0" value="logic-programming,rust" />
          <attvalue for="1" value="https://github.com/terohuttunen/proto-vulcan" />
          <attvalue for="2" value="12" />
        </attvalues>
      </node>
      <node id="Herb-AI/HerbSWIPL.jl" label="Herb-AI/HerbSWIPL.jl">
        <attvalues>
          <attvalue for="0" value="artificial-intelligence,automated-reasoning,julia,logic,logic-programming,prolog" />
          <attvalue for="1" value="https://github.com/Herb-AI/HerbSWIPL.jl" />
          <attvalue for="2" value="13" />
        </attvalues>
      </node>
      <node id="mndrix/func" label="mndrix/func">
        <attvalues>
          <attvalue for="0" value="functions,prolog" />
          <attvalue for="1" value="https://github.com/mndrix/func" />
          <attvalue for="2" value="19" />
        </attvalues>
      </node>
      <node id="rla/node-swipl-stdio" label="rla/node-swipl-stdio">
        <attvalues>
          <attvalue for="0" value="nodejs,prolog,swi-prolog" />
          <attvalue for="1" value="https://github.com/rla/node-swipl-stdio" />
          <attvalue for="2" value="10" />
        </attvalues>
      </node>
      <node id="slovnicki/pLam" label="slovnicki/pLam">
        <attvalues>
          <attvalue for="0" value="church,church-encoding,computability,computability-theory,functional-programming,interpreter,lambda,lambda-calculus,language,logic-programming,numeral-systems,programming-language" />
          <attvalue for="1" value="https://github.com/slovnicki/pLam" />
          <attvalue for="2" value="451" />
        </attvalues>
      </node>
      <node id="yuriqdev/WinCCflexLogViewer" label="yuriqdev/WinCCflexLogViewer">
        <attvalues>
          <attvalue for="0" value="analyzer,datalog,datalogviewer,hmi,plc,s7,s7-plc,siemens,siemens-plc,tiaportal,wincc,wincc-oa,winccflex,zedgraph" />
          <attvalue for="1" value="https://github.com/yuriqdev/WinCCflexLogViewer" />
          <attvalue for="2" value="28" />
        </attvalues>
      </node>
      <node id="logtalk-actions/setup-swi-prolog" label="logtalk-actions/setup-swi-prolog">
        <attvalues>
          <attvalue for="0" value="action,logtalk,prolog" />
          <attvalue for="1" value="https://github.com/logtalk-actions/setup-swi-prolog" />
          <attvalue for="2" value="6" />
        </attvalues>
      </node>
      <node id="knowsys/nemo" label="knowsys/nemo">
        <attvalues>
          <attvalue for="0" value="datalog,knowledge-graph,language,logic,logic-programming,rdf,rule-engine" />
          <attvalue for="1" value="https://github.com/knowsys/nemo" />
          <attvalue for="2" value="118" />
        </attvalues>
      </node>
      <node id="pipe01/LogicScript" label="pipe01/LogicScript">
        <attvalues>
          <attvalue for="0" value="dsl,logic-programming,verilog" />
          <attvalue for="1" value="https://github.com/pipe01/LogicScript" />
          <attvalue for="2" value="11" />
        </attvalues>
      </node>
      <node id="ciao-lang/ciaopp" label="ciao-lang/ciaopp">
        <attvalues>
          <attvalue for="0" value="abstract-interpretation,ciao-prolog,prolog,static-analysis" />
          <attvalue for="1" value="https://github.com/ciao-lang/ciaopp" />
          <attvalue for="2" value="11" />
        </attvalues>
      </node>
      <node id="Paradigmas-2-2017/akinator-of-thrones" label="Paradigmas-2-2017/akinator-of-thrones">
        <attvalues>
          <attvalue for="0" value="akinator,logic-programming,prolog" />
          <attvalue for="1" value="https://github.com/Paradigmas-2-2017/akinator-of-thrones" />
          <attvalue for="2" value="9" />
        </attvalues>
      </node>
      <node id="rla/dict-schema" label="rla/dict-schema">
        <attvalues>
          <attvalue for="0" value="swi-prolog,validation,validator" />
          <attvalue for="1" value="https://github.com/rla/dict-schema" />
          <attvalue for="2" value="10" />
        </attvalues>
      </node>
      <node id="namin/clpsmt-miniKanren" label="namin/clpsmt-miniKanren">
        <attvalues>
          <attvalue for="0" value="constraints,logic-programming,minikanren,scheme,smt" />
          <attvalue for="1" value="https://github.com/namin/clpsmt-miniKanren" />
          <attvalue for="2" value="35" />
        </attvalues>
      </node>
      <node id="kanugurajesh/RAG-Gemini" label="kanugurajesh/RAG-Gemini">
        <attvalues>
          <attvalue for="0" value="gemini-api,generative-ai,logic-programming,pineconedb,rag-template,retrieval-augmented-generation,script,semantic-search,typescript,vector-database" />
          <attvalue for="1" value="https://github.com/kanugurajesh/RAG-Gemini" />
          <attvalue for="2" value="11" />
        </attvalues>
      </node>
      <node id="danyvarghese/PyGol" label="danyvarghese/PyGol">
        <attvalues>
          <attvalue for="0" value="abductive-commonsense-reasoning,abductive-learning,artificial-intelligence,automated-data-science,automated-machine-learning,automl,explainable-ai,explainable-ml,inductive-logic-programming,inference-engine,inverse-entailment,logic-programming,machine-learning,pygol" />
          <attvalue for="1" value="https://github.com/danyvarghese/PyGol" />
          <attvalue for="2" value="13" />
        </attvalues>
      </node>
      <node id="hemansnation/Python-For-Data-Professionals" label="hemansnation/Python-For-Data-Professionals">
        <attvalues>
          <attvalue for="0" value="data-analytics,data-professionals,data-science,exploratory-data-analysis,logic-programming,machine-learning,pandas,python" />
          <attvalue for="1" value="https://github.com/hemansnation/Python-For-Data-Professionals" />
          <attvalue for="2" value="42" />
        </attvalues>
      </node>
      <node id="Periklismant/oPIEC" label="Periklismant/oPIEC">
        <attvalues>
          <attvalue for="0" value="activity-recognition,complex-event-processing,complex-event-recognition,event-calculus,logic-programming,probabilistic-reasoning,stream-reasoning" />
          <attvalue for="1" value="https://github.com/Periklismant/oPIEC" />
          <attvalue for="2" value="18" />
        </attvalues>
      </node>
      <node id="vmware/database-stream-processor-compiler" label="vmware/database-stream-processor-compiler">
        <attvalues>
          <attvalue for="0" value="database,datalog,incremental,programming-language,streaming" />
          <attvalue for="1" value="https://github.com/vmware/database-stream-processor-compiler" />
          <attvalue for="2" value="16" />
        </attvalues>
      </node>
      <node id="giovanniberti/logicamente" label="giovanniberti/logicamente">
        <attvalues>
          <attvalue for="0" value="first-order-logic,logic,prolog,python,sld" />
          <attvalue for="1" value="https://github.com/giovanniberti/logicamente" />
          <attvalue for="2" value="7" />
        </attvalues>
      </node>
      <node id="cfrioux/miscoto" label="cfrioux/miscoto">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,bioinformatics,microbiome,symbiont" />
          <attvalue for="1" value="https://github.com/cfrioux/miscoto" />
          <attvalue for="2" value="7" />
        </attvalues>
      </node>
      <node id="epilys/ocaml-prolog" label="epilys/ocaml-prolog">
        <attvalues>
          <attvalue for="0" value="ocaml,prolog,prolog-implementation" />
          <attvalue for="1" value="https://github.com/epilys/ocaml-prolog" />
          <attvalue for="2" value="7" />
        </attvalues>
      </node>
      <node id="RichardMoot/LinearOne" label="RichardMoot/LinearOne">
        <attvalues>
          <attvalue for="0" value="displacement-calculus-grammars,first-order-logic,latex,linear-logic,logic-programming,proof-net,swi-prolog,theorem-proving" />
          <attvalue for="1" value="https://github.com/RichardMoot/LinearOne" />
          <attvalue for="2" value="18" />
        </attvalues>
      </node>
      <node id="agustingianni/Utilities" label="agustingianni/Utilities">
        <attvalues>
          <attvalue for="0" value="arm,exploiting,ida,idapython,prolog,research,scripts,vulndev" />
          <attvalue for="1" value="https://github.com/agustingianni/Utilities" />
          <attvalue for="2" value="56" />
        </attvalues>
      </node>
      <node id="DeMaCS-UNICAL/LoIDE" label="DeMaCS-UNICAL/LoIDE">
        <attvalues>
          <attvalue for="0" value="editing,editor,ide,logic-based-languages,logic-formalisms,logic-programming,web-app,web-application,web-based-ide,web-editor" />
          <attvalue for="1" value="https://github.com/DeMaCS-UNICAL/LoIDE" />
          <attvalue for="2" value="25" />
        </attvalues>
      </node>
      <node id="HarvardPL/AbcDatalog" label="HarvardPL/AbcDatalog">
        <attvalues>
          <attvalue for="0" value="datalog,declarative-programming,knowledge-base,logic-programming,rule-engine" />
          <attvalue for="1" value="https://github.com/HarvardPL/AbcDatalog" />
          <attvalue for="2" value="58" />
        </attvalues>
      </node>
      <node id="lyxell/logifix" label="lyxell/logifix">
        <attvalues>
          <attvalue for="0" value="datalog,program-repair,program-transformation,static-analysis" />
          <attvalue for="1" value="https://github.com/lyxell/logifix" />
          <attvalue for="2" value="17" />
        </attvalues>
      </node>
      <node id="triska/presprover" label="triska/presprover">
        <attvalues>
          <attvalue for="0" value="presburger-arithmetic,prolog,theorem-proving" />
          <attvalue for="1" value="https://github.com/triska/presprover" />
          <attvalue for="2" value="8" />
        </attvalues>
      </node>
      <node id="CoNarrative/precept" label="CoNarrative/precept">
        <attvalues>
          <attvalue for="0" value="clojure,clojurescript,declarative-programming,functional-reactive-programming,functional-relational-programming,logic-programming,rules" />
          <attvalue for="1" value="https://github.com/CoNarrative/precept" />
          <attvalue for="2" value="660" />
        </attvalues>
      </node>
      <node id="HackerFoo/poprc" label="HackerFoo/poprc">
        <attvalues>
          <attvalue for="0" value="compiler,concatenative,dependent-types,functional,high-level-synthesis,language,linear-logic,logic-programming,non-deterministic,partial-evaluators,popr,popr-compiler,supercompiler,verilog" />
          <attvalue for="1" value="https://github.com/HackerFoo/poprc" />
          <attvalue for="2" value="246" />
        </attvalues>
      </node>
      <node id="Adamouization/ASP-Timetable" label="Adamouization/ASP-Timetable">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,asp,clingo,json,prolog,python,tkinter,tkinter-gui" />
          <attvalue for="1" value="https://github.com/Adamouization/ASP-Timetable" />
          <attvalue for="2" value="6" />
        </attvalues>
      </node>
      <node id="nirantak/wsiwn" label="nirantak/wsiwn">
        <attvalues>
          <attvalue for="0" value="expert-system,flask,prolog,python,python3,react,swi-prolog,web-scraping" />
          <attvalue for="1" value="https://github.com/nirantak/wsiwn" />
          <attvalue for="2" value="10" />
        </attvalues>
      </node>
      <node id="R4356th/HelloWorld" label="R4356th/HelloWorld">
        <attvalues>
          <attvalue for="0" value="bash,c,cpp,csharp,fortran,go,hello-world,html,java,javascript,js,lisp,pascal,php,prolog,python,r,ruby,swift" />
          <attvalue for="1" value="https://github.com/R4356th/HelloWorld" />
          <attvalue for="2" value="7" />
        </attvalues>
      </node>
      <node id="Ducasse/SOUL" label="Ducasse/SOUL">
        <attvalues>
          <attvalue for="0" value="logic-programming,pharo,prolog,unification" />
          <attvalue for="1" value="https://github.com/Ducasse/SOUL" />
          <attvalue for="2" value="12" />
        </attvalues>
      </node>
      <node id="triska/simsttab" label="triska/simsttab">
        <attvalues>
          <attvalue for="0" value="clp,constraint-programming,prolog,school,timetable,timetabling-engine" />
          <attvalue for="1" value="https://github.com/triska/simsttab" />
          <attvalue for="2" value="25" />
        </attvalues>
      </node>
      <node id="plast-lab/doop" label="plast-lab/doop">
        <attvalues>
          <attvalue for="0" value="datalog,doop,java,pointer-analysis" />
          <attvalue for="1" value="https://github.com/plast-lab/doop" />
          <attvalue for="2" value="173" />
        </attvalues>
      </node>
      <node id="ptarau/TypesAndProofs" label="ptarau/TypesAndProofs">
        <attvalues>
          <attvalue for="0" value="all-binary-trees-generator,all-set-partitions-gnerator,beta-reduction,boltzmann-sampler,curry-howard-isomorphism,de-bruijn-notation,intuitionistic-logic,knuth-s-algorithm-r,lambda-terms,normal-forms,prolog,random-binary-tree,random-set-partition,remy-s-algorithm,tautology-checking,theorem-prover,type-inference" />
          <attvalue for="1" value="https://github.com/ptarau/TypesAndProofs" />
          <attvalue for="2" value="33" />
        </attvalues>
      </node>
      <node id="STMicroelectronics/fp-sns-datalog1" label="STMicroelectronics/fp-sns-datalog1">
        <attvalues>
          <attvalue for="0" value="condition-monitoring,cube,datalog,datalogger,sensor,sensors-data-collection,stm32,stwin" />
          <attvalue for="1" value="https://github.com/STMicroelectronics/fp-sns-datalog1" />
          <attvalue for="2" value="8" />
        </attvalues>
      </node>
      <node id="lps-js/lps-studio" label="lps-js/lps-studio">
        <attvalues>
          <attvalue for="0" value="ai,app,artificial-intelligence,canvas,electron,electron-app,gui,html5,html5-canvas,logic,logic-programming,lps,simulation,visualisation,visualization" />
          <attvalue for="1" value="https://github.com/lps-js/lps-studio" />
          <attvalue for="2" value="30" />
        </attvalues>
      </node>
      <node id="AyeshaShaukat/Project-Battle-Ships-Game" label="AyeshaShaukat/Project-Battle-Ships-Game">
        <attvalues>
          <attvalue for="0" value="arrays,console-game,game,java,logic-programming,procedural-programming,simple" />
          <attvalue for="1" value="https://github.com/AyeshaShaukat/Project-Battle-Ships-Game" />
          <attvalue for="2" value="38" />
        </attvalues>
      </node>
      <node id="triska/scc" label="triska/scc">
        <attvalues>
          <attvalue for="0" value="graph,prolog,scc,tarjan-algorithm" />
          <attvalue for="1" value="https://github.com/triska/scc" />
          <attvalue for="2" value="8" />
        </attvalues>
      </node>
      <node id="wouterbeek/prolog_graphviz" label="wouterbeek/prolog_graphviz">
        <attvalues>
          <attvalue for="0" value="graph,graphviz,graphviz-dot,graphviz-dot-language,prolog,swi-prolog,visualization" />
          <attvalue for="1" value="https://github.com/wouterbeek/prolog_graphviz" />
          <attvalue for="2" value="15" />
        </attvalues>
      </node>
      <node id="epost/purescript-datalog-parsers" label="epost/purescript-datalog-parsers">
        <attvalues>
          <attvalue for="0" value="datalog,parser,purescript" />
          <attvalue for="1" value="https://github.com/epost/purescript-datalog-parsers" />
          <attvalue for="2" value="11" />
        </attvalues>
      </node>
      <node id="triska/trs" label="triska/trs">
        <attvalues>
          <attvalue for="0" value="prolog,term-rewriting,trs" />
          <attvalue for="1" value="https://github.com/triska/trs" />
          <attvalue for="2" value="16" />
        </attvalues>
      </node>
      <node id="ekzhang/percival" label="ekzhang/percival">
        <attvalues>
          <attvalue for="0" value="charts,data-visualization,datalog,dsl,logic-programming,notebook,query-language,reactive,visualization" />
          <attvalue for="1" value="https://github.com/ekzhang/percival" />
          <attvalue for="2" value="612" />
        </attvalues>
      </node>
      <node id="fnogatz/plammar" label="fnogatz/plammar">
        <attvalues>
          <attvalue for="0" value="definite-clause-grammar,parser,prolog,serializer,swi-prolog" />
          <attvalue for="1" value="https://github.com/fnogatz/plammar" />
          <attvalue for="2" value="14" />
        </attvalues>
      </node>
      <node id="hugo53/awesome-logging" label="hugo53/awesome-logging">
        <attvalues>
          <attvalue for="0" value="backend,confluent,datalog,elasticstack,fluentd,flume,kafka,logging,logstash,syslog,syslog-ng" />
          <attvalue for="1" value="https://github.com/hugo53/awesome-logging" />
          <attvalue for="2" value="9" />
        </attvalues>
      </node>
      <node id="migafgarcia/prolog-checkers" label="migafgarcia/prolog-checkers">
        <attvalues>
          <attvalue for="0" value="alpha-beta-pruning,checkers,minimax,prolog,terminal-game" />
          <attvalue for="1" value="https://github.com/migafgarcia/prolog-checkers" />
          <attvalue for="2" value="10" />
        </attvalues>
      </node>
      <node id="zeko868/schedule-generator" label="zeko868/schedule-generator">
        <attvalues>
          <attvalue for="0" value="ajax,logic-programming,prolog,scheduling-problem,timetable,timetable-generator,timetabling,web-application,web-sockets" />
          <attvalue for="1" value="https://github.com/zeko868/schedule-generator" />
          <attvalue for="2" value="9" />
        </attvalues>
      </node>
      <node id="ekaf/wordnet-prolog" label="ekaf/wordnet-prolog">
        <attvalues>
          <attvalue for="0" value="princeton-wordnet,prolog,relational-databases,wordnet" />
          <attvalue for="1" value="https://github.com/ekaf/wordnet-prolog" />
          <attvalue for="2" value="30" />
        </attvalues>
      </node>
      <node id="eazar001/yesbot" label="eazar001/yesbot">
        <attvalues>
          <attvalue for="0" value="bot,irc,irc-bot,irc-client,prolog,swi-prolog" />
          <attvalue for="1" value="https://github.com/eazar001/yesbot" />
          <attvalue for="2" value="20" />
        </attvalues>
      </node>
      <node id="RAbraham/mercylog" label="RAbraham/mercylog">
        <attvalues>
          <attvalue for="0" value="datalog,python" />
          <attvalue for="1" value="https://github.com/RAbraham/mercylog" />
          <attvalue for="2" value="14" />
        </attvalues>
      </node>
      <node id="eth-sri/securify2" label="eth-sri/securify2">
        <attvalues>
          <attvalue for="0" value="datalog,ethereum,security,smart-contract,solidity,static-analysis,vulnerability" />
          <attvalue for="1" value="https://github.com/eth-sri/securify2" />
          <attvalue for="2" value="597" />
        </attvalues>
      </node>
      <node id="xmonader/prolog-rands" label="xmonader/prolog-rands">
        <attvalues>
          <attvalue for="0" value="constraint-satisfaction-problem,prolog,puzzles,riddles" />
          <attvalue for="1" value="https://github.com/xmonader/prolog-rands" />
          <attvalue for="2" value="73" />
        </attvalues>
      </node>
      <node id="chrisPiemonte/argonaut" label="chrisPiemonte/argonaut">
        <attvalues>
          <attvalue for="0" value="argumentation,argumentation-mining,argumentation-theory,artificial-intelligence,jupyter,knowledge-base,networkx,online-debates,praw,prolog,python,reddit,stackoverflow,tweepy,twitter" />
          <attvalue for="1" value="https://github.com/chrisPiemonte/argonaut" />
          <attvalue for="2" value="9" />
        </attvalues>
      </node>
      <node id="BlidiWajdi/Mujeed-Arabic-Prolog" label="BlidiWajdi/Mujeed-Arabic-Prolog">
        <attvalues>
          <attvalue for="0" value="apl,arabic-prolog,bnf,logic-programming,mujeed,programming-language,unification-algorithm" />
          <attvalue for="1" value="https://github.com/BlidiWajdi/Mujeed-Arabic-Prolog" />
          <attvalue for="2" value="6" />
        </attvalues>
      </node>
      <node id="souffle-lang/souffle" label="souffle-lang/souffle">
        <attvalues>
          <attvalue for="0" value="datalog,logic-programming,souffle,static-code-analysis,translator" />
          <attvalue for="1" value="https://github.com/souffle-lang/souffle" />
          <attvalue for="2" value="963" />
        </attvalues>
      </node>
      <node id="hakank/hakank" label="hakank/hakank">
        <attvalues>
          <attvalue for="0" value="ampl,answer-set-programming,choco,comet,constraint-programming,constraint-satisfaction,eclipse-clp,essence,frink,gecode,jacop,jgap,minizinc,numberjack,picat,poplog,prolog,setl,sicstus-prolog,z3py" />
          <attvalue for="1" value="https://github.com/hakank/hakank" />
          <attvalue for="2" value="374" />
        </attvalues>
      </node>
      <node id="logictensornetworks/logictensornetworks" label="logictensornetworks/logictensornetworks">
        <attvalues>
          <attvalue for="0" value="fuzzy-logic,logic-programming,machinelearning,tensorflow" />
          <attvalue for="1" value="https://github.com/logictensornetworks/logictensornetworks" />
          <attvalue for="2" value="287" />
        </attvalues>
      </node>
      <node id="inconvergent/cl-grph" label="inconvergent/cl-grph">
        <attvalues>
          <attvalue for="0" value="common-lisp,data-structures,datalog,functional-programming,generative-art,generattive,graph,immutable,incomplete,lisp,wip" />
          <attvalue for="1" value="https://github.com/inconvergent/cl-grph" />
          <attvalue for="2" value="63" />
        </attvalues>
      </node>
      <node id="zambonin/functional-logic" label="zambonin/functional-logic">
        <attvalues>
          <attvalue for="0" value="functional-programming,haskell,logic-programming,prolog,python,tex,ufsc" />
          <attvalue for="1" value="https://github.com/zambonin/functional-logic" />
          <attvalue for="2" value="7" />
        </attvalues>
      </node>
      <node id="ekzhang/ukanren-rs" label="ekzhang/ukanren-rs">
        <attvalues>
          <attvalue for="0" value="functional-programming,language,logic-programming,microkanren,minikanren,prolog,rust" />
          <attvalue for="1" value="https://github.com/ekzhang/ukanren-rs" />
          <attvalue for="2" value="112" />
        </attvalues>
      </node>
      <node id="benhuds/wangs-algorithm" label="benhuds/wangs-algorithm">
        <attvalues>
          <attvalue for="0" value="prolog,propositional-logic,theorem-prover" />
          <attvalue for="1" value="https://github.com/benhuds/wangs-algorithm" />
          <attvalue for="2" value="7" />
        </attvalues>
      </node>
      <node id="tomgrek/zincbase" label="tomgrek/zincbase">
        <attvalues>
          <attvalue for="0" value="graph-neural-networks,knowledge-base,knowledge-graph,neural-network,prolog" />
          <attvalue for="1" value="https://github.com/tomgrek/zincbase" />
          <attvalue for="2" value="286" />
        </attvalues>
      </node>
      <node id="s-webber/projog" label="s-webber/projog">
        <attvalues>
          <attvalue for="0" value="java,prolog,prolog-interpreter" />
          <attvalue for="1" value="https://github.com/s-webber/projog" />
          <attvalue for="2" value="37" />
        </attvalues>
      </node>
      <node id="abdulzakrt/WumpusWorld-CSharp" label="abdulzakrt/WumpusWorld-CSharp">
        <attvalues>
          <attvalue for="0" value="agent,csharp,game,gui,knowledgebase,knowledgebase-agents,prolog,swi-prolog,swipl,world,wpf,wpf-application,wumpus,wumpusworld" />
          <attvalue for="1" value="https://github.com/abdulzakrt/WumpusWorld-CSharp" />
          <attvalue for="2" value="15" />
        </attvalues>
      </node>
      <node id="klaudiosinani/awesome-prolog" label="klaudiosinani/awesome-prolog">
        <attvalues>
          <attvalue for="0" value="awesome,list,logic,programming,prolog" />
          <attvalue for="1" value="https://github.com/klaudiosinani/awesome-prolog" />
          <attvalue for="2" value="524" />
        </attvalues>
      </node>
      <node id="eazar001/bfg-prolog" label="eazar001/bfg-prolog">
        <attvalues>
          <attvalue for="0" value="bfg,bfg9000,compiler,interpreter,language,logic,logic-programming,prolog,prolog-implementation,prolog-interpreter,prolog-programming-language,rust,virtual-machine,vm,wam,warren-abstract-machine" />
          <attvalue for="1" value="https://github.com/eazar001/bfg-prolog" />
          <attvalue for="2" value="8" />
        </attvalues>
      </node>
      <node id="uclnlp/ntp" label="uclnlp/ntp">
        <attvalues>
          <attvalue for="0" value="deep-learning,nips-2017,prolog,tensorflow" />
          <attvalue for="1" value="https://github.com/uclnlp/ntp" />
          <attvalue for="2" value="88" />
        </attvalues>
      </node>
      <node id="philzook58/snakelog" label="philzook58/snakelog">
        <attvalues>
          <attvalue for="0" value="datalog,logic" />
          <attvalue for="1" value="https://github.com/philzook58/snakelog" />
          <attvalue for="2" value="11" />
        </attvalues>
      </node>
      <node id="shettyvarshaa/PRINCIPLES-OF-AI" label="shettyvarshaa/PRINCIPLES-OF-AI">
        <attvalues>
          <attvalue for="0" value="alphabeta-pruning,artificial-intelligence,chatbot,crossword-puzzle,fuzzy-logic,nimgame,prolog-programming-language" />
          <attvalue for="1" value="https://github.com/shettyvarshaa/PRINCIPLES-OF-AI" />
          <attvalue for="2" value="38" />
        </attvalues>
      </node>
      <node id="EKGF/rdfox-rs" label="EKGF/rdfox-rs">
        <attvalues>
          <attvalue for="0" value="datalog,ekg,kg,knowledge-graph,owl-ontology,rdf,rust,sparql" />
          <attvalue for="1" value="https://github.com/EKGF/rdfox-rs" />
          <attvalue for="2" value="11" />
        </attvalues>
      </node>
      <node id="kiranandcode/SWIPL-OCaml" label="kiranandcode/SWIPL-OCaml">
        <attvalues>
          <attvalue for="0" value="logic,ocaml,prolog" />
          <attvalue for="1" value="https://github.com/kiranandcode/SWIPL-OCaml" />
          <attvalue for="2" value="6" />
        </attvalues>
      </node>
      <node id="ML-KULeuven/problog" label="ML-KULeuven/problog">
        <attvalues>
          <attvalue for="0" value="aproblog,dtproblog,lfi-problog,probabilistic,probabilistic-inference,probabilistic-logic-programming,probabilistic-programming,problog,prolog" />
          <attvalue for="1" value="https://github.com/ML-KULeuven/problog" />
          <attvalue for="2" value="331" />
        </attvalues>
      </node>
      <node id="huangyz0918/TankLogo" label="huangyz0918/TankLogo">
        <attvalues>
          <attvalue for="0" value="game,logic-programming,netlogo,tank,tank-game,teaching,tech" />
          <attvalue for="1" value="https://github.com/huangyz0918/TankLogo" />
          <attvalue for="2" value="50" />
        </attvalues>
      </node>
      <node id="msv-lab/modus" label="msv-lab/modus">
        <attvalues>
          <attvalue for="0" value="build-system,datalog,docker,dockerfile,language,reproducible-builds" />
          <attvalue for="1" value="https://github.com/msv-lab/modus" />
          <attvalue for="2" value="278" />
        </attvalues>
      </node>
      <node id="ericdallo/gregflix" label="ericdallo/gregflix">
        <attvalues>
          <attvalue for="0" value="cast,chrome-cast,clojure,clojure-development,compojure,css,css3,datalog,datomic,friend,html,html5,html5-video,lein,leiningen,ring,ring-middleware,stream,video" />
          <attvalue for="1" value="https://github.com/ericdallo/gregflix" />
          <attvalue for="2" value="9" />
        </attvalues>
      </node>
      <node id="rla/prolog-markdown" label="rla/prolog-markdown">
        <attvalues>
          <attvalue for="0" value="markdown,markdown-parser,swi-prolog" />
          <attvalue for="1" value="https://github.com/rla/prolog-markdown" />
          <attvalue for="2" value="20" />
        </attvalues>
      </node>
      <node id="AndreasVolkmann/Prolok" label="AndreasVolkmann/Prolok">
        <attvalues>
          <attvalue for="0" value="kotlin,prolog" />
          <attvalue for="1" value="https://github.com/AndreasVolkmann/Prolok" />
          <attvalue for="2" value="6" />
        </attvalues>
      </node>
      <node id="rm-hull/wam" label="rm-hull/wam">
        <attvalues>
          <attvalue for="0" value="clojure,parser-combinators,prolog-implementation,tutorial,unification,wam" />
          <attvalue for="1" value="https://github.com/rm-hull/wam" />
          <attvalue for="2" value="27" />
        </attvalues>
      </node>
      <node id="npaun/chemlogic" label="npaun/chemlogic">
        <attvalues>
          <attvalue for="0" value="chemistry,clp,cwsf,dcg,education,prolog" />
          <attvalue for="1" value="https://github.com/npaun/chemlogic" />
          <attvalue for="2" value="9" />
        </attvalues>
      </node>
      <node id="utdb/judged" label="utdb/judged">
        <attvalues>
          <attvalue for="0" value="datalog,monte-carlo-simulation,probabilistic" />
          <attvalue for="1" value="https://github.com/utdb/judged" />
          <attvalue for="2" value="18" />
        </attvalues>
      </node>
      <node id="jdswalker/Interpreter-in-Prolog" label="jdswalker/Interpreter-in-Prolog">
        <attvalues>
          <attvalue for="0" value="interpreter,lexer,parser,prolog,prolog-cfg,prolog-interpreter,swi-prolog,tokenizer" />
          <attvalue for="1" value="https://github.com/jdswalker/Interpreter-in-Prolog" />
          <attvalue for="2" value="14" />
        </attvalues>
      </node>
      <node id="AILab-FOI/pyxf" label="AILab-FOI/pyxf">
        <attvalues>
          <attvalue for="0" value="eclipse,ergo-lite,flora-2,interface,prolog,python,swipl,xsb" />
          <attvalue for="1" value="https://github.com/AILab-FOI/pyxf" />
          <attvalue for="2" value="11" />
        </attvalues>
      </node>
      <node id="grin-compiler/souffle-cfa-optimization-experiment" label="grin-compiler/souffle-cfa-optimization-experiment">
        <attvalues>
          <attvalue for="0" value="cfa,closures,control-flow-analysis,datalog,functional-programming,haskell,lazy-evaluation,souffle,static-analysis,stg" />
          <attvalue for="1" value="https://github.com/grin-compiler/souffle-cfa-optimization-experiment" />
          <attvalue for="2" value="8" />
        </attvalues>
      </node>
      <node id="sultanov-team/xtdb-tarantool" label="sultanov-team/xtdb-tarantool">
        <attvalues>
          <attvalue for="0" value="clojure,datalog,tarantool,xtdb,xtdb-module" />
          <attvalue for="1" value="https://github.com/sultanov-team/xtdb-tarantool" />
          <attvalue for="2" value="11" />
        </attvalues>
      </node>
      <node id="JanWielemaker/swi-prolog-wasm" label="JanWielemaker/swi-prolog-wasm">
        <attvalues>
          <attvalue for="0" value="prolog,webassembly" />
          <attvalue for="1" value="https://github.com/JanWielemaker/swi-prolog-wasm" />
          <attvalue for="2" value="39" />
        </attvalues>
      </node>
      <node id="arkark/d-prolog" label="arkark/d-prolog">
        <attvalues>
          <attvalue for="0" value="dlang,parser,prolog,repl" />
          <attvalue for="1" value="https://github.com/arkark/d-prolog" />
          <attvalue for="2" value="25" />
        </attvalues>
      </node>
      <node id="jdormit/sicp-logic" label="jdormit/sicp-logic">
        <attvalues>
          <attvalue for="0" value="clojure,datalog,logic-programming,sicp" />
          <attvalue for="1" value="https://github.com/jdormit/sicp-logic" />
          <attvalue for="2" value="68" />
        </attvalues>
      </node>
      <node id="google/neural-logic-machines" label="google/neural-logic-machines">
        <attvalues>
          <attvalue for="0" value="logic-programming,neuro-symbolic-learning,reinforcement-learning" />
          <attvalue for="1" value="https://github.com/google/neural-logic-machines" />
          <attvalue for="2" value="283" />
        </attvalues>
      </node>
      <node id="amzuko/gotalog" label="amzuko/gotalog">
        <attvalues>
          <attvalue for="0" value="datalog,golang" />
          <attvalue for="1" value="https://github.com/amzuko/gotalog" />
          <attvalue for="2" value="24" />
        </attvalues>
      </node>
      <node id="GustikS/NeuraLogic" label="GustikS/NeuraLogic">
        <attvalues>
          <attvalue for="0" value="deep-learning,differentiable-programming,logic-programming,machine-learning,relational-learning" />
          <attvalue for="1" value="https://github.com/GustikS/NeuraLogic" />
          <attvalue for="2" value="102" />
        </attvalues>
      </node>
      <node id="uuverifiers/eldarica" label="uuverifiers/eldarica">
        <attvalues>
          <attvalue for="0" value="horn-clauses,model-checker,prolog,smt-solver,smt2,verification" />
          <attvalue for="1" value="https://github.com/uuverifiers/eldarica" />
          <attvalue for="2" value="83" />
        </attvalues>
      </node>
      <node id="davidallysson/logica-de-programacao" label="davidallysson/logica-de-programacao">
        <attvalues>
          <attvalue for="0" value="competitive-programming,exercises,logic-programming,programming,programming-language,spoj,uri,uva" />
          <attvalue for="1" value="https://github.com/davidallysson/logica-de-programacao" />
          <attvalue for="2" value="52" />
        </attvalues>
      </node>
      <node id="TSG405/C-for-Everyone-Programming-Fundamentals" label="TSG405/C-for-Everyone-Programming-Fundamentals">
        <attvalues>
          <attvalue for="0" value="basic-programming,c-programming-language,coursera,data-structures,fundamentals-of-programming,logic-programming,solutions,university-of-california-santa-cruz" />
          <attvalue for="1" value="https://github.com/TSG405/C-for-Everyone-Programming-Fundamentals" />
          <attvalue for="2" value="16" />
        </attvalues>
      </node>
      <node id="StrykerKKD/Logical" label="StrykerKKD/Logical">
        <attvalues>
          <attvalue for="0" value="logic-programming,microkanren,ocaml" />
          <attvalue for="1" value="https://github.com/StrykerKKD/Logical" />
          <attvalue for="2" value="23" />
        </attvalues>
      </node>
      <node id="simongray/clojure-graph-resources" label="simongray/clojure-graph-resources">
        <attvalues>
          <attvalue for="0" value="clojure,datalog,graph-theory,graphs,neo4j,owl,rdf,semantic-web,triples" />
          <attvalue for="1" value="https://github.com/simongray/clojure-graph-resources" />
          <attvalue for="2" value="283" />
        </attvalues>
      </node>
      <node id="GaloisInc/yapall" label="GaloisInc/yapall">
        <attvalues>
          <attvalue for="0" value="datalog,llvm,pointer-analysis,program-analysis,static-analysis" />
          <attvalue for="1" value="https://github.com/GaloisInc/yapall" />
          <attvalue for="2" value="62" />
        </attvalues>
      </node>
      <node id="xtdb/xtdb" label="xtdb/xtdb">
        <attvalues>
          <attvalue for="0" value="bitemporal,database,datalog,document-database,immutable-store,sql,temporal,xtdb" />
          <attvalue for="1" value="https://github.com/xtdb/xtdb" />
          <attvalue for="2" value="2619" />
        </attvalues>
      </node>
      <node id="retrofor/iamai" label="retrofor/iamai">
        <attvalues>
          <attvalue for="0" value="ai,artificial-intelligence,bot,flow,flowchart,gpt,logic,logic-programming,machine-learning,ml,onebot,python,rasa,rules,whl" />
          <attvalue for="1" value="https://github.com/retrofor/iamai" />
          <attvalue for="2" value="27" />
        </attvalues>
      </node>
      <node id="kuba--/ut" label="kuba--/ut">
        <attvalues>
          <attvalue for="0" value="logic-programming,prolog,unification,unification-algorithm" />
          <attvalue for="1" value="https://github.com/kuba--/ut" />
          <attvalue for="2" value="26" />
        </attvalues>
      </node>
      <node id="thautwarm/RSolve" label="thautwarm/RSolve">
        <attvalues>
          <attvalue for="0" value="logic-programming,solvers" />
          <attvalue for="1" value="https://github.com/thautwarm/RSolve" />
          <attvalue for="2" value="19" />
        </attvalues>
      </node>
      <node id="wmannis/cl-gambol" label="wmannis/cl-gambol">
        <attvalues>
          <attvalue for="0" value="common-lisp,prolog" />
          <attvalue for="1" value="https://github.com/wmannis/cl-gambol" />
          <attvalue for="2" value="20" />
        </attvalues>
      </node>
      <node id="kyouko-taiga/SwiftKanren" label="kyouko-taiga/SwiftKanren">
        <attvalues>
          <attvalue for="0" value="logic-programming" />
          <attvalue for="1" value="https://github.com/kyouko-taiga/SwiftKanren" />
          <attvalue for="2" value="7" />
        </attvalues>
      </node>
      <node id="LambdaAlpha/airlang_rs" label="LambdaAlpha/airlang_rs">
        <attvalues>
          <attvalue for="0" value="artificial-intelligence,formal-specification,logic-programming,logical-programming,programming-language,programming-languages,proof-of-concept,solver,specification-language" />
          <attvalue for="1" value="https://github.com/LambdaAlpha/airlang_rs" />
          <attvalue for="2" value="11" />
        </attvalues>
      </node>
      <node id="jariazavalverde/fasill" label="jariazavalverde/fasill">
        <attvalues>
          <attvalue for="0" value="fuzzy-connectives,fuzzy-logic,language-design,logic-language,logic-programming,prolog" />
          <attvalue for="1" value="https://github.com/jariazavalverde/fasill" />
          <attvalue for="2" value="21" />
        </attvalues>
      </node>
      <node id="SuperDisk/tar.pl" label="SuperDisk/tar.pl">
        <attvalues>
          <attvalue for="0" value="logic-programming,prolog,tar,unix" />
          <attvalue for="1" value="https://github.com/SuperDisk/tar.pl" />
          <attvalue for="2" value="260" />
        </attvalues>
      </node>
      <node id="matsubara0507/iprolog" label="matsubara0507/iprolog">
        <attvalues>
          <attvalue for="0" value="jupyter-kernels,prolog" />
          <attvalue for="1" value="https://github.com/matsubara0507/iprolog" />
          <attvalue for="2" value="8" />
        </attvalues>
      </node>
      <node id="logicmoo/flux" label="logicmoo/flux">
        <attvalues>
          <attvalue for="0" value="agent-oriented-programming,programming-language,prolog,prolog-interpreter" />
          <attvalue for="1" value="https://github.com/logicmoo/flux" />
          <attvalue for="2" value="6" />
        </attvalues>
      </node>
      <node id="logicmoo/prologmud" label="logicmoo/prologmud">
        <attvalues>
          <attvalue for="0" value="agi,artificial-general-intelligence,logicmoo,mud-servers,prolog,text-adventure-game" />
          <attvalue for="1" value="https://github.com/logicmoo/prologmud" />
          <attvalue for="2" value="29" />
        </attvalues>
      </node>
      <node id="marcincuber/modal_logic" label="marcincuber/modal_logic">
        <attvalues>
          <attvalue for="0" value="complexity,complexity-theory,graph-algorithms,graph-theory,logic,logic-programming,modal,modal-logic,temporal-logic" />
          <attvalue for="1" value="https://github.com/marcincuber/modal_logic" />
          <attvalue for="2" value="22" />
        </attvalues>
      </node>
      <node id="pbonte/roxi" label="pbonte/roxi">
        <attvalues>
          <attvalue for="0" value="datalog,javascript,n3,reasoning,rust,semantic-web,streamreasoning,webassembly" />
          <attvalue for="1" value="https://github.com/pbonte/roxi" />
          <attvalue for="2" value="40" />
        </attvalues>
      </node>
      <node id="feldi/clj-swipl7" label="feldi/clj-swipl7">
        <attvalues>
          <attvalue for="0" value="prolog,swi-prolog" />
          <attvalue for="1" value="https://github.com/feldi/clj-swipl7" />
          <attvalue for="2" value="6" />
        </attvalues>
      </node>
      <node id="dnmfarrell/iamsim" label="dnmfarrell/iamsim">
        <attvalues>
          <attvalue for="0" value="aws-iam,cloud-security,prolog,simulation" />
          <attvalue for="1" value="https://github.com/dnmfarrell/iamsim" />
          <attvalue for="2" value="7" />
        </attvalues>
      </node>
      <node id="haldai/LogicalVision2" label="haldai/LogicalVision2">
        <attvalues>
          <attvalue for="0" value="computer-vision,opencv,swi-prolog" />
          <attvalue for="1" value="https://github.com/haldai/LogicalVision2" />
          <attvalue for="2" value="20" />
        </attvalues>
      </node>
      <node id="MatthiasNickles/diff-SAT" label="MatthiasNickles/diff-SAT">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,artificial-intelligence,constraint-programming,differentiable-programming,differentiable-satisfiability,dimacs-cnf,logic-programming,multi-models-optimization,optimization,probabilistic,probabilistic-asp,probabilistic-programming,probabilistic-satisfiability,probability,psat,sat-solver,satisfiability,weighted-sat-solving" />
          <attvalue for="1" value="https://github.com/MatthiasNickles/diff-SAT" />
          <attvalue for="2" value="63" />
        </attvalues>
      </node>
      <node id="nicoabie/quickcheck" label="nicoabie/quickcheck">
        <attvalues>
          <attvalue for="0" value="prolog,property-based-testing,quickcheck,swi-prolog" />
          <attvalue for="1" value="https://github.com/nicoabie/quickcheck" />
          <attvalue for="2" value="23" />
        </attvalues>
      </node>
      <node id="sjbushra/Medical-Diagnosis-system-using-Prolog" label="sjbushra/Medical-Diagnosis-system-using-Prolog">
        <attvalues>
          <attvalue for="0" value="medical-diagnostics,prolog,prolog-code,prolog-exercises,prolog-programming-language,prolog-rules" />
          <attvalue for="1" value="https://github.com/sjbushra/Medical-Diagnosis-system-using-Prolog" />
          <attvalue for="2" value="6" />
        </attvalues>
      </node>
      <node id="ErgoAI/ErgoEngine" label="ErgoAI/ErgoEngine">
        <attvalues>
          <attvalue for="0" value="ergo,ergo-engine,ergo-reasoner,ergoreasoner,knowledge-reasoning,knowledge-representation-reasoning,logic-programming,object-oriented-programming,reasoner" />
          <attvalue for="1" value="https://github.com/ErgoAI/ErgoEngine" />
          <attvalue for="2" value="34" />
        </attvalues>
      </node>
      <node id="Es1chUbJyan9/32bit_Quine-McCluskey_and_Petrick_Method_in_C" label="Es1chUbJyan9/32bit_Quine-McCluskey_and_Petrick_Method_in_C">
        <attvalues>
          <attvalue for="0" value="c,digital-logic,logic-programming,petrick-method,quine-mccluskey,quine-mccluskey-algorithm,simplification" />
          <attvalue for="1" value="https://github.com/Es1chUbJyan9/32bit_Quine-McCluskey_and_Petrick_Method_in_C" />
          <attvalue for="2" value="19" />
        </attvalues>
      </node>
      <node id="etherealmachine/entish" label="etherealmachine/entish">
        <attvalues>
          <attvalue for="0" value="datalog,roleplaying-games" />
          <attvalue for="1" value="https://github.com/etherealmachine/entish" />
          <attvalue for="2" value="93" />
        </attvalues>
      </node>
      <node id="joshuaguerin/Answer-Set-Programming-Algorithms" label="joshuaguerin/Answer-Set-Programming-Algorithms">
        <attvalues>
          <attvalue for="0" value="algorithm,algorithms,answer-set-programming,clingo,computer-science,constraint-programming,constraint-satisfaction-problem,education,language,logic,logic-programming,np-complete,np-hard" />
          <attvalue for="1" value="https://github.com/joshuaguerin/Answer-Set-Programming-Algorithms" />
          <attvalue for="2" value="16" />
        </attvalues>
      </node>
      <node id="gooofy/zamia-prolog" label="gooofy/zamia-prolog">
        <attvalues>
          <attvalue for="0" value="declarative-language,embeddable,logic-programming,prolog,prolog-dialect,python" />
          <attvalue for="1" value="https://github.com/gooofy/zamia-prolog" />
          <attvalue for="2" value="19" />
        </attvalues>
      </node>
      <node id="pahihu/smallprolog" label="pahihu/smallprolog">
        <attvalues>
          <attvalue for="0" value="prolog" />
          <attvalue for="1" value="https://github.com/pahihu/smallprolog" />
          <attvalue for="2" value="7" />
        </attvalues>
      </node>
      <node id="bnediction/bonesis" label="bnediction/bonesis">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,boolean-networks,synthesis,systems-biology" />
          <attvalue for="1" value="https://github.com/bnediction/bonesis" />
          <attvalue for="2" value="11" />
        </attvalues>
      </node>
      <node id="eth-sri/securify" label="eth-sri/securify">
        <attvalues>
          <attvalue for="0" value="chainsecurity,datalog,depricated,ethereum,evm,obsolete,security,smart-contract,solidity,static-analysis" />
          <attvalue for="1" value="https://github.com/eth-sri/securify" />
          <attvalue for="2" value="220" />
        </attvalues>
      </node>
      <node id="R-White-0/Medical-Expert-System" label="R-White-0/Medical-Expert-System">
        <attvalues>
          <attvalue for="0" value="covid-19,expert-system,perl,prolog-programming-language" />
          <attvalue for="1" value="https://github.com/R-White-0/Medical-Expert-System" />
          <attvalue for="2" value="8" />
        </attvalues>
      </node>
      <node id="catseye/Cardboard-Prolog" label="catseye/Cardboard-Prolog">
        <attvalues>
          <attvalue for="0" value="deductive-inference,didactic,inference-engine,logic-programming,prolog-interpreter,pure-functional" />
          <attvalue for="1" value="https://github.com/catseye/Cardboard-Prolog" />
          <attvalue for="2" value="8" />
        </attvalues>
      </node>
      <node id="pachadb/pachadb" label="pachadb/pachadb">
        <attvalues>
          <attvalue for="0" value="datalog,edge-computing,embedded-database,graph-database,triple-store" />
          <attvalue for="1" value="https://github.com/pachadb/pachadb" />
          <attvalue for="2" value="28" />
        </attvalues>
      </node>
      <node id="mndrix/list_util" label="mndrix/list_util">
        <attvalues>
          <attvalue for="0" value="lists,prolog" />
          <attvalue for="1" value="https://github.com/mndrix/list_util" />
          <attvalue for="2" value="11" />
        </attvalues>
      </node>
      <node id="theronic/hoist" label="theronic/hoist">
        <attvalues>
          <attvalue for="0" value="clojure,datalog,excel,lisp,provenance,visual-programming" />
          <attvalue for="1" value="https://github.com/theronic/hoist" />
          <attvalue for="2" value="18" />
        </attvalues>
      </node>
      <node id="triska/proloxy" label="triska/proloxy">
        <attvalues>
          <attvalue for="0" value="http-proxy,https,https-proxy,prolog,proxy-server,swi-prolog,websocket-connection" />
          <attvalue for="1" value="https://github.com/triska/proloxy" />
          <attvalue for="2" value="19" />
        </attvalues>
      </node>
      <node id="github/codeql-go" label="github/codeql-go">
        <attvalues>
          <attvalue for="0" value="codeql,datalog,go,golang,program-analysis,static-analysis" />
          <attvalue for="1" value="https://github.com/github/codeql-go" />
          <attvalue for="2" value="466" />
        </attvalues>
      </node>
      <node id="jacekschae/learn-datomic-course-files" label="jacekschae/learn-datomic-course-files">
        <attvalues>
          <attvalue for="0" value="clojure,datalog,datomic,rest-api,ring" />
          <attvalue for="1" value="https://github.com/jacekschae/learn-datomic-course-files" />
          <attvalue for="2" value="20" />
        </attvalues>
      </node>
      <node id="complexdb/zincbase" label="complexdb/zincbase">
        <attvalues>
          <attvalue for="0" value="graph-embedding,knowledge-base,knowledge-graph,prolog" />
          <attvalue for="1" value="https://github.com/complexdb/zincbase" />
          <attvalue for="2" value="170" />
        </attvalues>
      </node>
      <node id="MechaRex/logikaldb" label="MechaRex/logikaldb">
        <attvalues>
          <attvalue for="0" value="database,flow,foundationdb,kotlin,logic-programming,reactive" />
          <attvalue for="1" value="https://github.com/MechaRex/logikaldb" />
          <attvalue for="2" value="10" />
        </attvalues>
      </node>
      <node id="tectijuana/logifun.archived" label="tectijuana/logifun.archived">
        <attvalues>
          <attvalue for="0" value="erlang,prolog-programming-language" />
          <attvalue for="1" value="https://github.com/tectijuana/logifun.archived" />
          <attvalue for="2" value="12" />
        </attvalues>
      </node>
      <node id="ilaspltd/ILASP-releases" label="ilaspltd/ILASP-releases">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,artificial-intelligence,explainable-ml,ilasp,inductive-logic-programming,logic-based-learning,logic-programming,machine-learning" />
          <attvalue for="1" value="https://github.com/ilaspltd/ILASP-releases" />
          <attvalue for="2" value="36" />
        </attvalues>
      </node>
      <node id="fatho/logru" label="fatho/logru">
        <attvalues>
          <attvalue for="0" value="hacktoberfest,logic-programming,rust" />
          <attvalue for="1" value="https://github.com/fatho/logru" />
          <attvalue for="2" value="17" />
        </attvalues>
      </node>
      <node id="Xachap/Neuro-FLOPER" label="Xachap/Neuro-FLOPER">
        <attvalues>
          <attvalue for="0" value="dec-tau,fasill,final-degree-project,floper,fuzzy-neural-network,iris,iris-dataset,keras,malp,multilayer-perceptron-network,neural-network,neuro-floper,prolog,python,swi-prolog,tensorflow,tune,tuner" />
          <attvalue for="1" value="https://github.com/Xachap/Neuro-FLOPER" />
          <attvalue for="2" value="18" />
        </attvalues>
      </node>
      <node id="mloncode/uast2pl" label="mloncode/uast2pl">
        <attvalues>
          <attvalue for="0" value="bblfsh,prolog,syntax-tree,transpiler,uast" />
          <attvalue for="1" value="https://github.com/mloncode/uast2pl" />
          <attvalue for="2" value="10" />
        </attvalues>
      </node>
      <node id="ljos/ob-prolog" label="ljos/ob-prolog">
        <attvalues>
          <attvalue for="0" value="emacs-lisp,literate-programming,org-mode,prolog" />
          <attvalue for="1" value="https://github.com/ljos/ob-prolog" />
          <attvalue for="2" value="12" />
        </attvalues>
      </node>
      <node id="bakaq/constrained.pl" label="bakaq/constrained.pl">
        <attvalues>
          <attvalue for="0" value="prolog" />
          <attvalue for="1" value="https://github.com/bakaq/constrained.pl" />
          <attvalue for="2" value="9" />
        </attvalues>
      </node>
      <node id="raydac/jprol" label="raydac/jprol">
        <attvalues>
          <attvalue for="0" value="engine,gui-editor,java,prolog,prolog-engine,prolog-programming-language" />
          <attvalue for="1" value="https://github.com/raydac/jprol" />
          <attvalue for="2" value="30" />
        </attvalues>
      </node>
      <node id="alexovidiupopa/UBB" label="alexovidiupopa/UBB">
        <attvalues>
          <attvalue for="0" value="assembly-8086,c,cisco-packet-tracer,clisp,cpp,data-structures-and-algorithms,graphs-theory,java,oop,prolog,python,shell,t-sql" />
          <attvalue for="1" value="https://github.com/alexovidiupopa/UBB" />
          <attvalue for="2" value="11" />
        </attvalues>
      </node>
      <node id="namin/logically" label="namin/logically">
        <attvalues>
          <attvalue for="0" value="abstract-interpretation,binders,clojure,logic-programming,metaprogramming,paper-implementations,prolog" />
          <attvalue for="1" value="https://github.com/namin/logically" />
          <attvalue for="2" value="116" />
        </attvalues>
      </node>
      <node id="fnogatz/dcg4pt" label="fnogatz/dcg4pt">
        <attvalues>
          <attvalue for="0" value="definite-clause-grammar,grammar,parsing,prolog" />
          <attvalue for="1" value="https://github.com/fnogatz/dcg4pt" />
          <attvalue for="2" value="11" />
        </attvalues>
      </node>
      <node id="c-cube/datalog" label="c-cube/datalog">
        <attvalues>
          <attvalue for="0" value="datalog,logic-programming,memoization,ocaml,prolog" />
          <attvalue for="1" value="https://github.com/c-cube/datalog" />
          <attvalue for="2" value="266" />
        </attvalues>
      </node>
      <node id="GaloisInc/cclyzerpp" label="GaloisInc/cclyzerpp">
        <attvalues>
          <attvalue for="0" value="datalog,llvm,pointer-analysis,program-analysis,souffle,static-analysis" />
          <attvalue for="1" value="https://github.com/GaloisInc/cclyzerpp" />
          <attvalue for="2" value="139" />
        </attvalues>
      </node>
      <node id="ianthehenry/mixologician" label="ianthehenry/mixologician">
        <attvalues>
          <attvalue for="0" value="cocktails,datalog,logic-programming,mixology,souffle,souffle-datalog-language" />
          <attvalue for="1" value="https://github.com/ianthehenry/mixologician" />
          <attvalue for="2" value="77" />
        </attvalues>
      </node>
      <node id="Risto-Stevcev/prolog-monty-python" label="Risto-Stevcev/prolog-monty-python">
        <attvalues>
          <attvalue for="0" value="example,monty,monty-python,prolog,ptyhon" />
          <attvalue for="1" value="https://github.com/Risto-Stevcev/prolog-monty-python" />
          <attvalue for="2" value="6" />
        </attvalues>
      </node>
      <node id="ztangent/Julog.jl" label="ztangent/Julog.jl">
        <attvalues>
          <attvalue for="0" value="first-order-logic,fol,julia,logic,logic-programming,prolog" />
          <attvalue for="1" value="https://github.com/ztangent/Julog.jl" />
          <attvalue for="2" value="174" />
        </attvalues>
      </node>
      <node id="remexre/fall" label="remexre/fall">
        <attvalues>
          <attvalue for="0" value="logic-programming,rust" />
          <attvalue for="1" value="https://github.com/remexre/fall" />
          <attvalue for="2" value="9" />
        </attvalues>
      </node>
      <node id="glennstreet/awesome-philosophy-compsci" label="glennstreet/awesome-philosophy-compsci">
        <attvalues>
          <attvalue for="0" value="computer-science,logic,philosophy,prolog" />
          <attvalue for="1" value="https://github.com/glennstreet/awesome-philosophy-compsci" />
          <attvalue for="2" value="80" />
        </attvalues>
      </node>
      <node id="tomsherborne/geoquery-src" label="tomsherborne/geoquery-src">
        <attvalues>
          <attvalue for="0" value="ai,data,database,geoquery,ml,nlp,nlu,parsing,prolog,query,semantic-parser,semantic-parsing,semantics" />
          <attvalue for="1" value="https://github.com/tomsherborne/geoquery-src" />
          <attvalue for="2" value="9" />
        </attvalues>
      </node>
      <node id="softlang/yas" label="softlang/yas">
        <attvalues>
          <attvalue for="0" value="language,prolog,slr,yas" />
          <attvalue for="1" value="https://github.com/softlang/yas" />
          <attvalue for="2" value="19" />
        </attvalues>
      </node>
      <node id="triska/letswicrypt" label="triska/letswicrypt">
        <attvalues>
          <attvalue for="0" value="https,https-server,prolog,swi-prolog" />
          <attvalue for="1" value="https://github.com/triska/letswicrypt" />
          <attvalue for="2" value="37" />
        </attvalues>
      </node>
      <node id="maebert/prolog_puzzles" label="maebert/prolog_puzzles">
        <attvalues>
          <attvalue for="0" value="cognitive-science,exercise,prolog,prolog-puzzles,puzzle" />
          <attvalue for="1" value="https://github.com/maebert/prolog_puzzles" />
          <attvalue for="2" value="72" />
        </attvalues>
      </node>
      <node id="namin/metamk" label="namin/metamk">
        <attvalues>
          <attvalue for="0" value="logic-programming,meta,metaprogramming,minikanren,reflection,scheme" />
          <attvalue for="1" value="https://github.com/namin/metamk" />
          <attvalue for="2" value="31" />
        </attvalues>
      </node>
      <node id="microsoft/service-fabric-healer" label="microsoft/service-fabric-healer">
        <attvalues>
          <attvalue for="0" value="auto-mitigation,csharp,guan,linux,logic-programming,net6,service-fabric,windows" />
          <attvalue for="1" value="https://github.com/microsoft/service-fabric-healer" />
          <attvalue for="2" value="19" />
        </attvalues>
      </node>
      <node id="HouariZegai/PrologExercise" label="HouariZegai/PrologExercise">
        <attvalues>
          <attvalue for="0" value="exercise,exercise-solutions,prolog,prolog-programming-language" />
          <attvalue for="1" value="https://github.com/HouariZegai/PrologExercise" />
          <attvalue for="2" value="11" />
        </attvalues>
      </node>
      <node id="gooofy/zamia-ai" label="gooofy/zamia-ai">
        <attvalues>
          <attvalue for="0" value="artificial-intelligence,knowledgebase,natural-language-processing,prolog,python,semantic-web,tensorflow" />
          <attvalue for="1" value="https://github.com/gooofy/zamia-ai" />
          <attvalue for="2" value="162" />
        </attvalues>
      </node>
      <node id="Lexpedite/blawx" label="Lexpedite/blawx">
        <attvalues>
          <attvalue for="0" value="blockly,drag-and-drop,logic-programming,rules-as-code,scasp" />
          <attvalue for="1" value="https://github.com/Lexpedite/blawx" />
          <attvalue for="2" value="112" />
        </attvalues>
      </node>
      <node id="aartikis/RTEC" label="aartikis/RTEC">
        <attvalues>
          <attvalue for="0" value="artificial-intelligence,cep,complex-event-processing,complex-event-recognition,data-science,data-stream-processing,event-calculus,logic-programming,multi-agent-systems,prolog,stream-processing,stream-reasoning" />
          <attvalue for="1" value="https://github.com/aartikis/RTEC" />
          <attvalue for="2" value="86" />
        </attvalues>
      </node>
      <node id="catwell/datalog.lua" label="catwell/datalog.lua">
        <attvalues>
          <attvalue for="0" value="datalog,lpeg,lua" />
          <attvalue for="1" value="https://github.com/catwell/datalog.lua" />
          <attvalue for="2" value="22" />
        </attvalues>
      </node>
      <node id="sdleffler/whisper" label="sdleffler/whisper">
        <attvalues>
          <attvalue for="0" value="backtracking-search,dsl,logic-programming,rust,rust-lang,unification" />
          <attvalue for="1" value="https://github.com/sdleffler/whisper" />
          <attvalue for="2" value="42" />
        </attvalues>
      </node>
      <node id="CompSciCabal/reading-material" label="CompSciCabal/reading-material">
        <attvalues>
          <attvalue for="0" value="computer-science,logic-programming,pf-pl,stealthy-trojans,tar-pit,type-theory" />
          <attvalue for="1" value="https://github.com/CompSciCabal/reading-material" />
          <attvalue for="2" value="24" />
        </attvalues>
      </node>
      <node id="potassco/clingo" label="potassco/clingo">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,declarative-programming,logic-programming" />
          <attvalue for="1" value="https://github.com/potassco/clingo" />
          <attvalue for="2" value="643" />
        </attvalues>
      </node>
      <node id="Anniepoo/prolog-examples" label="Anniepoo/prolog-examples">
        <attvalues>
          <attvalue for="0" value="family-tree,prolog" />
          <attvalue for="1" value="https://github.com/Anniepoo/prolog-examples" />
          <attvalue for="2" value="594" />
        </attvalues>
      </node>
      <node id="rachelwiles/GoT-Check" label="rachelwiles/GoT-Check">
        <attvalues>
          <attvalue for="0" value="database,family-tree,game-of-thrones,got,prolog,prolog-application,prolog-exercises,prolog-implementation,prolog-programming-language,prolog-rules,prolog-tutorial,swi-prolog" />
          <attvalue for="1" value="https://github.com/rachelwiles/GoT-Check" />
          <attvalue for="2" value="69" />
        </attvalues>
      </node>
      <node id="RadostinaIvanova/Expert-system-in-Prolog" label="RadostinaIvanova/Expert-system-in-Prolog">
        <attvalues>
          <attvalue for="0" value="artificial-intelligence,backward-chaining,backward-chaining-prolog,expert-system,expert-system-diagnosis,expert-systems,goal-driven,prolog,prolog-programming-language,rule-based" />
          <attvalue for="1" value="https://github.com/RadostinaIvanova/Expert-system-in-Prolog" />
          <attvalue for="2" value="15" />
        </attvalues>
      </node>
      <node id="Blog-Core/blog-core" label="Blog-Core/blog-core">
        <attvalues>
          <attvalue for="0" value="blog-core,blog-engine,cms,prolog,swi-prolog" />
          <attvalue for="1" value="https://github.com/Blog-Core/blog-core" />
          <attvalue for="2" value="22" />
        </attvalues>
      </node>
      <node id="di-unipi-socc/daplacer" label="di-unipi-socc/daplacer">
        <attvalues>
          <attvalue for="0" value="application-placement,cloud-iot,continuous-reasoning,data-aware,logic-programming,prolog,traffic-routing" />
          <attvalue for="1" value="https://github.com/di-unipi-socc/daplacer" />
          <attvalue for="2" value="6" />
        </attvalues>
      </node>
      <node id="knowrob/knowrob" label="knowrob/knowrob">
        <attvalues>
          <attvalue for="0" value="knowledge-base,knowledge-graph,prolog,query-answering,reasoning,robotics" />
          <attvalue for="1" value="https://github.com/knowrob/knowrob" />
          <attvalue for="2" value="139" />
        </attvalues>
      </node>
      <node id="ciao-lang/ciao" label="ciao-lang/ciao">
        <attvalues>
          <attvalue for="0" value="bytecode,ciao-prolog,clp,compiler,constraints,interpreter,iso-prolog-standard,logic,logic-programming,programming-language,prolog,prolog-compiler,prolog-implementation,prolog-interpreter,prolog-programming-language,virtual-machine" />
          <attvalue for="1" value="https://github.com/ciao-lang/ciao" />
          <attvalue for="2" value="294" />
        </attvalues>
      </node>
      <node id="tuProlog/2p-kt" label="tuProlog/2p-kt">
        <attvalues>
          <attvalue for="0" value="2p,java,javascript,js,jvm,kotlin,kotlin-multi-platform,kotlin-multiplatform,logic-programming,prolog,simbolic-ai,symbolic,tuprolog" />
          <attvalue for="1" value="https://github.com/tuProlog/2p-kt" />
          <attvalue for="2" value="99" />
        </attvalues>
      </node>
      <node id="maciej-nowak/DP-Film-Expert-System" label="maciej-nowak/DP-Film-Expert-System">
        <attvalues>
          <attvalue for="0" value="declarative-programming,expert-system,film-expert,logic-programming,prolog,prolog-rules,university" />
          <attvalue for="1" value="https://github.com/maciej-nowak/DP-Film-Expert-System" />
          <attvalue for="2" value="24" />
        </attvalues>
      </node>
      <node id="AILab-FOI/the-baze" label="AILab-FOI/the-baze">
        <attvalues>
          <attvalue for="0" value="data-science,datalog,exist-db,flora-2,mongodb,nodejs,odbc,postgresql,python,r,sqlite,zodb" />
          <attvalue for="1" value="https://github.com/AILab-FOI/the-baze" />
          <attvalue for="2" value="8" />
        </attvalues>
      </node>
      <node id="logicmoo/CYC_JRTL_with_CommonLisp" label="logicmoo/CYC_JRTL_with_CommonLisp">
        <attvalues>
          <attvalue for="0" value="abcl,artificial-general-intelligence,artificial-intelligence,common-lisp,cyc,cyc-jrtl,lisp-interpreter,logic-programming,natural-language-processing,opencyc,prolog-programming-language" />
          <attvalue for="1" value="https://github.com/logicmoo/CYC_JRTL_with_CommonLisp" />
          <attvalue for="2" value="16" />
        </attvalues>
      </node>
      <node id="NaohiroTamura/faasshell" label="NaohiroTamura/faasshell">
        <attvalues>
          <attvalue for="0" value="amazon-state-language,apache-openwhisk,aws-lambda,aws-step-function,azure-functions,faas,google-cloud-functions,ibm-cloud-functions,serverless,swi-prolog" />
          <attvalue for="1" value="https://github.com/NaohiroTamura/faasshell" />
          <attvalue for="2" value="6" />
        </attvalues>
      </node>
      <node id="d4hines/datalog-ts" label="d4hines/datalog-ts">
        <attvalues>
          <attvalue for="0" value="datalog,logic-programming,query-language,typescript" />
          <attvalue for="1" value="https://github.com/d4hines/datalog-ts" />
          <attvalue for="2" value="6" />
        </attvalues>
      </node>
      <node id="lab-v2/pyreason" label="lab-v2/pyreason">
        <attvalues>
          <attvalue for="0" value="logic,logic-programming,machine-learning,neurosymbolic,python,temporal-logic" />
          <attvalue for="1" value="https://github.com/lab-v2/pyreason" />
          <attvalue for="2" value="206" />
        </attvalues>
      </node>
      <node id="nuric/deeplogic" label="nuric/deeplogic">
        <attvalues>
          <attvalue for="0" value="deep-learning,logic-programming" />
          <attvalue for="1" value="https://github.com/nuric/deeplogic" />
          <attvalue for="2" value="23" />
        </attvalues>
      </node>
      <node id="Kushal997-das/Pattern_Printing" label="Kushal997-das/Pattern_Printing">
        <attvalues>
          <attvalue for="0" value="cpp,logic-programming,patterns,python,python3" />
          <attvalue for="1" value="https://github.com/Kushal997-das/Pattern_Printing" />
          <attvalue for="2" value="26" />
        </attvalues>
      </node>
      <node id="dritter-hd/dlog" label="dritter-hd/dlog">
        <attvalues>
          <attvalue for="0" value="datalog,logic-programming" />
          <attvalue for="1" value="https://github.com/dritter-hd/dlog" />
          <attvalue for="2" value="7" />
        </attvalues>
      </node>
      <node id="reasoned-ai/norm" label="reasoned-ai/norm">
        <attvalues>
          <attvalue for="0" value="ai,deep-learning,deep-neural-networks,logic-programming,machine-reasoning,ml" />
          <attvalue for="1" value="https://github.com/reasoned-ai/norm" />
          <attvalue for="2" value="9" />
        </attvalues>
      </node>
      <node id="gonmf/dakilang" label="gonmf/dakilang">
        <attvalues>
          <attvalue for="0" value="datalog,logic,logic-programming,prolog" />
          <attvalue for="1" value="https://github.com/gonmf/dakilang" />
          <attvalue for="2" value="7" />
        </attvalues>
      </node>
      <node id="billhails/PyScheme" label="billhails/PyScheme">
        <attvalues>
          <attvalue for="0" value="functional-programming,language,logic-programming,pycharm,python" />
          <attvalue for="1" value="https://github.com/billhails/PyScheme" />
          <attvalue for="2" value="31" />
        </attvalues>
      </node>
      <node id="wouterbeek/prolog_rdf" label="wouterbeek/prolog_rdf">
        <attvalues>
          <attvalue for="0" value="linked-data,prolog,rdf,semantic-web,swi-prolog" />
          <attvalue for="1" value="https://github.com/wouterbeek/prolog_rdf" />
          <attvalue for="2" value="17" />
        </attvalues>
      </node>
      <node id="kamel-usp/dpasp" label="kamel-usp/dpasp">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,credal-sets,logic-programming,neurosymbolic-ai,probabilistic-logic-programming,probabilistic-programming" />
          <attvalue for="1" value="https://github.com/kamel-usp/dpasp" />
          <attvalue for="2" value="18" />
        </attvalues>
      </node>
      <node id="NucleoidAI/Nucleoid" label="NucleoidAI/Nucleoid">
        <attvalues>
          <attvalue for="0" value="expert-system,graph-rag,javascript,knowledge,knowledge-base,knowledge-graph,logic,logic-programming,neuro-symbolic,neuro-symbolic-ai,neuro-symbolic-learning,node,rag,reasoning,reasoning-engine,semantic-reasoner,semantic-reasoning,symbolic" />
          <attvalue for="1" value="https://github.com/NucleoidAI/Nucleoid" />
          <attvalue for="2" value="576" />
        </attvalues>
      </node>
      <node id="MuhammadSulaiman001/prolog-lab" label="MuhammadSulaiman001/prolog-lab">
        <attvalues>
          <attvalue for="0" value="learn-prolog,logic,logic-programming,logical-programming,logical-programming-language,prolog,prolog-exercises,prolog-programming-language,swi-prolog" />
          <attvalue for="1" value="https://github.com/MuhammadSulaiman001/prolog-lab" />
          <attvalue for="2" value="12" />
        </attvalues>
      </node>
      <node id="AppliedLogicSystems/ALSProlog" label="AppliedLogicSystems/ALSProlog">
        <attvalues>
          <attvalue for="0" value="compiler,iso-prolog-standard,language,logic-programming,programming-language,prolog,prolog-implementation,prolog-programming-language" />
          <attvalue for="1" value="https://github.com/AppliedLogicSystems/ALSProlog" />
          <attvalue for="2" value="16" />
        </attvalues>
      </node>
      <node id="ichiban/prolog" label="ichiban/prolog">
        <attvalues>
          <attvalue for="0" value="go,golang,interpreter,logic-programming,prolog" />
          <attvalue for="1" value="https://github.com/ichiban/prolog" />
          <attvalue for="2" value="646" />
        </attvalues>
      </node>
      <node id="i-am-tom/holmes" label="i-am-tom/holmes">
        <attvalues>
          <attvalue for="0" value="backtracking,constraint-solver,logic-programming,propagation" />
          <attvalue for="1" value="https://github.com/i-am-tom/holmes" />
          <attvalue for="2" value="305" />
        </attvalues>
      </node>
      <node id="TheAhmadOsman/ProgrammingLanguages" label="TheAhmadOsman/ProgrammingLanguages">
        <attvalues>
          <attvalue for="0" value="abstract-syntax-tree,assembly,ast,disassembler,disassembly,functional-programming,java,jcoco,lisp,logic-programming,perl,programming-languages,prolog,python,sml,standard-ml" />
          <attvalue for="1" value="https://github.com/TheAhmadOsman/ProgrammingLanguages" />
          <attvalue for="2" value="6" />
        </attvalues>
      </node>
      <node id="nsg-ethz/synet" label="nsg-ethz/synet">
        <attvalues>
          <attvalue for="0" value="datalog,network,synthesis" />
          <attvalue for="1" value="https://github.com/nsg-ethz/synet" />
          <attvalue for="2" value="27" />
        </attvalues>
      </node>
      <node id="Hendekagon/Datalog-tutorial" label="Hendekagon/Datalog-tutorial">
        <attvalues>
          <attvalue for="0" value="clojure,datalog" />
          <attvalue for="1" value="https://github.com/Hendekagon/Datalog-tutorial" />
          <attvalue for="2" value="11" />
        </attvalues>
      </node>
      <node id="UphillD/MPL-Solutions" label="UphillD/MPL-Solutions">
        <attvalues>
          <attvalue for="0" value="prolog,sml" />
          <attvalue for="1" value="https://github.com/UphillD/MPL-Solutions" />
          <attvalue for="2" value="8" />
        </attvalues>
      </node>
      <node id="maheshabburi4/IITH-BTECH-Courses" label="maheshabburi4/IITH-BTECH-Courses">
        <attvalues>
          <attvalue for="0" value="computer-architecture,cool-compiler,data-structures-and-algorithms,discrete-mathematics,eiffel,os,principles-of-programming-languages,prolog" />
          <attvalue for="1" value="https://github.com/maheshabburi4/IITH-BTECH-Courses" />
          <attvalue for="2" value="11" />
        </attvalues>
      </node>
      <node id="Bayons/ICon" label="Bayons/ICon">
        <attvalues>
          <attvalue for="0" value="automata,automata-de-pila,clips,computer-engineering,estrategias-de-resolucion,icon,ingenieria-de-software,ingenieria-del-conocimiento,ingenieria-informatica,logic-programming,logica-de-proposiciones,meta-interprete,meta-interprete-vanilla,programacion-logica,prolog,software-engineering,swi-prolog,universidad-de-valladolid,uva,vanilla" />
          <attvalue for="1" value="https://github.com/Bayons/ICon" />
          <attvalue for="2" value="8" />
        </attvalues>
      </node>
      <node id="robjsliwa/pyprolog" label="robjsliwa/pyprolog">
        <attvalues>
          <attvalue for="0" value="interpreter,prolog,prolog-interpreter,python,unification" />
          <attvalue for="1" value="https://github.com/robjsliwa/pyprolog" />
          <attvalue for="2" value="7" />
        </attvalues>
      </node>
      <node id="Farfi55/RiskASP" label="Farfi55/RiskASP">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,artificial-intelligence,clingo,csharp,dlv,embasp,game,risk,unical,unity,unity2d" />
          <attvalue for="1" value="https://github.com/Farfi55/RiskASP" />
          <attvalue for="2" value="10" />
        </attvalues>
      </node>
      <node id="tau-prolog/draw-derivation-trees" label="tau-prolog/draw-derivation-trees">
        <attvalues>
          <attvalue for="0" value="canvas,derivation-tree,prolog,prolog-application,prolog-programming-language,tau-prolog" />
          <attvalue for="1" value="https://github.com/tau-prolog/draw-derivation-trees" />
          <attvalue for="2" value="11" />
        </attvalues>
      </node>
      <node id="GuilhermeNobrega/Linux" label="GuilhermeNobrega/Linux">
        <attvalues>
          <attvalue for="0" value="bash-script,color-scheme,linux,logic-programming,shell-scripts,tput,tricks" />
          <attvalue for="1" value="https://github.com/GuilhermeNobrega/Linux" />
          <attvalue for="2" value="8" />
        </attvalues>
      </node>
      <node id="ErgoAI/Studio_fidji" label="ErgoAI/Studio_fidji">
        <attvalues>
          <attvalue for="0" value="ergo,ergo-engine,ergo-reasoner,ergoengine,ergoreasoner,integrated-development-environment,knowledge-representation-reasoning,logic-programming,reasoner" />
          <attvalue for="1" value="https://github.com/ErgoAI/Studio_fidji" />
          <attvalue for="2" value="8" />
        </attvalues>
      </node>
      <node id="mikolak-net/bomba" label="mikolak-net/bomba">
        <attvalues>
          <attvalue for="0" value="logic-programming,scala,scala-dsl" />
          <attvalue for="1" value="https://github.com/mikolak-net/bomba" />
          <attvalue for="2" value="9" />
        </attvalues>
      </node>
      <node id="RichardMoot/Grail0" label="RichardMoot/Grail0">
        <attvalues>
          <attvalue for="0" value="latex,logic-programming,multimodal-categorial-grammars,theorem-proving" />
          <attvalue for="1" value="https://github.com/RichardMoot/Grail0" />
          <attvalue for="2" value="9" />
        </attvalues>
      </node>
      <node id="mingodad/picat" label="mingodad/picat">
        <attvalues>
          <attvalue for="0" value="constraint-programming,cross-platform,declarative-programming,dynamic-programming,functional-programming,pattern-matching,prolog,solvers,symbolic-computation" />
          <attvalue for="1" value="https://github.com/mingodad/picat" />
          <attvalue for="2" value="28" />
        </attvalues>
      </node>
      <node id="guregu/php" label="guregu/php">
        <attvalues>
          <attvalue for="0" value="cgi,prolog,www" />
          <attvalue for="1" value="https://github.com/guregu/php" />
          <attvalue for="2" value="71" />
        </attvalues>
      </node>
      <node id="sebdumancic/pylo2" label="sebdumancic/pylo2">
        <attvalues>
          <attvalue for="0" value="artificial-intelligence,logic-programming,prolog" />
          <attvalue for="1" value="https://github.com/sebdumancic/pylo2" />
          <attvalue for="2" value="85" />
        </attvalues>
      </node>
      <node id="MaximovInk/NodeLogic" label="MaximovInk/NodeLogic">
        <attvalues>
          <attvalue for="0" value="logic-gates,logic-programming,unity,unity2d,unity2d-game" />
          <attvalue for="1" value="https://github.com/MaximovInk/NodeLogic" />
          <attvalue for="2" value="22" />
        </attvalues>
      </node>
      <node id="uwdata/draco" label="uwdata/draco">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,vega,visualization-constraints,visualization-recommendation" />
          <attvalue for="1" value="https://github.com/uwdata/draco" />
          <attvalue for="2" value="226" />
        </attvalues>
      </node>
      <node id="grafana/thema" label="grafana/thema">
        <attvalues>
          <attvalue for="0" value="config,cue,cuelang,grafana,logic-programming,openapi,openapi3,packaging,schema,versioning" />
          <attvalue for="1" value="https://github.com/grafana/thema" />
          <attvalue for="2" value="229" />
        </attvalues>
      </node>
      <node id="krisztinahorvath/UBB-Computer-Science" label="krisztinahorvath/UBB-Computer-Science">
        <attvalues>
          <attvalue for="0" value="assembly,command-line,computer-science,data-structures-and-algorithms,databases,graph-algorithms,java,oop-principles,operating-systems,prolog,python" />
          <attvalue for="1" value="https://github.com/krisztinahorvath/UBB-Computer-Science" />
          <attvalue for="2" value="10" />
        </attvalues>
      </node>
      <node id="EricZinda/InductorProlog" label="EricZinda/InductorProlog">
        <attvalues>
          <attvalue for="0" value="cpp,inductor-prolog-engine,prolog,prolog-compiler,prolog-implementation" />
          <attvalue for="1" value="https://github.com/EricZinda/InductorProlog" />
          <attvalue for="2" value="12" />
        </attvalues>
      </node>
      <node id="fnogatz/xsd2json" label="fnogatz/xsd2json">
        <attvalues>
          <attvalue for="0" value="json-schema,prolog,swi-prolog,xml-schema" />
          <attvalue for="1" value="https://github.com/fnogatz/xsd2json" />
          <attvalue for="2" value="153" />
        </attvalues>
      </node>
      <node id="georgesittas/jobshop-scheduling" label="georgesittas/jobshop-scheduling">
        <attvalues>
          <attvalue for="0" value="csp,jobshop,optimization-problem,prolog" />
          <attvalue for="1" value="https://github.com/georgesittas/jobshop-scheduling" />
          <attvalue for="2" value="6" />
        </attvalues>
      </node>
      <node id="rla/prolog-vdom" label="rla/prolog-vdom">
        <attvalues>
          <attvalue for="0" value="dom,prolog,swi-prolog,virtual-dom,webassembly" />
          <attvalue for="1" value="https://github.com/rla/prolog-vdom" />
          <attvalue for="2" value="8" />
        </attvalues>
      </node>
      <node id="triska/the-power-of-prolog" label="triska/the-power-of-prolog">
        <attvalues>
          <attvalue for="0" value="book,constraints,logic-programming,prolog,teaching-materials" />
          <attvalue for="1" value="https://github.com/triska/the-power-of-prolog" />
          <attvalue for="2" value="1260" />
        </attvalues>
      </node>
      <node id="vmware/differential-datalog" label="vmware/differential-datalog">
        <attvalues>
          <attvalue for="0" value="datalog,ddlog,incremental,programming-language,rust" />
          <attvalue for="1" value="https://github.com/vmware/differential-datalog" />
          <attvalue for="2" value="1398" />
        </attvalues>
      </node>
      <node id="trealla-prolog/trealla" label="trealla-prolog/trealla">
        <attvalues>
          <attvalue for="0" value="c,iso-prolog-standard,prolog,prolog-implementation,prolog-interpreter,prolog-programming-language" />
          <attvalue for="1" value="https://github.com/trealla-prolog/trealla" />
          <attvalue for="2" value="285" />
        </attvalues>
      </node>
      <node id="LAMDASZ-ML/Awesome-Neuro-Symbolic-Learning-with-LLM" label="LAMDASZ-ML/Awesome-Neuro-Symbolic-Learning-with-LLM">
        <attvalues>
          <attvalue for="0" value="artificial-intelligence,awesome,embodied-ai,first-order-logic,gpt-4o,knowledge-graph,large-language-models,llm-agent,logic-programming,machine-learning,neuro-network,neuro-symbolic,papers,planning,reasoning,reinforcement-learning,visual-reasoning" />
          <attvalue for="1" value="https://github.com/LAMDASZ-ML/Awesome-Neuro-Symbolic-Learning-with-LLM" />
          <attvalue for="2" value="42" />
        </attvalues>
      </node>
      <node id="evoldoers/biomake" label="evoldoers/biomake">
        <attvalues>
          <attvalue for="0" value="bioinformatics,gnu-make,makefiles,prolog,swi-prolog,workflows" />
          <attvalue for="1" value="https://github.com/evoldoers/biomake" />
          <attvalue for="2" value="104" />
        </attvalues>
      </node>
      <node id="kmtusher97/Knowledge-Based-QA-System-with-Python-and-Prolog" label="kmtusher97/Knowledge-Based-QA-System-with-Python-and-Prolog">
        <attvalues>
          <attvalue for="0" value="chatbot,chatbots,knowledge-based-systems,prolog,prolog-application,prolog-python,python,python3" />
          <attvalue for="1" value="https://github.com/kmtusher97/Knowledge-Based-QA-System-with-Python-and-Prolog" />
          <attvalue for="2" value="20" />
        </attvalues>
      </node>
      <node id="dirkschumacher/rpicosat" label="dirkschumacher/rpicosat">
        <attvalues>
          <attvalue for="0" value="logic,logic-programming,picosat,r,sat,sat-solver,satisfiability" />
          <attvalue for="1" value="https://github.com/dirkschumacher/rpicosat" />
          <attvalue for="2" value="6" />
        </attvalues>
      </node>
      <node id="fnogatz/date_time" label="fnogatz/date_time">
        <attvalues>
          <attvalue for="0" value="date,prolog,time" />
          <attvalue for="1" value="https://github.com/fnogatz/date_time" />
          <attvalue for="2" value="7" />
        </attvalues>
      </node>
      <node id="921kiyo/symbolic-rl" label="921kiyo/symbolic-rl">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,artificial-intelligence,ilp,inductive-logic-programming,reinforcement-learning,symbolic-reinforcement-learning" />
          <attvalue for="1" value="https://github.com/921kiyo/symbolic-rl" />
          <attvalue for="2" value="62" />
        </attvalues>
      </node>
      <node id="mountain/knowledge" label="mountain/knowledge">
        <attvalues>
          <attvalue for="0" value="clojure,knowledge,logic-programming,wikidata" />
          <attvalue for="1" value="https://github.com/mountain/knowledge" />
          <attvalue for="2" value="17" />
        </attvalues>
      </node>
      <node id="chessai/hsdatalog" label="chessai/hsdatalog">
        <attvalues>
          <attvalue for="0" value="bdd,compiler,datalog,logic-programming,relational-algebra,relational-databases" />
          <attvalue for="1" value="https://github.com/chessai/hsdatalog" />
          <attvalue for="2" value="37" />
        </attvalues>
      </node>
      <node id="jamesconstable/99-prolog-problems" label="jamesconstable/99-prolog-problems">
        <attvalues>
          <attvalue for="0" value="99problems,prolog" />
          <attvalue for="1" value="https://github.com/jamesconstable/99-prolog-problems" />
          <attvalue for="2" value="10" />
        </attvalues>
      </node>
      <node id="eshelyaron/debug_adapter" label="eshelyaron/debug_adapter">
        <attvalues>
          <attvalue for="0" value="debugger,emacs,logic-programming,prolog,swi-prolog,swipl" />
          <attvalue for="1" value="https://github.com/eshelyaron/debug_adapter" />
          <attvalue for="2" value="20" />
        </attvalues>
      </node>
      <node id="fnogatz/tap" label="fnogatz/tap">
        <attvalues>
          <attvalue for="0" value="prolog,swi-prolog,tap" />
          <attvalue for="1" value="https://github.com/fnogatz/tap" />
          <attvalue for="2" value="12" />
        </attvalues>
      </node>
      <node id="ilveron/intelligenza-artificiale" label="ilveron/intelligenza-artificiale">
        <attvalues>
          <attvalue for="0" value="ai,answer-set-programming,asp,dlv,unical" />
          <attvalue for="1" value="https://github.com/ilveron/intelligenza-artificiale" />
          <attvalue for="2" value="6" />
        </attvalues>
      </node>
      <node id="aarroyoc/scryer-playground" label="aarroyoc/scryer-playground">
        <attvalues>
          <attvalue for="0" value="prolog,webassembly" />
          <attvalue for="1" value="https://github.com/aarroyoc/scryer-playground" />
          <attvalue for="2" value="12" />
        </attvalues>
      </node>
      <node id="luc-tielen/souffle-haskell" label="luc-tielen/souffle-haskell">
        <attvalues>
          <attvalue for="0" value="bindings,datalog,haskell,souffle-datalog-language" />
          <attvalue for="1" value="https://github.com/luc-tielen/souffle-haskell" />
          <attvalue for="2" value="103" />
        </attvalues>
      </node>
      <node id="NoHomey/logic-programming-2019-2020" label="NoHomey/logic-programming-2019-2020">
        <attvalues>
          <attvalue for="0" value="logic-programming,prolog,teaching-assistant,teaching-materials" />
          <attvalue for="1" value="https://github.com/NoHomey/logic-programming-2019-2020" />
          <attvalue for="2" value="10" />
        </attvalues>
      </node>
      <node id="Anniepoo/identity" label="Anniepoo/identity">
        <attvalues>
          <attvalue for="0" value="identity,login-system,swi-prolog,webdev" />
          <attvalue for="1" value="https://github.com/Anniepoo/identity" />
          <attvalue for="2" value="8" />
        </attvalues>
      </node>
      <node id="JCumin/Brachylog" label="JCumin/Brachylog">
        <attvalues>
          <attvalue for="0" value="code-golf,declarative,golfing-language,language,logic-programming,prolog,swi-prolog" />
          <attvalue for="1" value="https://github.com/JCumin/Brachylog" />
          <attvalue for="2" value="117" />
        </attvalues>
      </node>
      <node id="taciano-perez/getlamp-game" label="taciano-perez/getlamp-game">
        <attvalues>
          <attvalue for="0" value="6502-assembly,basic,prolog,text-adventure-game,turbo-c" />
          <attvalue for="1" value="https://github.com/taciano-perez/getlamp-game" />
          <attvalue for="2" value="6" />
        </attvalues>
      </node>
      <node id="ShobhitRathi/SQLoad" label="ShobhitRathi/SQLoad">
        <attvalues>
          <attvalue for="0" value="databases,datalog,datamodelling,discord,discord-bot,discord-py,openai,sql,trc" />
          <attvalue for="1" value="https://github.com/ShobhitRathi/SQLoad" />
          <attvalue for="2" value="10" />
        </attvalues>
      </node>
      <node id="awto/mfjs-logic" label="awto/mfjs-logic">
        <attvalues>
          <attvalue for="0" value="constraint-programming,javascript,logic,logic-programming,mfjs,monad" />
          <attvalue for="1" value="https://github.com/awto/mfjs-logic" />
          <attvalue for="2" value="15" />
        </attvalues>
      </node>
      <node id="composewell/streamly" label="composewell/streamly">
        <attvalues>
          <attvalue for="0" value="arrays,async,concurrency,dataflow,filesystem,folds,frp,haskell,logic-programming,loops,modular,network,non-determinism,parsers,pipes,reactive-programming,stream-fusion,streaming,unfolds,unicode" />
          <attvalue for="1" value="https://github.com/composewell/streamly" />
          <attvalue for="2" value="883" />
        </attvalues>
      </node>
      <node id="abdcelik/GtuEdu" label="abdcelik/GtuEdu">
        <attvalues>
          <attvalue for="0" value="c,common-lisp,cpp,java,prolog,python,verilog" />
          <attvalue for="1" value="https://github.com/abdcelik/GtuEdu" />
          <attvalue for="2" value="7" />
        </attvalues>
      </node>
      <node id="m-carrasco/net-ssa" label="m-carrasco/net-ssa">
        <attvalues>
          <attvalue for="0" value="cil,csharp,datalog,il,intermediate-representation,mono-cecil,msil,reverse-engineering,souffle-datalog-language,ssa" />
          <attvalue for="1" value="https://github.com/m-carrasco/net-ssa" />
          <attvalue for="2" value="31" />
        </attvalues>
      </node>
      <node id="engboris/stellogen" label="engboris/stellogen">
        <attvalues>
          <attvalue for="0" value="formal-methods,logic,logic-programming,proof-assistant,transcendental-syntax,type-theory,verification" />
          <attvalue for="1" value="https://github.com/engboris/stellogen" />
          <attvalue for="2" value="93" />
        </attvalues>
      </node>
      <node id="ghosthamlet/strand" label="ghosthamlet/strand">
        <attvalues>
          <attvalue for="0" value="compiler,forth,parallel-programming,programming-language,prolog" />
          <attvalue for="1" value="https://github.com/ghosthamlet/strand" />
          <attvalue for="2" value="9" />
        </attvalues>
      </node>
      <node id="HarvardPL/formulog" label="HarvardPL/formulog">
        <attvalues>
          <attvalue for="0" value="datalog,logic-programming,smt,static-analysis,symbolic-execution" />
          <attvalue for="1" value="https://github.com/HarvardPL/formulog" />
          <attvalue for="2" value="155" />
        </attvalues>
      </node>
      <node id="pysemtec/semantic-python-overview" label="pysemtec/semantic-python-overview">
        <attvalues>
          <attvalue for="0" value="collection,community-driven,datalog,knowledge-graph,ontology,owl,python,rdf,semantic-web,semantics,sparql,swrl" />
          <attvalue for="1" value="https://github.com/pysemtec/semantic-python-overview" />
          <attvalue for="2" value="514" />
        </attvalues>
      </node>
      <node id="linkml/linkml-datalog" label="linkml/linkml-datalog">
        <attvalues>
          <attvalue for="0" value="constraints,datalog,linkml,logic-programming,rdf,reasoning,rule-language,rules,semantic-web,semantics,souffle-datalog-language,validation" />
          <attvalue for="1" value="https://github.com/linkml/linkml-datalog" />
          <attvalue for="2" value="13" />
        </attvalues>
      </node>
      <node id="graphik-team/graal" label="graphik-team/graal">
        <attvalues>
          <attvalue for="0" value="ai,datalog,knowledge-base,logical-knowledge-inference,logical-knowledge-representation,rule-engine" />
          <attvalue for="1" value="https://github.com/graphik-team/graal" />
          <attvalue for="2" value="46" />
        </attvalues>
      </node>
      <node id="damianoazzolini/plstat" label="damianoazzolini/plstat">
        <attvalues>
          <attvalue for="0" value="prolog,statistics" />
          <attvalue for="1" value="https://github.com/damianoazzolini/plstat" />
          <attvalue for="2" value="8" />
        </attvalues>
      </node>
      <node id="trealla-prolog/go" label="trealla-prolog/go">
        <attvalues>
          <attvalue for="0" value="go,logic-programming,prolog,trealla-prolog,wasm" />
          <attvalue for="1" value="https://github.com/trealla-prolog/go" />
          <attvalue for="2" value="79" />
        </attvalues>
      </node>
      <node id="filipesilva/fdb" label="filipesilva/fdb">
        <attvalues>
          <attvalue for="0" value="automation,clojure,database,datalog,pkm,watcher" />
          <attvalue for="1" value="https://github.com/filipesilva/fdb" />
          <attvalue for="2" value="93" />
        </attvalues>
      </node>
      <node id="langston-barrett/tree-sitter-souffle" label="langston-barrett/tree-sitter-souffle">
        <attvalues>
          <attvalue for="0" value="datalog,parsing,souffle,tree-sitter" />
          <attvalue for="1" value="https://github.com/langston-barrett/tree-sitter-souffle" />
          <attvalue for="2" value="13" />
        </attvalues>
      </node>
      <node id="go-air/gini" label="go-air/gini">
        <attvalues>
          <attvalue for="0" value="artificial-intelligence,boolean-formulas,circuit-sat,concurrent,dependencies,fuzzing,logic-circuit,logic-programming,resolution,sat-solver,testing,verification" />
          <attvalue for="1" value="https://github.com/go-air/gini" />
          <attvalue for="2" value="147" />
        </attvalues>
      </node>
      <node id="SWI-Prolog/swipl-wasm" label="SWI-Prolog/swipl-wasm">
        <attvalues>
          <attvalue for="0" value="prolog,swi-prolog,webassembly" />
          <attvalue for="1" value="https://github.com/SWI-Prolog/swipl-wasm" />
          <attvalue for="2" value="77" />
        </attvalues>
      </node>
      <node id="plast-lab/cclyzer" label="plast-lab/cclyzer">
        <attvalues>
          <attvalue for="0" value="analysis-framework,c,c-plus-plus,datalog,llvm,pointer-analysis" />
          <attvalue for="1" value="https://github.com/plast-lab/cclyzer" />
          <attvalue for="2" value="100" />
        </attvalues>
      </node>
      <node id="homebaseio/homebase-react" label="homebaseio/homebase-react">
        <attvalues>
          <attvalue for="0" value="clojure,clojurescript,database,datahike,datalog,datalog-database,datascript,graph-database,homebase,hook,immutable-store,javascript,react,react-hooks,relational-databases,state-management,typescript" />
          <attvalue for="1" value="https://github.com/homebaseio/homebase-react" />
          <attvalue for="2" value="202" />
        </attvalues>
      </node>
      <node id="wernsey/Jatalog" label="wernsey/Jatalog">
        <attvalues>
          <attvalue for="0" value="datalog,datalog-engine,evaluation-engine,logic-programming" />
          <attvalue for="1" value="https://github.com/wernsey/Jatalog" />
          <attvalue for="2" value="77" />
        </attvalues>
      </node>
      <node id="tau-prolog/tau-prolog" label="tau-prolog/tau-prolog">
        <attvalues>
          <attvalue for="0" value="iso-prolog-standard,javascript,logic-programming,prolog,prolog-implementation,prolog-interpreter,prolog-programming-language,tau-prolog" />
          <attvalue for="1" value="https://github.com/tau-prolog/tau-prolog" />
          <attvalue for="2" value="590" />
        </attvalues>
      </node>
      <node id="giannisdaras/ntua-lambda" label="giannisdaras/ntua-lambda">
        <attvalues>
          <attvalue for="0" value="algorithms,databases,ntua,prolog,sml" />
          <attvalue for="1" value="https://github.com/giannisdaras/ntua-lambda" />
          <attvalue for="2" value="10" />
        </attvalues>
      </node>
      <node id="Aluriak/se-lang" label="Aluriak/se-lang">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,json,language,modding,modding-tools,python,space-engine" />
          <attvalue for="1" value="https://github.com/Aluriak/se-lang" />
          <attvalue for="2" value="8" />
        </attvalues>
      </node>
      <node id="lambduli/minilog" label="lambduli/minilog">
        <attvalues>
          <attvalue for="0" value="language,logic-programming,programming-language,prolog,prolog-implementation,repl,unification" />
          <attvalue for="1" value="https://github.com/lambduli/minilog" />
          <attvalue for="2" value="15" />
        </attvalues>
      </node>
      <node id="foxfriends/root" label="foxfriends/root">
        <attvalues>
          <attvalue for="0" value="board-game,game,logic-programming,root" />
          <attvalue for="1" value="https://github.com/foxfriends/root" />
          <attvalue for="2" value="6" />
        </attvalues>
      </node>
      <node id="toblotron/praxis-ide" label="toblotron/praxis-ide">
        <attvalues>
          <attvalue for="0" value="low-code,online-idecode-editor,prolog,prolog-programming-language,visual-programming-editor" />
          <attvalue for="1" value="https://github.com/toblotron/praxis-ide" />
          <attvalue for="2" value="239" />
        </attvalues>
      </node>
      <node id="sixthnormal/clj-3df" label="sixthnormal/clj-3df">
        <attvalues>
          <attvalue for="0" value="client,clojure,datalog,differential-dataflows,relational" />
          <attvalue for="1" value="https://github.com/sixthnormal/clj-3df" />
          <attvalue for="2" value="329" />
        </attvalues>
      </node>
      <node id="raydac/java-prolog-parser" label="raydac/java-prolog-parser">
        <attvalues>
          <attvalue for="0" value="java,parser,prolog-programming-language" />
          <attvalue for="1" value="https://github.com/raydac/java-prolog-parser" />
          <attvalue for="2" value="8" />
        </attvalues>
      </node>
      <node id="langston-barrett/treeedb" label="langston-barrett/treeedb">
        <attvalues>
          <attvalue for="0" value="datalog,souffle,static-analysis,tree-sitter" />
          <attvalue for="1" value="https://github.com/langston-barrett/treeedb" />
          <attvalue for="2" value="66" />
        </attvalues>
      </node>
      <node id="evertheylen/logicpy" label="evertheylen/logicpy">
        <attvalues>
          <attvalue for="0" value="logic-programming,prolog-implementation,python3" />
          <attvalue for="1" value="https://github.com/evertheylen/logicpy" />
          <attvalue for="2" value="11" />
        </attvalues>
      </node>
      <node id="alehander92/hatlog" label="alehander92/hatlog">
        <attvalues>
          <attvalue for="0" value="grammar,prolog,python,type-system" />
          <attvalue for="1" value="https://github.com/alehander92/hatlog" />
          <attvalue for="2" value="24" />
        </attvalues>
      </node>
      <node id="racuna1/cse240-public" label="racuna1/cse240-public">
        <attvalues>
          <attvalue for="0" value="arizona-state-university,c,cpp,cse240,magic,prolog,scheme" />
          <attvalue for="1" value="https://github.com/racuna1/cse240-public" />
          <attvalue for="2" value="21" />
        </attvalues>
      </node>
      <node id="fwcd/curry-language-server" label="fwcd/curry-language-server">
        <attvalues>
          <attvalue for="0" value="curry,functional-programming,haskell,language-server-protocol,logic-programming" />
          <attvalue for="1" value="https://github.com/fwcd/curry-language-server" />
          <attvalue for="2" value="30" />
        </attvalues>
      </node>
      <node id="w1nte/vscode-dlv-syntax-highlighting" label="w1nte/vscode-dlv-syntax-highlighting">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,asp,dlv,syntax-highlighting,vscode-extension" />
          <attvalue for="1" value="https://github.com/w1nte/vscode-dlv-syntax-highlighting" />
          <attvalue for="2" value="12" />
        </attvalues>
      </node>
      <node id="SHI-Yu-Zhe/awesome-agi-cocosci" label="SHI-Yu-Zhe/awesome-agi-cocosci">
        <attvalues>
          <attvalue for="0" value="abduction,analogy,artificial-general-intelligence,awesome,awesome-list,bayesian,commonsense,computational-cognitive-science,developmental-psychology,explainable-ai,general-pattern-theory,hybrid-system,intuitive-physics,language-of-thought,logic-programming,mind-simulation,planning,pragmatics,scientific-discovery,theory-of-mind" />
          <attvalue for="1" value="https://github.com/SHI-Yu-Zhe/awesome-agi-cocosci" />
          <attvalue for="2" value="307" />
        </attvalues>
      </node>
      <node id="Hidorikun/Faculty" label="Hidorikun/Faculty">
        <attvalues>
          <attvalue for="0" value="assembly-x86,c,csharp,java,lisp,matlab,prolog,python" />
          <attvalue for="1" value="https://github.com/Hidorikun/Faculty" />
          <attvalue for="2" value="12" />
        </attvalues>
      </node>
      <node id="niamtokik/cozo" label="niamtokik/cozo">
        <attvalues>
          <attvalue for="0" value="c,cozo,cozodb,cozoscript,database,databases,datalog,db,erlang,nif,relational-databases" />
          <attvalue for="1" value="https://github.com/niamtokik/cozo" />
          <attvalue for="2" value="7" />
        </attvalues>
      </node>
      <node id="Farfi55/CookedUp" label="Farfi55/CookedUp">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,game,overcooked,unical,unity,unity3d" />
          <attvalue for="1" value="https://github.com/Farfi55/CookedUp" />
          <attvalue for="2" value="15" />
        </attvalues>
      </node>
      <node id="hjbolus/Mathematical-Logic-Through-Python" label="hjbolus/Mathematical-Logic-Through-Python">
        <attvalues>
          <attvalue for="0" value="logic,logic-programming,logical-operators,logical-programming,mathematical-logic,philosophical-logic,predicate-calculus,predicate-logic,propositional-calculus,propositional-logic,propositional-proof-system" />
          <attvalue for="1" value="https://github.com/hjbolus/Mathematical-Logic-Through-Python" />
          <attvalue for="2" value="6" />
        </attvalues>
      </node>
      <node id="ana-molinos/fund_prog" label="ana-molinos/fund_prog">
        <attvalues>
          <attvalue for="0" value="algorithm,algorithms,algoritmos,c,logic-programming,logica-de-programacao" />
          <attvalue for="1" value="https://github.com/ana-molinos/fund_prog" />
          <attvalue for="2" value="36" />
        </attvalues>
      </node>
      <node id="DuckLuckBreakout/prolog-fc-solver" label="DuckLuckBreakout/prolog-fc-solver">
        <attvalues>
          <attvalue for="0" value="bmstu,freecells,iu7,prolog,solitaire" />
          <attvalue for="1" value="https://github.com/DuckLuckBreakout/prolog-fc-solver" />
          <attvalue for="2" value="6" />
        </attvalues>
      </node>
      <node id="opencog/atomspace" label="opencog/atomspace">
        <attvalues>
          <attvalue for="0" value="atomspace,graph-database,graph-rewriting,knowledge-base,knowledge-graph,knowledge-representation,logic-programming,query-engine,query-language,relational-algebra,relational-database,rewrite-system,rewriting" />
          <attvalue for="1" value="https://github.com/opencog/atomspace" />
          <attvalue for="2" value="851" />
        </attvalues>
      </node>
      <node id="MartimVideira/PFL-Exercises" label="MartimVideira/PFL-Exercises">
        <attvalues>
          <attvalue for="0" value="exercises,haskell,prolog" />
          <attvalue for="1" value="https://github.com/MartimVideira/PFL-Exercises" />
          <attvalue for="2" value="14" />
        </attvalues>
      </node>
      <node id="rla/prolog-target-js" label="rla/prolog-target-js">
        <attvalues>
          <attvalue for="0" value="javascript,swi-prolog,transpiler" />
          <attvalue for="1" value="https://github.com/rla/prolog-target-js" />
          <attvalue for="2" value="20" />
        </attvalues>
      </node>
      <node id="friguzzi/bddem" label="friguzzi/bddem">
        <attvalues>
          <attvalue for="0" value="binary-decision-diagrams,c,cudd,inductive-logic-programming,probabilistic-logic-programming,prolog" />
          <attvalue for="1" value="https://github.com/friguzzi/bddem" />
          <attvalue for="2" value="11" />
        </attvalues>
      </node>
      <node id="ysyesilyurt/Metu-CENG" label="ysyesilyurt/Metu-CENG">
        <attvalues>
          <attvalue for="0" value="c,computer-graphics,computer-organization,computer-security,coursework,cpp,embedded-systems,formal-languages,haskell,java,logic-design,metu,metu-ceng,networking,opengl,operating-systems,programming-languages,prolog,python,signal-processing" />
          <attvalue for="1" value="https://github.com/ysyesilyurt/Metu-CENG" />
          <attvalue for="2" value="68" />
        </attvalues>
      </node>
      <node id="ikokkari/AI" label="ikokkari/AI">
        <attvalues>
          <attvalue for="0" value="aima-book,artificial-intelligence,ilkka-kokkarinen,prolog,python" />
          <attvalue for="1" value="https://github.com/ikokkari/AI" />
          <attvalue for="2" value="12" />
        </attvalues>
      </node>
      <node id="ZikangXiong/diff-spec" label="ZikangXiong/diff-spec">
        <attvalues>
          <attvalue for="0" value="differentiable-programming,first-order-logic,formal-specification,logic-programming,python,pytorch,signal-temporal-logic" />
          <attvalue for="1" value="https://github.com/ZikangXiong/diff-spec" />
          <attvalue for="2" value="6" />
        </attvalues>
      </node>
      <node id="rla/prolog-yamltiny" label="rla/prolog-yamltiny">
        <attvalues>
          <attvalue for="0" value="swi-prolog,yaml,yaml-parser" />
          <attvalue for="1" value="https://github.com/rla/prolog-yamltiny" />
          <attvalue for="2" value="6" />
        </attvalues>
      </node>
      <node id="alhassy/PrologCheatSheet" label="alhassy/PrologCheatSheet">
        <attvalues>
          <attvalue for="0" value="cheatsheet,emacs,html,pdf,prolog,relational-programming" />
          <attvalue for="1" value="https://github.com/alhassy/PrologCheatSheet" />
          <attvalue for="2" value="73" />
        </attvalues>
      </node>
      <node id="fogfish/datalog" label="fogfish/datalog">
        <attvalues>
          <attvalue for="0" value="datalog,erlang,knowledge,logic-programming,semantic-web" />
          <attvalue for="1" value="https://github.com/fogfish/datalog" />
          <attvalue for="2" value="145" />
        </attvalues>
      </node>
      <node id="Innocentsax/DSA_IN_JAVA" label="Innocentsax/DSA_IN_JAVA">
        <attvalues>
          <attvalue for="0" value="algorithms-and-data-structures,arrays,bitwise-operators,dsa-algorithm,dynamic-programming,java,logic-programming,regression,searching-algorithms,system-design" />
          <attvalue for="1" value="https://github.com/Innocentsax/DSA_IN_JAVA" />
          <attvalue for="2" value="18" />
        </attvalues>
      </node>
      <node id="SWI-Prolog/swipl-devel" label="SWI-Prolog/swipl-devel">
        <attvalues>
          <attvalue for="0" value="logic-programming,prolog,swi-prolog" />
          <attvalue for="1" value="https://github.com/SWI-Prolog/swipl-devel" />
          <attvalue for="2" value="1026" />
        </attvalues>
      </node>
      <node id="seancribbs/datalog-elixir" label="seancribbs/datalog-elixir">
        <attvalues>
          <attvalue for="0" value="datalog,elixir" />
          <attvalue for="1" value="https://github.com/seancribbs/datalog-elixir" />
          <attvalue for="2" value="31" />
        </attvalues>
      </node>
      <node id="osmansirakaya/ZBEU-computerEngineering" label="osmansirakaya/ZBEU-computerEngineering">
        <attvalues>
          <attvalue for="0" value="algorithms-and-data-structures,algoritma,assembly,c,computer-science,computerengineering,cpp,csharp,engineering,linux,matlab,oop,prolog" />
          <attvalue for="1" value="https://github.com/osmansirakaya/ZBEU-computerEngineering" />
          <attvalue for="2" value="8" />
        </attvalues>
      </node>
      <node id="arcadio/data-logic" label="arcadio/data-logic">
        <attvalues>
          <attvalue for="0" value="dcg,dsl,expert-system,logic-programming,metaprogramming,nlp,ontology,prolog,symbolic-ai,term-rewriting" />
          <attvalue for="1" value="https://github.com/arcadio/data-logic" />
          <attvalue for="2" value="19" />
        </attvalues>
      </node>
      <node id="replikativ/mesalog" label="replikativ/mesalog">
        <attvalues>
          <attvalue for="0" value="clojure,csv,csv-import,csv-parser,datahike,datalog" />
          <attvalue for="1" value="https://github.com/replikativ/mesalog" />
          <attvalue for="2" value="9" />
        </attvalues>
      </node>
      <node id="vipshop/TupleNet" label="vipshop/TupleNet">
        <attvalues>
          <attvalue for="0" value="datalog,sdn,sdn-network,virtual-network" />
          <attvalue for="1" value="https://github.com/vipshop/TupleNet" />
          <attvalue for="2" value="30" />
        </attvalues>
      </node>
      <node id="arasgungore/NandGame" label="arasgungore/NandGame">
        <attvalues>
          <attvalue for="0" value="arithmetic-circuits,arithmetic-logic-unit,binary-logic,computer,control-unit,digital-design,fundamentals-of-computing,hardware,logic-circuit,logic-gates,logic-programming,logic-unit,memory,nand-game,nandgame,processor,random-access-memory,solutions,switching,thenandgame-solutions" />
          <attvalue for="1" value="https://github.com/arasgungore/NandGame" />
          <attvalue for="2" value="14" />
        </attvalues>
      </node>
      <node id="sudiptog81/ducscode" label="sudiptog81/ducscode">
        <attvalues>
          <attvalue for="0" value="assembly,cpp,cs,du,hacktoberfest,java,javascript,prolog,system-architecture" />
          <attvalue for="1" value="https://github.com/sudiptog81/ducscode" />
          <attvalue for="2" value="23" />
        </attvalues>
      </node>
      <node id="pyzh/song" label="pyzh/song">
        <attvalues>
          <attvalue for="0" value="apl,cdn,chinese,d,elixir,erlang,forth,haskell,j,k,lua,mathematica,perl,prolog,python,rust,tacit,typescript,wolfram" />
          <attvalue for="1" value="https://github.com/pyzh/song" />
          <attvalue for="2" value="9" />
        </attvalues>
      </node>
      <node id="logicmoo/logicmoo_workspace" label="logicmoo/logicmoo_workspace">
        <attvalues>
          <attvalue for="0" value="agi,artifical-intelligence,game-server,logicmoo,mud,planner,prolog-programming-language" />
          <attvalue for="1" value="https://github.com/logicmoo/logicmoo_workspace" />
          <attvalue for="2" value="44" />
        </attvalues>
      </node>
      <node id="kusumotonorio/factlog" label="kusumotonorio/factlog">
        <attvalues>
          <attvalue for="0" value="factor,logic-programming,prolog" />
          <attvalue for="1" value="https://github.com/kusumotonorio/factlog" />
          <attvalue for="2" value="9" />
        </attvalues>
      </node>
      <node id="RuleML/PSOATransRunComponents" label="RuleML/PSOATransRunComponents">
        <attvalues>
          <attvalue for="0" value="antlr,data-structures,database,declarative,java,knowledge-base,knowledge-graph,logic,logic-programming,normalize,objects,ontologies,prolog,query,reasoning,relational-databases,rule,semantic,taxonomy,translation" />
          <attvalue for="1" value="https://github.com/RuleML/PSOATransRunComponents" />
          <attvalue for="2" value="6" />
        </attvalues>
      </node>
      <node id="mdiep/Logician" label="mdiep/Logician">
        <attvalues>
          <attvalue for="0" value="constraints,kanren,logic-programming,solver,swift" />
          <attvalue for="1" value="https://github.com/mdiep/Logician" />
          <attvalue for="2" value="196" />
        </attvalues>
      </node>
      <node id="matchilling/kata-prolog" label="matchilling/kata-prolog">
        <attvalues>
          <attvalue for="0" value="kata,kata-prolog,prolog" />
          <attvalue for="1" value="https://github.com/matchilling/kata-prolog" />
          <attvalue for="2" value="10" />
        </attvalues>
      </node>
      <node id="wenkokke/swillprover" label="wenkokke/swillprover">
        <attvalues>
          <attvalue for="0" value="linear-logic,proof-automation,swi-prolog,tool" />
          <attvalue for="1" value="https://github.com/wenkokke/swillprover" />
          <attvalue for="2" value="9" />
        </attvalues>
      </node>
      <node id="timoniq/laurelang" label="timoniq/laurelang">
        <attvalues>
          <attvalue for="0" value="logic-programming" />
          <attvalue for="1" value="https://github.com/timoniq/laurelang" />
          <attvalue for="2" value="16" />
        </attvalues>
      </node>
      <node id="fmnoise/qb" label="fmnoise/qb">
        <attvalues>
          <attvalue for="0" value="datalog,datomic,dsl,query" />
          <attvalue for="1" value="https://github.com/fmnoise/qb" />
          <attvalue for="2" value="6" />
        </attvalues>
      </node>
      <node id="pythological/unification" label="pythological/unification">
        <attvalues>
          <attvalue for="0" value="logic-programming,multiple-dispatch,python,unification" />
          <attvalue for="1" value="https://github.com/pythological/unification" />
          <attvalue for="2" value="47" />
        </attvalues>
      </node>
      <node id="STMicroelectronics/fp-sns-datalog2" label="STMicroelectronics/fp-sns-datalog2">
        <attvalues>
          <attvalue for="0" value="condition-monitoring,cube,datalog,datalogger,sensor,sensors-data-collection,stm32,stwin,ultrasound" />
          <attvalue for="1" value="https://github.com/STMicroelectronics/fp-sns-datalog2" />
          <attvalue for="2" value="17" />
        </attvalues>
      </node>
      <node id="Ana06/AI" label="Ana06/AI">
        <attvalues>
          <attvalue for="0" value="artificial-intelligence,jess,natural-language-processing,ontology,prolog,protege,recommender-system,ucm" />
          <attvalue for="1" value="https://github.com/Ana06/AI" />
          <attvalue for="2" value="25" />
        </attvalues>
      </node>
      <node id="brilacasck/wumpus-prolog" label="brilacasck/wumpus-prolog">
        <attvalues>
          <attvalue for="0" value="ai,ai-prolog,artifical-intelligense,expert-system,functional-programming,game,logic,prolog,prolog-programming-language,swi,swi-prolog,swipl,wumpus,wumpus-game,wumpus-prolog,wumpusworld" />
          <attvalue for="1" value="https://github.com/brilacasck/wumpus-prolog" />
          <attvalue for="2" value="10" />
        </attvalues>
      </node>
      <node id="rubycocos/cocos" label="rubycocos/cocos">
        <attvalues>
          <attvalue for="0" value="cocos,commons,gems,prelude,prolog,ruby" />
          <attvalue for="1" value="https://github.com/rubycocos/cocos" />
          <attvalue for="2" value="53" />
        </attvalues>
      </node>
      <node id="sarthak268/Embedded_Logic_and_Design" label="sarthak268/Embedded_Logic_and_Design">
        <attvalues>
          <attvalue for="0" value="arm,c,embedded-c,embedded-logic,embedded-systems,logic-circuit,logic-programming,pmod,verilog,verilog-hdl,verilog-programs,verilog-project,vhdl,vhdl-code,vivado,xilinx,xilinx-fpga,xilinx-sdk,xilinx-vivado,zedboard" />
          <attvalue for="1" value="https://github.com/sarthak268/Embedded_Logic_and_Design" />
          <attvalue for="2" value="23" />
        </attvalues>
      </node>
      <node id="amr205/Introduccion-a-la-IA---Libro" label="amr205/Introduccion-a-la-IA---Libro">
        <attvalues>
          <attvalue for="0" value="algoritmos-geneticos,aprendizaje-automatico,aprendizaje-no-supervisado,aprendizaje-supervisado,artifficial-intelligence,artificial-intelligence,book,genetic-algorithm,genetic-programming,inteligencia-artificial,logic-programming,machine-learning,programacion-logica,supervised-learning,unsupervised-learning" />
          <attvalue for="1" value="https://github.com/amr205/Introduccion-a-la-IA---Libro" />
          <attvalue for="2" value="17" />
        </attvalues>
      </node>
      <node id="garciparedes/prolog-examples" label="garciparedes/prolog-examples">
        <attvalues>
          <attvalue for="0" value="examples,logic-programming,prolog,university,university-of-valladolid" />
          <attvalue for="1" value="https://github.com/garciparedes/prolog-examples" />
          <attvalue for="2" value="13" />
        </attvalues>
      </node>
      <node id="gooofy/py-xsb" label="gooofy/py-xsb">
        <attvalues>
          <attvalue for="0" value="prolog,python,wrapper-api,xsb" />
          <attvalue for="1" value="https://github.com/gooofy/py-xsb" />
          <attvalue for="2" value="6" />
        </attvalues>
      </node>
      <node id="lab-v2/pyreason-gym" label="lab-v2/pyreason-gym">
        <attvalues>
          <attvalue for="0" value="gym,gym-environment,logic,logic-programming,machine-learning,reinforcement-learning,simulation" />
          <attvalue for="1" value="https://github.com/lab-v2/pyreason-gym" />
          <attvalue for="2" value="27" />
        </attvalues>
      </node>
      <node id="mlliarm/particleslogic" label="mlliarm/particleslogic">
        <attvalues>
          <attvalue for="0" value="physics,prolog" />
          <attvalue for="1" value="https://github.com/mlliarm/particleslogic" />
          <attvalue for="2" value="9" />
        </attvalues>
      </node>
      <node id="TEN-framework/ten_framework" label="TEN-framework/ten_framework">
        <attvalues>
          <attvalue for="0" value="ai,ai-agents,answer-set-programming,c,clingo,cloud-edge-computing,cloud-store,cpp,cross-language,cross-platform,golang,javascript,nodejs,package-management,plugin-system,python,rust,typescript,workflow" />
          <attvalue for="1" value="https://github.com/TEN-framework/ten_framework" />
          <attvalue for="2" value="556" />
        </attvalues>
      </node>
      <node id="chalcolith/pony-kanren" label="chalcolith/pony-kanren">
        <attvalues>
          <attvalue for="0" value="kanren,logic-programming,pony-language,ponylang" />
          <attvalue for="1" value="https://github.com/chalcolith/pony-kanren" />
          <attvalue for="2" value="7" />
        </attvalues>
      </node>
      <node id="StarKnightt/Calculator-using-java" label="StarKnightt/Calculator-using-java">
        <attvalues>
          <attvalue for="0" value="addition,algorithms-and-data-structures,answer-set-programming,calculator,calculator-application,divide,equal,java,multiplication,substraction,substraction-java" />
          <attvalue for="1" value="https://github.com/StarKnightt/Calculator-using-java" />
          <attvalue for="2" value="7" />
        </attvalues>
      </node>
      <node id="mistupv/rev-rewriting" label="mistupv/rev-rewriting">
        <attvalues>
          <attvalue for="0" value="functional-programming,program-inversion,prolog,reversible-computation,term-rewriting,transformations,trs" />
          <attvalue for="1" value="https://github.com/mistupv/rev-rewriting" />
          <attvalue for="2" value="7" />
        </attvalues>
      </node>
      <node id="Pufcorina/UBB-Computer-Science" label="Pufcorina/UBB-Computer-Science">
        <attvalues>
          <attvalue for="0" value="c,computer-science,cpp,csharp,css,html,java,lisp,prolog,python,ubb" />
          <attvalue for="1" value="https://github.com/Pufcorina/UBB-Computer-Science" />
          <attvalue for="2" value="90" />
        </attvalues>
      </node>
      <node id="friguzzi/cplint" label="friguzzi/cplint">
        <attvalues>
          <attvalue for="0" value="inductive-logic-programming,logic-programming,machine-learning,probabilistic-logic-programming,probabilistic-programming,prolog" />
          <attvalue for="1" value="https://github.com/friguzzi/cplint" />
          <attvalue for="2" value="73" />
        </attvalues>
      </node>
      <node id="s-arash/ascent" label="s-arash/ascent">
        <attvalues>
          <attvalue for="0" value="datalog,declarative-language,lattice,logic-programming,rust" />
          <attvalue for="1" value="https://github.com/s-arash/ascent" />
          <attvalue for="2" value="453" />
        </attvalues>
      </node>
      <node id="pythological/kanren" label="pythological/kanren">
        <attvalues>
          <attvalue for="0" value="clp,constraint-logic-programming,logic-programming,minikanren,relational-programming,symbolic-computation" />
          <attvalue for="1" value="https://github.com/pythological/kanren" />
          <attvalue for="2" value="200" />
        </attvalues>
      </node>
    </nodes>
    <edges />
  </graph>
</gexf>
