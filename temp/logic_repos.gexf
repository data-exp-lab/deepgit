<?xml version='1.0' encoding='utf-8'?>
<gexf xmlns="http://www.gexf.net/1.2draft" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.gexf.net/1.2draft http://www.gexf.net/1.2draft/gexf.xsd" version="1.2">
  <meta lastmodifieddate="2025-02-13">
    <creator>NetworkX 3.4.2</creator>
  </meta>
  <graph defaultedgetype="undirected" mode="static" name="">
    <attributes mode="static" class="node">
      <attribute id="0" title="topics" type="string" />
    </attributes>
    <nodes>
      <node id="rongweihe/CS_Offer" label="rongweihe/CS_Offer">
        <attvalues>
          <attvalue for="0" value="interview,cpp,programming-language,datastructures,algorithms,mysql,computer-science,linux,os,operating-system,interview-questions,interview-project,interview-practice" />
        </attvalues>
      </node>
      <node id="cboudereau/category-theory-for-dotnet-programmers" label="cboudereau/category-theory-for-dotnet-programmers">
        <attvalues>
          <attvalue for="0" value="functional-programming,fsharp,csharp,fsharp-exercises,fsharp-practice" />
        </attvalues>
      </node>
      <node id="isquicha/exercicios-logica" label="isquicha/exercicios-logica">
        <attvalues>
          <attvalue for="0" value="programming,logic,python,c,cpp,lua" />
        </attvalues>
      </node>
      <node id="OpenEuphoria/euphoria" label="OpenEuphoria/euphoria">
        <attvalues>
          <attvalue for="0" value="euphoria,programming-language,general-purpose,openeuphoria" />
        </attvalues>
      </node>
      <node id="scala-ukraine/knowledge-base" label="scala-ukraine/knowledge-base">
        <attvalues>
          <attvalue for="0" value="functional-programming,knowledge,knowledge-base,knowledgebase,learning,learning-resources,open-source,resources,scala,ukraine,ukrainian" />
        </attvalues>
      </node>
      <node id="hendrycks/math" label="hendrycks/math">
        <attvalues>
          <attvalue for="0" value="math,reasoning,logic" />
        </attvalues>
      </node>
      <node id="kickstarter/ios-oss" label="kickstarter/ios-oss">
        <attvalues>
          <attvalue for="0" value="reactivecocoa,reactiveswift,ios,swift,functional-programming,ios-app,swift-language,functional-reactive-programming,frp" />
        </attvalues>
      </node>
      <node id="zio/zio-cache" label="zio/zio-cache">
        <attvalues>
          <attvalue for="0" value="cache,scala,functional-programming,asyncronous,concurrency,effects,concurrent-programming,asynchronous-programming,concurrent,concurrent-data-structure,zio,asynchronicity" />
        </attvalues>
      </node>
      <node id="cx-language/cx" label="cx-language/cx">
        <attvalues>
          <attvalue for="0" value="programming-language,compiler,systems-language,language,native,high-performance,system-programming,performance,fast" />
        </attvalues>
      </node>
      <node id="iGaoWei/CoderBooks" label="iGaoWei/CoderBooks">
        <attvalues>
          <attvalue for="0" value="android,books,golang,ios,java,javascript,lua,pdf,php,programming-language,vue" />
        </attvalues>
      </node>
      <node id="evilthreads669966/SmsBackdoor" label="evilthreads669966/SmsBackdoor">
        <attvalues>
          <attvalue for="0" value="android-library,android-sms,sms-client,backdoor-android,sms-backdoor,kotlin-library,kotlin-android,android-rat,functional-programming,android-botnet,android-security,sms-bot,android-malware,android-spy-application" />
        </attvalues>
      </node>
      <node id="dnikolovv/cafe" label="dnikolovv/cafe">
        <attvalues>
          <attvalue for="0" value="ddd,cqrs,event-sourcing-and-cqrs,event-sourcing,integration-tests,asp-net-core,domain-driven-design,functional-programming,either-monad,tdd,bdd" />
        </attvalues>
      </node>
      <node id="Dyvil/Dyvil" label="Dyvil/Dyvil">
        <attvalues>
          <attvalue for="0" value="programming-language,jvm,dyvil,language,java,dyvil-programming-language" />
        </attvalues>
      </node>
      <node id="LeCoupa/awesome-cheatsheets" label="LeCoupa/awesome-cheatsheets">
        <attvalues>
          <attvalue for="0" value="cheatsheets,javascript,bash,nodejs,cheatsheet,database,language,frontend,backend,feathersjs,redis,vuejs,vim,django,programming-language,xcode,php,docker,kubernetes,sailsjs" />
        </attvalues>
      </node>
      <node id="savi-lang/savi" label="savi-lang/savi">
        <attvalues>
          <attvalue for="0" value="compiler,programming-language,actor-model,concurrent-programming,llvm,savi" />
        </attvalues>
      </node>
      <node id="YBogomolov/talk-typelevel-ts" label="YBogomolov/talk-typelevel-ts">
        <attvalues>
          <attvalue for="0" value="type-level-programming,typescript,fp-ts,functional-programming,types" />
        </attvalues>
      </node>
      <node id="Pebaz/LambdaCore" label="Pebaz/LambdaCore">
        <attvalues>
          <attvalue for="0" value="lisp,rust,interpreter,programming-language,scripting-language,scripting,parenthesis" />
        </attvalues>
      </node>
      <node id="marcpaq/b1fipl" label="marcpaq/b1fipl">
        <attvalues>
          <attvalue for="0" value="programming-language,pascal,brainfuck,forth,lisp,basic" />
        </attvalues>
      </node>
      <node id="jfaure/lfvm-stg" label="jfaure/lfvm-stg">
        <attvalues>
          <attvalue for="0" value="programming-language,concurrent-programming,statically-typed,compiler,lambda-calculus,pi-calculus,llvm" />
        </attvalues>
      </node>
      <node id="patrickomatic/csv-plus-plus" label="patrickomatic/csv-plus-plus">
        <attvalues>
          <attvalue for="0" value="csv,spreadsheet,google-sheets,csvpp,excel,programming-language" />
        </attvalues>
      </node>
      <node id="yubrot/llrl" label="yubrot/llrl">
        <attvalues>
          <attvalue for="0" value="compiler,programming-language,llvm,rust,macro,lisp,self-hosting" />
        </attvalues>
      </node>
      <node id="ghewgill/neon-lang" label="ghewgill/neon-lang">
        <attvalues>
          <attvalue for="0" value="neon,programming-language" />
        </attvalues>
      </node>
      <node id="yoyoyohamapi/with-or-without-fp" label="yoyoyohamapi/with-or-without-fp">
        <attvalues>
          <attvalue for="0" value="functional-programming,javascript" />
        </attvalues>
      </node>
      <node id="bow-swift/nef" label="bow-swift/nef">
        <attvalues>
          <attvalue for="0" value="swift,playground,carbon,jekyll,functional-programming,apple-documentation,bow,cocoapods,nef,hacktoberfest" />
        </attvalues>
      </node>
      <node id="noahgift/functional_intro_to_python" label="noahgift/functional_intro_to_python">
        <attvalues>
          <attvalue for="0" value="python3,tutorial,pandas,jupyter-notebook,functional-programming,data-science,learning-by-doing,python,commandline,spot-price,machine-learning,ipynb,screencast,optimization" />
        </attvalues>
      </node>
      <node id="optics-dev/Monocle" label="optics-dev/Monocle">
        <attvalues>
          <attvalue for="0" value="scala,functional-programming,optics,lens,typelevel,cats" />
        </attvalues>
      </node>
      <node id="lspector/Clojush" label="lspector/Clojush">
        <attvalues>
          <attvalue for="0" value="clojure,genetic-programming,pushgp,programming-language,stack-based,interpreter" />
        </attvalues>
      </node>
      <node id="go-air/gini" label="go-air/gini">
        <attvalues>
          <attvalue for="0" value="sat-solver,concurrent,logic-programming,logic-circuit,resolution,boolean-formulas,artificial-intelligence,verification,testing,fuzzing,dependencies,circuit-sat" />
        </attvalues>
      </node>
      <node id="spamegg1/reviews" label="spamegg1/reviews">
        <attvalues>
          <attvalue for="0" value="programming-languages,algorithms,computer-graphics,databases,logic,mathematics,networking,operating-systems,assembly,hdl,java,javascript,nand2tetris,python,racket,ruby,smlnj,scala,kotlin,c" />
        </attvalues>
      </node>
      <node id="smartherd/KotlinTutorial" label="smartherd/KotlinTutorial">
        <attvalues>
          <attvalue for="0" value="kotlin,kotlin-native,kotlin-language,kotlin-library,kotlin-coroutines,kotlin-android,android,object-oriented-programming,functional-programming" />
        </attvalues>
      </node>
      <node id="LiXizhi/NPLRuntime" label="LiXizhi/NPLRuntime">
        <attvalues>
          <attvalue for="0" value="npl,programming-language,paracraft,lua,tatfook" />
        </attvalues>
      </node>
      <node id="r0nsha/chili" label="r0nsha/chili">
        <attvalues>
          <attvalue for="0" value="compiler,language,programming-language" />
        </attvalues>
      </node>
      <node id="FrankHB/pl-docs" label="FrankHB/pl-docs">
        <attvalues>
          <attvalue for="0" value="markdown,documentation,programming-language" />
        </attvalues>
      </node>
      <node id="stavalfi/lectures" label="stavalfi/lectures">
        <attvalues>
          <attvalue for="0" value="java,java-streams,functional-programming,git,git-cherry-pick,cpp,docker,tutorial,stream,lvalue,lambda-expressions" />
        </attvalues>
      </node>
      <node id="hundredrabbits/Orca" label="hundredrabbits/Orca">
        <attvalues>
          <attvalue for="0" value="livecoding,osc,udp,midi,programming-language,esoteric-language" />
        </attvalues>
      </node>
      <node id="dragonwasrobot/learn-prolog-now-exercises" label="dragonwasrobot/learn-prolog-now-exercises">
        <attvalues>
          <attvalue for="0" value="prolog" />
        </attvalues>
      </node>
      <node id="davekinkead/reasons" label="davekinkead/reasons">
        <attvalues>
          <attvalue for="0" value="argument-mapping,html,logic,critical-thinking" />
        </attvalues>
      </node>
      <node id="egison/egison" label="egison/egison">
        <attvalues>
          <attvalue for="0" value="egison,programming-language,functional-programming,pattern-matching,computer-algebra-system,tensor,differential-geometry,hacktoberfest" />
        </attvalues>
      </node>
      <node id="FormalizedFormalLogic/Foundation" label="FormalizedFormalLogic/Foundation">
        <attvalues>
          <attvalue for="0" value="lean4,logic" />
        </attvalues>
      </node>
      <node id="ChessMax/awesome-programming-languages" label="ChessMax/awesome-programming-languages">
        <attvalues>
          <attvalue for="0" value="awesome,awesome-list,language,programming-language" />
        </attvalues>
      </node>
      <node id="CapelliC/hhprolog" label="CapelliC/hhprolog">
        <attvalues>
          <attvalue for="0" value="prolog,prolog-implementation,virtual-machine,javascript,cpp" />
        </attvalues>
      </node>
      <node id="softwaremill/tapir" label="softwaremill/tapir">
        <attvalues>
          <attvalue for="0" value="akka-http,openapi,http4s,sttp,http,scala,declarative,type-safe,functional-programming,akka,documentation,http-client,http-requests,http-server,observability,play-framework,zio" />
        </attvalues>
      </node>
      <node id="sger/ElixirBooks" label="sger/ElixirBooks">
        <attvalues>
          <attvalue for="0" value="programming-elixir,elixir,programming-erlang,erlang,programming-language,books,elixir-books,otp,erlang-vm,elixir-school,language,pdf,epub,concurrent,distributed-systems,fault-tolerance,tutorials,elixir-phoenix,phoenix,phoenix-framework" />
        </attvalues>
      </node>
      <node id="goplus/gop" label="goplus/gop">
        <attvalues>
          <attvalue for="0" value="data-science,goplus,scientific-computing,gop,stem-education,golang,engineering,low-code,programming-language,stem" />
        </attvalues>
      </node>
      <node id="gagolews/deepr" label="gagolews/deepr">
        <attvalues>
          <attvalue for="0" value="r,data-science,cran,statistics,scientific-computing,scientific-visualization,matrix-calculations,tensor,vector,vectorization,evaluation,numerical-methods,numerical-simulations,statistics-for-data-science,statistics-for-engineering,data-frame,functional-programming,graphics" />
        </attvalues>
      </node>
      <node id="codeship/modelist" label="codeship/modelist">
        <attvalues>
          <attvalue for="0" value="js,collection,model,data-structure,functional-programming,reactive,vuex,vue,react,redux,modelist" />
        </attvalues>
      </node>
      <node id="AluVM/aluvm" label="AluVM/aluvm">
        <attvalues>
          <attvalue for="0" value="virtual-machine,instruction-set-architecture,edge-computing,functional-programming,embedded-systems,risc,microcontrollers,smart-contracts,blockchain,rust" />
        </attvalues>
      </node>
      <node id="Lexpedite/blawx" label="Lexpedite/blawx">
        <attvalues>
          <attvalue for="0" value="rules-as-code,logic-programming,drag-and-drop,blockly,scasp" />
        </attvalues>
      </node>
      <node id="bramucas/xclingo2" label="bramucas/xclingo2">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,logic-programming,explainability,debugging-tool" />
        </attvalues>
      </node>
      <node id="KhushPatibandha/kolon" label="KhushPatibandha/kolon">
        <attvalues>
          <attvalue for="0" value="programming-language" />
        </attvalues>
      </node>
      <node id="singul4ri7y/promit" label="singul4ri7y/promit">
        <attvalues>
          <attvalue for="0" value="compiler,interpreter,language,programming-language,scripting-language,scripts,stack-vm,vm,promit" />
        </attvalues>
      </node>
      <node id="blade-lang/blade" label="blade-lang/blade">
        <attvalues>
          <attvalue for="0" value="programming-language,interpreter,compiler,language,blade" />
        </attvalues>
      </node>
      <node id="jcouyang/owlet" label="jcouyang/owlet">
        <attvalues>
          <attvalue for="0" value="scalajs,reactive,applicative,spreadsheet,ui,scala,birds,functional-programming" />
        </attvalues>
      </node>
      <node id="phreda4/r4" label="phreda4/r4">
        <attvalues>
          <attvalue for="0" value="programming-language,colorforth,forth" />
        </attvalues>
      </node>
      <node id="PipeRift/rift" label="PipeRift/rift">
        <attvalues>
          <attvalue for="0" value="rift,programming-language,compiler,llvm,language" />
        </attvalues>
      </node>
      <node id="rpominov/fun-task" label="rpominov/fun-task">
        <attvalues>
          <attvalue for="0" value="fp,promise,future,task,async,monad,functional-programming" />
        </attvalues>
      </node>
      <node id="QuickBirdEng/DataKit" label="QuickBirdEng/DataKit">
        <attvalues>
          <attvalue for="0" value="binary-data,ble,bluetooth,bluetooth-le,bluetooth-low-energy,data,declarative,declarative-programming,decoding,dsl,encoding,network,resultbuilder,swift,swift5" />
        </attvalues>
      </node>
      <node id="John-Leitch/Aphid" label="John-Leitch/Aphid">
        <attvalues>
          <attvalue for="0" value="aphid,c-sharp,programming-language,programming-language-development,lexer-generator,parser-generator" />
        </attvalues>
      </node>
      <node id="UFrameIT/UFrameIT" label="UFrameIT/UFrameIT">
        <attvalues>
          <attvalue for="0" value="educational-game,unity,logic,mathematical-knowledge-management,research-project" />
        </attvalues>
      </node>
      <node id="Azer0s/HadesLang" label="Azer0s/HadesLang">
        <attvalues>
          <attvalue for="0" value="interpreter,csharp,language,dotnet-core,programming-language,scripting-language,wip" />
        </attvalues>
      </node>
      <node id="fatho/logru" label="fatho/logru">
        <attvalues>
          <attvalue for="0" value="logic-programming,rust,hacktoberfest" />
        </attvalues>
      </node>
      <node id="mlanza/atomic" label="mlanza/atomic">
        <attvalues>
          <attvalue for="0" value="javascript,transducers,protocols,library,general-purpose,immutables,functional-programming,clojurescript,frp,functional-core-imperative-shell" />
        </attvalues>
      </node>
      <node id="gnudatalanguage/gdl" label="gnudatalanguage/gdl">
        <attvalues>
          <attvalue for="0" value="astronomy,data-analysis,antlr,python,pv-wave,programming-language,geophysics,mapping,scientific-computing,scientific-visualization,plplot,gsl-library,plotting,netcdf,hdf5,hdf,dicom,fits-files,grib,eigen3" />
        </attvalues>
      </node>
      <node id="johannlilly/book-fullstack-react" label="johannlilly/book-fullstack-react">
        <attvalues>
          <attvalue for="0" value="javascript,functional-programming,es6,react,react-native,reactjs,react-router,react-redux,react-components,react-hooks,graphql,textbook,exercise-files" />
        </attvalues>
      </node>
      <node id="andriksantos/keebox" label="andriksantos/keebox">
        <attvalues>
          <attvalue for="0" value="amazing,list,awesome,resources,awesome-list,collaboration,chatgpt,educational-project,programming,programming-language,resource-management,resourcepack" />
        </attvalues>
      </node>
      <node id="zio/zio-query" label="zio/zio-query">
        <attvalues>
          <attvalue for="0" value="scala,zio,functional-programming,query-optimization" />
        </attvalues>
      </node>
      <node id="Devs-Dungeon/Resources" label="Devs-Dungeon/Resources">
        <attvalues>
          <attvalue for="0" value="computer-science,programming,coding-challenges,interview-preparation,project,app-development,big-data,blockchain,cloud-computing,cybersecurity,dbms,data-science,dsa-algorithm,devops,game-development,git-github,iot,programming-language,robotics,web-development" />
        </attvalues>
      </node>
      <node id="hirrolot/metalang99" label="hirrolot/metalang99">
        <attvalues>
          <attvalue for="0" value="c,c99,cpp,cpp11,programming-language,metaprogramming,macros,embedded-language,header-only,functional-programming,fp,functional-language,interpreter,language,metalang99" />
        </attvalues>
      </node>
      <node id="typelead/eta" label="typelead/eta">
        <attvalues>
          <attvalue for="0" value="eta,jvm,haskell,functional-programming" />
        </attvalues>
      </node>
      <node id="nickslevine/zebras" label="nickslevine/zebras">
        <attvalues>
          <attvalue for="0" value="javascript,data-analysis,data-science,pandas,ramda,functional-programming" />
        </attvalues>
      </node>
      <node id="LebsterFace/LebJS" label="LebsterFace/LebJS">
        <attvalues>
          <attvalue for="0" value="javascript,java,ecmascript,programming-language,parser" />
        </attvalues>
      </node>
      <node id="retrofor/iamai" label="retrofor/iamai">
        <attvalues>
          <attvalue for="0" value="onebot,python,bot,rasa,whl,gpt,ai,ml,artificial-intelligence,machine-learning,flow,flowchart,logic,logic-programming,rules" />
        </attvalues>
      </node>
      <node id="redgeoff/mson" label="redgeoff/mson">
        <attvalues>
          <attvalue for="0" value="json,react,material-ui,programming-language,javascript,validation,app-generator,mson" />
        </attvalues>
      </node>
      <node id="AdeptLanguage/Adept" label="AdeptLanguage/Adept">
        <attvalues>
          <attvalue for="0" value="programming-language,compiler,low-level" />
        </attvalues>
      </node>
      <node id="ddj231/Handel" label="ddj231/Handel">
        <attvalues>
          <attvalue for="0" value="handel,music-composition,tonejs,programming-language,procedural-programming-language" />
        </attvalues>
      </node>
      <node id="sin-ack/zigself" label="sin-ack/zigself">
        <attvalues>
          <attvalue for="0" value="programming-language,self-language,interpreter" />
        </attvalues>
      </node>
      <node id="souffle-lang/souffle" label="souffle-lang/souffle">
        <attvalues>
          <attvalue for="0" value="datalog,static-code-analysis,souffle,translator,logic-programming" />
        </attvalues>
      </node>
      <node id="trealla-prolog/trealla" label="trealla-prolog/trealla">
        <attvalues>
          <attvalue for="0" value="prolog,prolog-interpreter,c,iso-prolog-standard,prolog-implementation,prolog-programming-language" />
        </attvalues>
      </node>
      <node id="Tidal-Lang/Tidal" label="Tidal-Lang/Tidal">
        <attvalues>
          <attvalue for="0" value="custom-programming-language,programming-language,rust,rust-programming-language" />
        </attvalues>
      </node>
      <node id="esimov/gogu" label="esimov/gogu">
        <attvalues>
          <attvalue for="0" value="go,golang,data-structures,functional,functional-programming,generics,programming,datastructures,trie" />
        </attvalues>
      </node>
      <node id="FrankBro/ordo" label="FrankBro/ordo">
        <attvalues>
          <attvalue for="0" value="compiler,row-polymorphism,variants,records,programming-language" />
        </attvalues>
      </node>
      <node id="domn1995/dunet" label="domn1995/dunet">
        <attvalues>
          <attvalue for="0" value="csharp,discriminated-unions,dotnet,functional-programming,csharp-sourcegenerator,fp,functional,union" />
        </attvalues>
      </node>
      <node id="VirtusLab/avocADO" label="VirtusLab/avocADO">
        <attvalues>
          <attvalue for="0" value="scala,cats-effect,functional-programming,scala3,zio,cats" />
        </attvalues>
      </node>
      <node id="timjs/elm-collage" label="timjs/elm-collage">
        <attvalues>
          <attvalue for="0" value="elm,graphics,composition,functional-programming,svg" />
        </attvalues>
      </node>
      <node id="pashmaklang/pashmak" label="pashmaklang/pashmak">
        <attvalues>
          <attvalue for="0" value="interpreter,prgroamming,language,pashmak-interpreter,pashmak-programming-language,pashmak,python,programming-language" />
        </attvalues>
      </node>
      <node id="diegohaz/schm" label="diegohaz/schm">
        <attvalues>
          <attvalue for="0" value="schema,functional-programming,parse,validate,compose,joi,json-schema,lerna" />
        </attvalues>
      </node>
      <node id="timoniq/laurelang" label="timoniq/laurelang">
        <attvalues>
          <attvalue for="0" value="logic-programming" />
        </attvalues>
      </node>
      <node id="Southclaws/opt" label="Southclaws/opt">
        <attvalues>
          <attvalue for="0" value="functional-programming,go,golang,maybe-type,optional,optional-type" />
        </attvalues>
      </node>
      <node id="itssamuelrowe/Zen" label="itssamuelrowe/Zen">
        <attvalues>
          <attvalue for="0" value="zen,programming-language,virtual-machine,garbage-collector,compiler,c,zen-compiler,jtk,object-oriented-programming,dynamic-typing,duck-typing" />
        </attvalues>
      </node>
      <node id="tau-prolog/tau-prolog" label="tau-prolog/tau-prolog">
        <attvalues>
          <attvalue for="0" value="tau-prolog,prolog-interpreter,iso-prolog-standard,javascript,prolog,prolog-programming-language,prolog-implementation,logic-programming" />
        </attvalues>
      </node>
      <node id="crossoverJie/gscript" label="crossoverJie/gscript">
        <attvalues>
          <attvalue for="0" value="antlr4,compile,golang,go,language,programming-language" />
        </attvalues>
      </node>
      <node id="wspace/corpus" label="wspace/corpus">
        <attvalues>
          <attvalue for="0" value="whitespace-language,interpreter,compiler,jit,whitespace,programming-language,collection" />
        </attvalues>
      </node>
      <node id="ecere/ecere-sdk" label="ecere/ecere-sdk">
        <attvalues>
          <attvalue for="0" value="cross-platform-development,cross-platform,cross-platform-ide,programming-language,cross-platform-gui,3d-graphics-engine,binding-generator,game-engine,ec-language,ide,sdk,ec,vr,hololens,magicleap,android,gui-toolkit" />
        </attvalues>
      </node>
      <node id="gcanti/retry-ts" label="gcanti/retry-ts">
        <attvalues>
          <attvalue for="0" value="fp-ts,functional-programming,typescript" />
        </attvalues>
      </node>
      <node id="siraben/fp-notes" label="siraben/fp-notes">
        <attvalues>
          <attvalue for="0" value="functional-programming,notes" />
        </attvalues>
      </node>
      <node id="ekzhang/percival" label="ekzhang/percival">
        <attvalues>
          <attvalue for="0" value="data-visualization,datalog,logic-programming,query-language,dsl,reactive,visualization,charts,notebook" />
        </attvalues>
      </node>
      <node id="pannous/angle" label="pannous/angle">
        <attvalues>
          <attvalue for="0" value="programming-language,python,compiler,apple-script,speech-recognition,speech-to-text,programming-by-natural-language" />
        </attvalues>
      </node>
      <node id="zio-archive/zio-actors" label="zio-archive/zio-actors">
        <attvalues>
          <attvalue for="0" value="scala,actor-model,functional-programming,zio" />
        </attvalues>
      </node>
      <node id="huangsam/ultimate-python" label="huangsam/ultimate-python">
        <attvalues>
          <attvalue for="0" value="python,python3,study,programming-language,newcomers,professionals,learn-to-code,learning-by-doing,learning-resources,learning-python,hacktoberfest" />
        </attvalues>
      </node>
      <node id="xvw/preface" label="xvw/preface">
        <attvalues>
          <attvalue for="0" value="ocaml,stdlib,functional-programming,category-theory" />
        </attvalues>
      </node>
      <node id="kengorab/abra-lang" label="kengorab/abra-lang">
        <attvalues>
          <attvalue for="0" value="pratt-parser,programming-language,compiler,qbe,self-hosted" />
        </attvalues>
      </node>
      <node id="rutgerswiselab/NLR" label="rutgerswiselab/NLR">
        <attvalues>
          <attvalue for="0" value="neural,logic,reasoning" />
        </attvalues>
      </node>
      <node id="dbaumgarten/yodk" label="dbaumgarten/yodk">
        <attvalues>
          <attvalue for="0" value="yolol,starbase,developer-tools,programming-language,vscode-extension,nolol" />
        </attvalues>
      </node>
      <node id="gjbex/Python-software-engineering" label="gjbex/Python-software-engineering">
        <attvalues>
          <attvalue for="0" value="python,training,python-training,object-oriented-programming,functional-programming,design-patterns,best-practices" />
        </attvalues>
      </node>
      <node id="Jumaruba/LPL-solutions" label="Jumaruba/LPL-solutions">
        <attvalues>
          <attvalue for="0" value="lpl,logic,proof,fitch-proofs,fitch" />
        </attvalues>
      </node>
      <node id="asperti/BOHM1.1" label="asperti/BOHM1.1">
        <attvalues>
          <attvalue for="0" value="lambda,higher-order-functions,compilers,graph-reduction,functional-programming,lambda-expressions,lambda-calculus" />
        </attvalues>
      </node>
      <node id="hablapps/puretest" label="hablapps/puretest">
        <attvalues>
          <attvalue for="0" value="functional-programming,testing,scalaz,cats,typeclasses" />
        </attvalues>
      </node>
      <node id="pakoito/RxSealedUnions2" label="pakoito/RxSealedUnions2">
        <attvalues>
          <attvalue for="0" value="java,functional-programming,rxjava2" />
        </attvalues>
      </node>
      <node id="schani/mathmap" label="schani/mathmap">
        <attvalues>
          <attvalue for="0" value="c,programming-language,compiler,graphics,gimp-plugin,gimp" />
        </attvalues>
      </node>
      <node id="zephyrtronium/iolang" label="zephyrtronium/iolang">
        <attvalues>
          <attvalue for="0" value="language,programming-language,scripting-language" />
        </attvalues>
      </node>
      <node id="emarzion/SystemT" label="emarzion/SystemT">
        <attvalues>
          <attvalue for="0" value="mathematics,logic,mathematical-logic" />
        </attvalues>
      </node>
      <node id="DirectToSwift/CoreDataToSwiftUI" label="DirectToSwift/CoreDataToSwiftUI">
        <attvalues>
          <attvalue for="0" value="declarative-programming,declarative-ui,coredata,swiftui,swift,swiftui-rules" />
        </attvalues>
      </node>
      <node id="strymonas/strymonas-scala" label="strymonas/strymonas-scala">
        <attvalues>
          <attvalue for="0" value="stream,scala,functional-programming,scala3" />
        </attvalues>
      </node>
      <node id="pkMinhas/MaschineKitDuplicator" label="pkMinhas/MaschineKitDuplicator">
        <attvalues>
          <attvalue for="0" value="maschine,daw,flstudio,ableton,logic" />
        </attvalues>
      </node>
      <node id="iptop/babel-plugin-proposal-pattern-matching" label="iptop/babel-plugin-proposal-pattern-matching">
        <attvalues>
          <attvalue for="0" value="babel,javascript,functional-programming,pattern-matching,babel-plugin" />
        </attvalues>
      </node>
      <node id="pawelrubin/rustshed" label="pawelrubin/rustshed">
        <attvalues>
          <attvalue for="0" value="functional-programming,monads,python,rust" />
        </attvalues>
      </node>
      <node id="qingmei2/MVI-Architecture" label="qingmei2/MVI-Architecture">
        <attvalues>
          <attvalue for="0" value="mvi-architecture,mvi,mvi-android,functional-programming,reactive-programming,android-jetpack" />
        </attvalues>
      </node>
      <node id="kyouko-taiga/mvs-calculus" label="kyouko-taiga/mvs-calculus">
        <attvalues>
          <attvalue for="0" value="compiler,programming-language" />
        </attvalues>
      </node>
      <node id="helixlang/helix-lang" label="helixlang/helix-lang">
        <attvalues>
          <attvalue for="0" value="helix,programing-language,python,language,compiler,cpp,rust,programming-language,c,toolchain,xmake,helix-lang,llvm" />
        </attvalues>
      </node>
      <node id="Ekdohibs/joujou" label="Ekdohibs/joujou">
        <attvalues>
          <attvalue for="0" value="functional-programming,algebraic-effects,type-inference,continuations,handlers,compiler" />
        </attvalues>
      </node>
      <node id="SAP-samples/build-codejam" label="SAP-samples/build-codejam">
        <attvalues>
          <attvalue for="0" value="data-access,logic,sample,sap-build-apps,sap-build-process-automation,ui,sap-build-work-zone,sap-codejam" />
        </attvalues>
      </node>
      <node id="stefano-regosa-deel/pattern-matching-ts" label="stefano-regosa-deel/pattern-matching-ts">
        <attvalues>
          <attvalue for="0" value="functional-programming,pattern-matching,typescript,fp,fp-ts,typescript-pattern-matching,pattern,matching,option-monad" />
        </attvalues>
      </node>
      <node id="ALANVF/Star-lang-specification" label="ALANVF/Star-lang-specification">
        <attvalues>
          <attvalue for="0" value="star,programming-language,objective-c,consistency,object-oriented,llvm" />
        </attvalues>
      </node>
      <node id="MinhasKamal/CreepyCodeCollection" label="MinhasKamal/CreepyCodeCollection">
        <attvalues>
          <attvalue for="0" value="quine,polyglot,code-golf,obfuscated,signature,creepy-codes,mandelbrot,esoteric-language,esoteric,golf,programming-language,programming,golfing" />
        </attvalues>
      </node>
      <node id="onux/jspp" label="onux/jspp">
        <attvalues>
          <attvalue for="0" value="language,languages,programming-language,programming-languages,javascript,nodejs,node-js,js,jspp,compiler" />
        </attvalues>
      </node>
      <node id="rottytooth/Entropy" label="rottytooth/Entropy">
        <attvalues>
          <attvalue for="0" value="esolang,entropy,programming-language,esoteric-language,esoteric-programming-language" />
        </attvalues>
      </node>
      <node id="torch2424/wasm-by-example" label="torch2424/wasm-by-example">
        <attvalues>
          <attvalue for="0" value="wasm,programming-language,learning,learning-by-doing,example,examples,webassembly,introduction,tutorial" />
        </attvalues>
      </node>
      <node id="MNoorFawi/pytholog" label="MNoorFawi/pytholog">
        <attvalues>
          <attvalue for="0" value="symbolic-artificial-intelligence,logic-programming,neuro-symbolic-learning,python,prolog,prolog-syntax,backtracking" />
        </attvalues>
      </node>
      <node id="glennstreet/awesome-philosophy-compsci" label="glennstreet/awesome-philosophy-compsci">
        <attvalues>
          <attvalue for="0" value="computer-science,philosophy,logic,prolog" />
        </attvalues>
      </node>
      <node id="cotowali/cotowali" label="cotowali/cotowali">
        <attvalues>
          <attvalue for="0" value="programming-language,cotowari,transpiler,shell-script,language" />
        </attvalues>
      </node>
      <node id="Ivy-Apps/ivy-wallet" label="Ivy-Apps/ivy-wallet">
        <attvalues>
          <attvalue for="0" value="kotlin,jetpack-compose,money-manager,android,ui-ux,functional-programming,functional-reactive-programming,hilt-android,reactive-programming,room-database,kotest,kotlin-flow,ktor-client,modularization,mvi-android,mvi-architecture,jetpackcompose,android-architecture" />
        </attvalues>
      </node>
      <node id="Lcbx/GdScript2All" label="Lcbx/GdScript2All">
        <attvalues>
          <attvalue for="0" value="cpp,csharp,gdscript,godot,godot4,transpiler,python3,programming-language,scripting,scripting-language" />
        </attvalues>
      </node>
      <node id="Abouelyatim/Functional-Programming-101-Java" label="Abouelyatim/Functional-Programming-101-Java">
        <attvalues>
          <attvalue for="0" value="higher-order-functions,java,functional-programming,declarative-programming,lambda-functions" />
        </attvalues>
      </node>
      <node id="lac-dcc/wyvern" label="lac-dcc/wyvern">
        <attvalues>
          <attvalue for="0" value="closures,code-generation,compiler,functional-programming,lazy-evaluation,llvm,optimization,outlining" />
        </attvalues>
      </node>
      <node id="ftlorg/ftl" label="ftlorg/ftl">
        <attvalues>
          <attvalue for="0" value="cpp,cpp-library,functional-programming" />
        </attvalues>
      </node>
      <node id="anupcowkur/Here-Be-Dragons" label="anupcowkur/Here-Be-Dragons">
        <attvalues>
          <attvalue for="0" value="java,android,intellij,androidstudio,androidstudio-plugin,functional-programming,side-effects" />
        </attvalues>
      </node>
      <node id="huangyz0918/TankLogo" label="huangyz0918/TankLogo">
        <attvalues>
          <attvalue for="0" value="tank,tank-game,game,netlogo,logic-programming,tech,teaching" />
        </attvalues>
      </node>
      <node id="noir-lang/noir" label="noir-lang/noir">
        <attvalues>
          <attvalue for="0" value="cryptography,zero-knowledge,compiler,noir-lang,programming-language" />
        </attvalues>
      </node>
      <node id="mlatu-lang/mlatu" label="mlatu-lang/mlatu">
        <attvalues>
          <attvalue for="0" value="concatenative,concatenative-programming-language,interpreter,programming-language,language,proglands-discord" />
        </attvalues>
      </node>
      <node id="chibicode/Y-Combinator-for-Non-programmers" label="chibicode/Y-Combinator-for-Non-programmers">
        <attvalues>
          <attvalue for="0" value="y-combinator,lambda-calculus,typescript,reactjs,react,functional-programming" />
        </attvalues>
      </node>
      <node id="eazar001/yesbot" label="eazar001/yesbot">
        <attvalues>
          <attvalue for="0" value="prolog,swi-prolog,bot,irc-bot,irc-client,irc" />
        </attvalues>
      </node>
      <node id="andgate/type-theory-compiler" label="andgate/type-theory-compiler">
        <attvalues>
          <attvalue for="0" value="compiler,languages,lambda-calculus,type-system,functional-programming,functional-language" />
        </attvalues>
      </node>
      <node id="Sobeston/zig.guide" label="Sobeston/zig.guide">
        <attvalues>
          <attvalue for="0" value="zig,ziglang,learning,learning-by-doing,learn-to-code,educational,programming-language,documentation,education" />
        </attvalues>
      </node>
      <node id="mountain/knowledge" label="mountain/knowledge">
        <attvalues>
          <attvalue for="0" value="clojure,knowledge,logic-programming,wikidata" />
        </attvalues>
      </node>
      <node id="joey00072/Baji-Marathi-Programing-Language" label="joey00072/Baji-Marathi-Programing-Language">
        <attvalues>
          <attvalue for="0" value="marathi,marathi-language,python3,programming-language" />
        </attvalues>
      </node>
      <node id="markusmoenig/ForgedThoughts" label="markusmoenig/ForgedThoughts">
        <attvalues>
          <attvalue for="0" value="modeling,rendering,sdf,programming-language,3d" />
        </attvalues>
      </node>
      <node id="kotlinz/kotlinz" label="kotlinz/kotlinz">
        <attvalues>
          <attvalue for="0" value="monad,kotlin,functional-programming,kotlinz,category,category-theory" />
        </attvalues>
      </node>
      <node id="cicada-lang/cicada-plct" label="cicada-lang/cicada-plct">
        <attvalues>
          <attvalue for="0" value="cicada,dependent-record-types,dependent-type-theory,dependent-types,interactive-theorem-proving,language,programming-language,prover,repl,theorem-prover,type-system,type-theory" />
        </attvalues>
      </node>
      <node id="jukaLang/Juka" label="jukaLang/Juka">
        <attvalues>
          <attvalue for="0" value="desktop,csharp,mobile,compiler,programming-language,azure,azure-functions,windows,programming-languages,linux,macos,console,programming,tool,android,ios,utility,interpreter,cloud,portable" />
        </attvalues>
      </node>
      <node id="ein-lang/ein" label="ein-lang/ein">
        <attvalues>
          <attvalue for="0" value="language,functional-programming" />
        </attvalues>
      </node>
      <node id="moonad/TaelinArena" label="moonad/TaelinArena">
        <attvalues>
          <attvalue for="0" value="game-development,game,functional-programming,formality,moba,taelin" />
        </attvalues>
      </node>
      <node id="AZHenley/knox" label="AZHenley/knox">
        <attvalues>
          <attvalue for="0" value="compiler,programming-language" />
        </attvalues>
      </node>
      <node id="tmbasic-lang/tmbasic" label="tmbasic-lang/tmbasic">
        <attvalues>
          <attvalue for="0" value="basic,programming-language,tui,basic-programming-language,terminal" />
        </attvalues>
      </node>
      <node id="oldratlee/translations" label="oldratlee/translations">
        <attvalues>
          <attvalue for="0" value="translation,chinese-translation,lisp,erlang,elixir,git,design,distributed-systems,paxos,python,design-principle,consensus,experiment,api,api-design,simplified-chinese,translations,reactive,concurrency,functional-programming" />
        </attvalues>
      </node>
      <node id="igrishaev/f" label="igrishaev/f">
        <attvalues>
          <attvalue for="0" value="python,functional-programming,collections,clojure,monad" />
        </attvalues>
      </node>
      <node id="thosakwe/t2b" label="thosakwe/t2b">
        <attvalues>
          <attvalue for="0" value="programming-language,command-line,macros,t2b" />
        </attvalues>
      </node>
      <node id="lenguaje-latino/latino" label="lenguaje-latino/latino">
        <attvalues>
          <attvalue for="0" value="programacion,espanol,lenguaje-latino,latino,programming-language,lenguaje-de-programacion" />
        </attvalues>
      </node>
      <node id="WheretIB/nullc" label="WheretIB/nullc">
        <attvalues>
          <attvalue for="0" value="programming-language,embeddable,scripting-language" />
        </attvalues>
      </node>
      <node id="neogeodev/FusionConverter" label="neogeodev/FusionConverter">
        <attvalues>
          <attvalue for="0" value="mvs,aes,neogeo,snk,converter,cpld,logic,pcb" />
        </attvalues>
      </node>
      <node id="dlang/dmd" label="dlang/dmd">
        <attvalues>
          <attvalue for="0" value="compiler,programming-language,native,fast,d,dlang,dmd,language,hacktoberfest" />
        </attvalues>
      </node>
      <node id="naman03malhotra/match-rules" label="naman03malhotra/match-rules">
        <attvalues>
          <attvalue for="0" value="declarative,declarative-programming,complex-rules,complex-conditions,conditional-statements,if-else,react,reactjs,npm-module,if-else-refactoring,imperative-programming,imperative,javascript-utility" />
        </attvalues>
      </node>
      <node id="GregRos/parjs" label="GregRos/parjs">
        <attvalues>
          <attvalue for="0" value="parser-combinators,javascript,typescript,parser,text,parse,parsing,functional-programming" />
        </attvalues>
      </node>
      <node id="aument-lang/aument" label="aument-lang/aument">
        <attvalues>
          <attvalue for="0" value="scripting-language,programming-language,aument,c,language" />
        </attvalues>
      </node>
      <node id="VladKopanev/zio-saga" label="VladKopanev/zio-saga">
        <attvalues>
          <attvalue for="0" value="scala,fp,functional-programming,saga-pattern,sagas,saga,zio,concurrency,distributed-systems" />
        </attvalues>
      </node>
      <node id="IBM/fp-go" label="IBM/fp-go">
        <attvalues>
          <attvalue for="0" value="functional-programming,go,golang,library,monad,utility" />
        </attvalues>
      </node>
      <node id="calculang/calculang" label="calculang/calculang">
        <attvalues>
          <attvalue for="0" value="javascript,functional-programming,modeling,models,calculations,numbers,modelling,calculang" />
        </attvalues>
      </node>
      <node id="snowball-lang/snowball" label="snowball-lang/snowball">
        <attvalues>
          <attvalue for="0" value="compiler,programming-language,llvm-compiler,llvm-frontend,object-oriented-programming,snowball-lang" />
        </attvalues>
      </node>
      <node id="fnogatz/tap" label="fnogatz/tap">
        <attvalues>
          <attvalue for="0" value="swi-prolog,prolog,tap" />
        </attvalues>
      </node>
      <node id="a-synchronous/rubico" label="a-synchronous/rubico">
        <attvalues>
          <attvalue for="0" value="function-composition,asynchronous,transducers,parallel,series,functional-programming,promise,async-await,node,javascript,tacit,pointfree,concurrent,iterator,async,generator,combinators,monad,operator,mux" />
        </attvalues>
      </node>
      <node id="facet-lang/facet" label="facet-lang/facet">
        <attvalues>
          <attvalue for="0" value="algebraic-effects,programming-language,compiler" />
        </attvalues>
      </node>
      <node id="WerWolv/PatternLanguage" label="WerWolv/PatternLanguage">
        <attvalues>
          <attvalue for="0" value="binary,dsl,hex-editor,imhex,pattern,programming-language,hacktoberfest" />
        </attvalues>
      </node>
      <node id="maityamit/Cpp-DSA-Notes-and-Programs" label="maityamit/Cpp-DSA-Notes-and-Programs">
        <attvalues>
          <attvalue for="0" value="cpp,programming,programming-language,coding,cpp-course,data-structures,dsa,dsa-algorithm,dsa-learning-series,dsa-practice,dsalgo-questions" />
        </attvalues>
      </node>
      <node id="karlstroetmann/Logic" label="karlstroetmann/Logic">
        <attvalues>
          <attvalue for="0" value="logic,python,z3-prover" />
        </attvalues>
      </node>
      <node id="maxmindlin/scout-lang" label="maxmindlin/scout-lang">
        <attvalues>
          <attvalue for="0" value="dsl,programming-language,web-crawling,web-scraping,scraper,scraping,scraping-websites" />
        </attvalues>
      </node>
      <node id="sneeuwballen/zipperposition" label="sneeuwballen/zipperposition">
        <attvalues>
          <attvalue for="0" value="prover,superposition,ocaml,experimental,logic,computer-science-algorithms,prototype,induction,polymorphism,rewriting,cnf,symbolic-computation,saturation" />
        </attvalues>
      </node>
      <node id="seanpm2001/AI2001" label="seanpm2001/AI2001">
        <attvalues>
          <attvalue for="0" value="ai,artificial-intelligence,c,cython,gpl3,gplv3,home,home-repo,home-repository,homepage,julia,md,prolog,python,r,txt,ai-2001,ai2001,artificial-intelligence-2001" />
        </attvalues>
      </node>
      <node id="Aluriak/clyngor" label="Aluriak/clyngor">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,wrapper,python,python-library,python3" />
        </attvalues>
      </node>
      <node id="sreahw/schuller-geometric" label="sreahw/schuller-geometric">
        <attvalues>
          <attvalue for="0" value="logic,notes,truth,axioms,sets,classification,topology,homotopy,manifolds,bundles,lie,curves,physics,geometry,algebras,dynkin" />
        </attvalues>
      </node>
      <node id="nomisRev/ktor-k8s-zero-downtime" label="nomisRev/ktor-k8s-zero-downtime">
        <attvalues>
          <attvalue for="0" value="arrow-kt,functional-programming,kotlin-coroutines,kotlin-native,ktor,kubernetes,microservices" />
        </attvalues>
      </node>
      <node id="vrtbl/passerine" label="vrtbl/passerine">
        <attvalues>
          <attvalue for="0" value="programming-language,passerine,compiler,interpreter,vm,macros" />
        </attvalues>
      </node>
      <node id="candy-lang/candy" label="candy-lang/candy">
        <attvalues>
          <attvalue for="0" value="programming-language,language,compiler,hacktoberfest,rust,fuzzer,language-server" />
        </attvalues>
      </node>
      <node id="MartimVideira/PFL-Exercises" label="MartimVideira/PFL-Exercises">
        <attvalues>
          <attvalue for="0" value="haskell,exercises,prolog" />
        </attvalues>
      </node>
      <node id="SimonWaldherr/golang-examples" label="SimonWaldherr/golang-examples">
        <attvalues>
          <attvalue for="0" value="golang,go,examples,learning,education,howto,hacktoberfest-accepted,hacktoberfest,programming-language" />
        </attvalues>
      </node>
      <node id="vedic-lang/vedic" label="vedic-lang/vedic">
        <attvalues>
          <attvalue for="0" value="vedic,vedicscript,programming-language,ptprashanttripathi,sanskrit,sanskrit-language,sanskrit-programming-language" />
        </attvalues>
      </node>
      <node id="prescientmoon/esbuild-plugin-purescript" label="prescientmoon/esbuild-plugin-purescript">
        <attvalues>
          <attvalue for="0" value="plugin,esbuild,purescript,functional-programming" />
        </attvalues>
      </node>
      <node id="kailuowang/mainecoon" label="kailuowang/mainecoon">
        <attvalues>
          <attvalue for="0" value="tagless-final,functional-programming,metaprogramming,tagless,final,scala" />
        </attvalues>
      </node>
      <node id="bichanna/slap" label="bichanna/slap">
        <attvalues>
          <attvalue for="0" value="programming-language,slap,language,interpreter,lox-language,tree-walker,lox,compiler,transpiler,js,javascript" />
        </attvalues>
      </node>
      <node id="Bayakala/FunDA" label="Bayakala/FunDA">
        <attvalues>
          <attvalue for="0" value="scala,slick,reactive-streams,scalaz-streams-fs2,play-iteratees,functional-programming" />
        </attvalues>
      </node>
      <node id="lilydjwg/swapview-rosetta" label="lilydjwg/swapview-rosetta">
        <attvalues>
          <attvalue for="0" value="linux,programming-language,programming-exercise,comparison,helloworld,rust" />
        </attvalues>
      </node>
      <node id="inexorabletash/jsbasic" label="inexorabletash/jsbasic">
        <attvalues>
          <attvalue for="0" value="basic,programming-language" />
        </attvalues>
      </node>
      <node id="aartikis/RTEC" label="aartikis/RTEC">
        <attvalues>
          <attvalue for="0" value="logic-programming,data-stream-processing,artificial-intelligence,data-science,complex-event-processing,multi-agent-systems,stream-reasoning,stream-processing,cep,event-calculus,prolog,complex-event-recognition" />
        </attvalues>
      </node>
      <node id="arrow-kt/arrow" label="arrow-kt/arrow">
        <attvalues>
          <attvalue for="0" value="functional-programming,kotlin-library,monads,functional-data-structure,kotlin,fp-types,for-comprehension,optics,polymorphism,typed-lambda-calculus,typeclasses,arrow,delimited-continuations,continuations,kotlin-libraries,coroutines,kotlin-dsl,hacktoberfest" />
        </attvalues>
      </node>
      <node id="winglang/wing" label="winglang/wing">
        <attvalues>
          <attvalue for="0" value="programming-language,cloud,compiler,sdk,serverless,language,winglang,rust,typescript" />
        </attvalues>
      </node>
      <node id="rntz/minikanren-datalog" label="rntz/minikanren-datalog">
        <attvalues>
          <attvalue for="0" value="datalog,minikanren,logic-programming,kanren" />
        </attvalues>
      </node>
      <node id="otpcl/otpcl" label="otpcl/otpcl">
        <attvalues>
          <attvalue for="0" value="erlang,tcl,language,programming-language,rebar3,parser,interpreter,scripting-language,configuration-language" />
        </attvalues>
      </node>
      <node id="wasiahmad/PLBART" label="wasiahmad/PLBART">
        <attvalues>
          <attvalue for="0" value="code-intelligence,language-model,nlp,programming-language,representation-learning" />
        </attvalues>
      </node>
      <node id="skoowoo/cofx" label="skoowoo/cofx">
        <attvalues>
          <attvalue for="0" value="cloudnative,faas,functions,golang,workflow,automation,programming-language,flowl,dsl,desktop-first,anything-as-code" />
        </attvalues>
      </node>
      <node id="KovtunV/NoStringEvaluating" label="KovtunV/NoStringEvaluating">
        <attvalues>
          <attvalue for="0" value="math,mathematics,mathematical-expression,expressions,parser,formula,evaluator,calculator,solve,calculation,logic,condition,custom,function,math-parser,expression-evaluator,formula-parser,object-pooling,nostring,rpn" />
        </attvalues>
      </node>
      <node id="sdiehl/picologic" label="sdiehl/picologic">
        <attvalues>
          <attvalue for="0" value="picosat,sat-solver,haskell,haskell-library,logic" />
        </attvalues>
      </node>
      <node id="coalton-lang/coalton" label="coalton-lang/coalton">
        <attvalues>
          <attvalue for="0" value="functional-programming,common-lisp,type-safety" />
        </attvalues>
      </node>
      <node id="VitorLuizC/normalize-text" label="VitorLuizC/normalize-text">
        <attvalues>
          <attvalue for="0" value="normalize-text,normalize,string-manipulation,string,javascript,functional-programming,compose" />
        </attvalues>
      </node>
      <node id="silt-lang/silt" label="silt-lang/silt">
        <attvalues>
          <attvalue for="0" value="compiler,dependent-types,swift,functional-programming" />
        </attvalues>
      </node>
      <node id="flylai/cyx2" label="flylai/cyx2">
        <attvalues>
          <attvalue for="0" value="compiler,ssa,virtual-machine,interpreter,static-single-assignment,programming-language,toy-compiler" />
        </attvalues>
      </node>
      <node id="Pankaj-Str/Complete-Python-Mastery" label="Pankaj-Str/Complete-Python-Mastery">
        <attvalues>
          <attvalue for="0" value="pandas,programming-language,python,pythontutorial" />
        </attvalues>
      </node>
      <node id="keithasaurus/koda" label="keithasaurus/koda">
        <attvalues>
          <attvalue for="0" value="functional-programming,python,tagged-unions,type-safety" />
        </attvalues>
      </node>
      <node id="objeck/objeck-lang" label="objeck/objeck-lang">
        <attvalues>
          <attvalue for="0" value="arm64,assembly-language,cplusplus,debuggers,jit-compilation,memory-management,runtime-system,documentation,examples,linux,macos,windows,x64,c,programming-language,rpi4,compiler,lsp-server" />
        </attvalues>
      </node>
      <node id="bauripalash/mewmew" label="bauripalash/mewmew">
        <attvalues>
          <attvalue for="0" value="programming-language,antlr4,cats,esoteric-language,open-source,cpp,interpreter,hacktoberfest,hacktoberfest2021" />
        </attvalues>
      </node>
      <node id="JasonShin/fp-core.rs" label="JasonShin/fp-core.rs">
        <attvalues>
          <attvalue for="0" value="functional-programming,rust,monad,functor,applicative,category-theory,lambda-calculus,monoid,hkt,homomorphism,morphism,comonad" />
        </attvalues>
      </node>
      <node id="finkel-lang/finkel" label="finkel-lang/finkel">
        <attvalues>
          <attvalue for="0" value="haskell,lisp,language,compiler,repl,programming-language" />
        </attvalues>
      </node>
      <node id="legesher/legesher-translations" label="legesher/legesher-translations">
        <attvalues>
          <attvalue for="0" value="legesher,language,programming-language,developer,translation,multilingual,hacktoberfest" />
        </attvalues>
      </node>
      <node id="borzunov/dontasq" label="borzunov/dontasq">
        <attvalues>
          <attvalue for="0" value="python,linq,functional-programming,asq" />
        </attvalues>
      </node>
      <node id="joshuaguerin/Answer-Set-Programming-Algorithms" label="joshuaguerin/Answer-Set-Programming-Algorithms">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,clingo,algorithms,education,logic-programming,logic,np-complete,np-hard,computer-science,language,algorithm,constraint-satisfaction-problem,constraint-programming" />
        </attvalues>
      </node>
      <node id="Valian/python-business-logic" label="Valian/python-business-logic">
        <attvalues>
          <attvalue for="0" value="logic,business-logic,business-rules,python" />
        </attvalues>
      </node>
      <node id="MilesCranmer/BorrowChecker.jl" label="MilesCranmer/BorrowChecker.jl">
        <attvalues>
          <attvalue for="0" value="borrow-checker,code-quality,concurrency,development,development-tools,julia,memory-management,memory-safety,multithreading,ownership,programming-language,rust,safety,testing,thread-safety" />
        </attvalues>
      </node>
      <node id="maheshabburi4/IITH-BTECH-Courses" label="maheshabburi4/IITH-BTECH-Courses">
        <attvalues>
          <attvalue for="0" value="cool-compiler,prolog,eiffel,os,computer-architecture,discrete-mathematics,principles-of-programming-languages,data-structures-and-algorithms" />
        </attvalues>
      </node>
      <node id="joes-esolangs/cassette" label="joes-esolangs/cassette">
        <attvalues>
          <attvalue for="0" value="concatenative,functional-programming,homoiconic,interpreter,metaprogramming,programming-language,programming-languages,prolog,tape-based,untyped" />
        </attvalues>
      </node>
      <node id="LittleLollipop/LBox" label="LittleLollipop/LBox">
        <attvalues>
          <attvalue for="0" value="android,utils,logic" />
        </attvalues>
      </node>
      <node id="Adzz/ecto_morph" label="Adzz/ecto_morph">
        <attvalues>
          <attvalue for="0" value="ecto,elixir,phoenix,elixir-phoenix,functional-programming" />
        </attvalues>
      </node>
      <node id="ptarau/TypesAndProofs" label="ptarau/TypesAndProofs">
        <attvalues>
          <attvalue for="0" value="intuitionistic-logic,theorem-prover,type-inference,curry-howard-isomorphism,prolog,lambda-terms,random-binary-tree,random-set-partition,tautology-checking,de-bruijn-notation,beta-reduction,all-binary-trees-generator,all-set-partitions-gnerator,remy-s-algorithm,knuth-s-algorithm-r,boltzmann-sampler,normal-forms" />
        </attvalues>
      </node>
      <node id="brucou/kingly" label="brucou/kingly">
        <attvalues>
          <attvalue for="0" value="automata,automaton,transducer,state-machine,functional-programming,javascript,library,hierarchical-machine,state-transducer,portable,microfrontends,architecture" />
        </attvalues>
      </node>
      <node id="dadhi/ImTools" label="dadhi/ImTools">
        <attvalues>
          <attvalue for="0" value="immutable,persistent,data-structures,functional-programming,performance,value-semantics,reference-semantics,compare-and-swap,lock-free,map,dictionary,memory-efficient,avl-tree,sum-types,2-3-tree,effects,hashmap,hashtable,open-addressing,robinhood-hashmap" />
        </attvalues>
      </node>
      <node id="Dentrax/Monkey" label="Dentrax/Monkey">
        <attvalues>
          <attvalue for="0" value="monkey,interpreter,programming-language,rust,repl" />
        </attvalues>
      </node>
      <node id="Slackadays/Chata" label="Slackadays/Chata">
        <attvalues>
          <attvalue for="0" value="api,audio,digital-signal-processing,dsp,embedded,library,linux,macos,open-source,programming-language,sound,windows,chata,cli,community,console,cross-platform,dsl,high-performance,terminal" />
        </attvalues>
      </node>
      <node id="chriskrycho/newrustacean.com" label="chriskrycho/newrustacean.com">
        <attvalues>
          <attvalue for="0" value="rust-lang,podcast,cargo,programming,programming-language" />
        </attvalues>
      </node>
      <node id="typelevel/cats-tagless" label="typelevel/cats-tagless">
        <attvalues>
          <attvalue for="0" value="tagless,scala,functional-programming" />
        </attvalues>
      </node>
      <node id="supermacro/elm-antd" label="supermacro/elm-antd">
        <attvalues>
          <attvalue for="0" value="elm,ui-kit,components,antd,ant-design,design-systems,hacktoberfest,fp,functional-programming" />
        </attvalues>
      </node>
      <node id="inoxlang/inox" label="inoxlang/inox">
        <attvalues>
          <attvalue for="0" value="programming-language,secure-by-default,secure-coding,golang,minimalism,webdev,webdevelopment,htmx" />
        </attvalues>
      </node>
      <node id="DirectToSwift/DirectToSwiftUI" label="DirectToSwift/DirectToSwiftUI">
        <attvalues>
          <attvalue for="0" value="declarative-programming,declarative-ui,database-gui,swift,swiftui,swiftui-rules" />
        </attvalues>
      </node>
      <node id="tvler/compose-state" label="tvler/compose-state">
        <attvalues>
          <attvalue for="0" value="react,functional-programming,javascript" />
        </attvalues>
      </node>
      <node id="lucasdcampos/libra" label="lucasdcampos/libra">
        <attvalues>
          <attvalue for="0" value="interpreter,parser,portuguese,programming-language,scripting-language" />
        </attvalues>
      </node>
      <node id="dcutting/Song" label="dcutting/Song">
        <attvalues>
          <attvalue for="0" value="language,programming-language,programming-languages,programming,swift" />
        </attvalues>
      </node>
      <node id="typedb/typeql" label="typedb/typeql">
        <attvalues>
          <attvalue for="0" value="reasoning,query-language,query,inference,logic,database,typedb,typeql,type-system,strongly-typed,polymorphic,polymorphism" />
        </attvalues>
      </node>
      <node id="gcanti/fp-ts-fluture" label="gcanti/fp-ts-fluture">
        <attvalues>
          <attvalue for="0" value="fp-ts,fluture,functional-programming,typescript" />
        </attvalues>
      </node>
      <node id="lhmouse/asteria" label="lhmouse/asteria">
        <attvalues>
          <attvalue for="0" value="programming-language,scripting-language" />
        </attvalues>
      </node>
      <node id="dashersw/vuelve" label="dashersw/vuelve">
        <attvalues>
          <attvalue for="0" value="vue,composition-api,vue3,vue3-composition-api,declarative-programming" />
        </attvalues>
      </node>
      <node id="rottytooth/Folders" label="rottytooth/Folders">
        <attvalues>
          <attvalue for="0" value="esolang,esoteric-language,esoteric-programming-language,programming-language" />
        </attvalues>
      </node>
      <node id="brundonsmith/bagel" label="brundonsmith/bagel">
        <attvalues>
          <attvalue for="0" value="javascript,typescript,reactivity,strongly-typed,compiler,static-types,functional-programming,deno" />
        </attvalues>
      </node>
      <node id="vanillaes/absurdum" label="vanillaes/absurdum">
        <attvalues>
          <attvalue for="0" value="esm,esmodules,operators,lodash,functional-programming" />
        </attvalues>
      </node>
      <node id="bharathgs/NALU" label="bharathgs/NALU">
        <attvalues>
          <attvalue for="0" value="pytorch,nalu,alu,deep-learning,neural-network,deepmind,arithmetic,logic,accumulator,machine-learning" />
        </attvalues>
      </node>
      <node id="wouterbeek/prolog_library_collection" label="wouterbeek/prolog_library_collection">
        <attvalues>
          <attvalue for="0" value="prolog,swi-prolog" />
        </attvalues>
      </node>
      <node id="tarsana/functional" label="tarsana/functional">
        <attvalues>
          <attvalue for="0" value="php,library,functional-programming" />
        </attvalues>
      </node>
      <node id="grrr-amsterdam/garp-functional" label="grrr-amsterdam/garp-functional">
        <attvalues>
          <attvalue for="0" value="functional-programming,php,data-last,currying,hacktoberfest" />
        </attvalues>
      </node>
      <node id="kaveh808/Kaveh-Common-Lisp-Lessons" label="kaveh808/Kaveh-Common-Lisp-Lessons">
        <attvalues>
          <attvalue for="0" value="common-lisp,macos,opengl,programming,programming-language" />
        </attvalues>
      </node>
      <node id="rolling-scopes/karate" label="rolling-scopes/karate">
        <attvalues>
          <attvalue for="0" value="serverless,scraper,typescript,webpack2,functional-programming,functions-as-a-service" />
        </attvalues>
      </node>
      <node id="YannickDot/Taskorama" label="YannickDot/Taskorama">
        <attvalues>
          <attvalue for="0" value="javascript,async,promise,tasks,functional-programming" />
        </attvalues>
      </node>
      <node id="krasserm/akka-stream-eventsourcing" label="krasserm/akka-stream-eventsourcing">
        <attvalues>
          <attvalue for="0" value="event-sourcing,functional-programming,reactive-programming,apache-kafka,akka-persistence,akka-streams,scala" />
        </attvalues>
      </node>
      <node id="Spydr06/BCause" label="Spydr06/BCause">
        <attvalues>
          <attvalue for="0" value="b,c,compiler,proglangs-discord,bcause,assembly,bell-labs,c99,language,programming-language,single-pass,libb,hacktoberfest,hacktoberfest2023" />
        </attvalues>
      </node>
      <node id="YakshaLang/Yaksha" label="YakshaLang/Yaksha">
        <attvalues>
          <attvalue for="0" value="programming-language,compiler,lisp-dialect,offside-rule,c99,compile-time,compile-to-c,transpiler,offside" />
        </attvalues>
      </node>
      <node id="lambda-study-group/desafios" label="lambda-study-group/desafios">
        <attvalues>
          <attvalue for="0" value="functional-programming,challenges,desafios,programacao-funcional,hacktoberfest,hacktoberfest2020" />
        </attvalues>
      </node>
      <node id="fetlang/fetlang" label="fetlang/fetlang">
        <attvalues>
          <attvalue for="0" value="transpiler,compiler,language,esoteric-language,esolang,programming-language,fetlang" />
        </attvalues>
      </node>
      <node id="WimJongeneel/ts-pattern-matching" label="WimJongeneel/ts-pattern-matching">
        <attvalues>
          <attvalue for="0" value="typescript,pattern-matching,typesafety,functional-programming" />
        </attvalues>
      </node>
      <node id="funfix/funfix.js" label="funfix/funfix.js">
        <attvalues>
          <attvalue for="0" value="fp,functional-programming,javascript,typescript,flowtype,es2015,type-classes,async,concurrency,futures" />
        </attvalues>
      </node>
      <node id="apple/pkl" label="apple/pkl">
        <attvalues>
          <attvalue for="0" value="pkl,java,kotlin,config,configuration,data,functional,json,language,object-oriented,programming-language,properties,propertylist,validation,xml,yaml" />
        </attvalues>
      </node>
      <node id="beefytech/Beef" label="beefytech/Beef">
        <attvalues>
          <attvalue for="0" value="programming-language,compiler,ide,beef-language" />
        </attvalues>
      </node>
      <node id="DolphyWind/Electra-Lang" label="DolphyWind/Electra-Lang">
        <attvalues>
          <attvalue for="0" value="cpp,esolang,esolangs,language,cplusplus,esoteric,esoteric-language,esoteric-programming-language,programming-language,interpreted,interpreted-language,interpreted-programming-language,interpreter,esoteric-interpreter,stack-based,stack-based-language,cplusplus-20,cpp20" />
        </attvalues>
      </node>
      <node id="energydrink9/functional-data-grid" label="energydrink9/functional-data-grid">
        <attvalues>
          <attvalue for="0" value="grid,functional-programming,data-grid,react-grid,virtual-scroll,locked-columns,spreadsheet,grouping,reactjs,variable-rows-height,rich-data-grids,resizable,excel,datagrid" />
        </attvalues>
      </node>
      <node id="arosien/cats-cheatsheets" label="arosien/cats-cheatsheets">
        <attvalues>
          <attvalue for="0" value="scala,cats,cheatsheets,functional-programming" />
        </attvalues>
      </node>
      <node id="deeplang-org/deeplang" label="deeplang-org/deeplang">
        <attvalues>
          <attvalue for="0" value="iot,vm,memory-safe,programming-language,lite" />
        </attvalues>
      </node>
      <node id="expede/teaching-fp" label="expede/teaching-fp">
        <attvalues>
          <attvalue for="0" value="teaching,material,haskell,scala,elm,clojure,racket,functional-programming,theory,ocaml,elixir,scheme,clojurescript,idris,rust,python" />
        </attvalues>
      </node>
      <node id="prove-rs/z3.rs" label="prove-rs/z3.rs">
        <attvalues>
          <attvalue for="0" value="logic-programming,smt,smt-solver,rust-bindings,rust,ffi-bindings" />
        </attvalues>
      </node>
      <node id="svaksha/Julia.jl" label="svaksha/Julia.jl">
        <attvalues>
          <attvalue for="0" value="julia,awesome-list,programming-language,scientific-computing,computer-science,programming,julia-language,julialang,agplv3,collection,resources,awesome-lists" />
        </attvalues>
      </node>
      <node id="kyouko-taiga/LogicKit" label="kyouko-taiga/LogicKit">
        <attvalues>
          <attvalue for="0" value="logic-programming,domain-specific-language" />
        </attvalues>
      </node>
      <node id="offline-ai/cli" label="offline-ai/cli">
        <attvalues>
          <attvalue for="0" value="interpreter,llamacpp,llm,offline-ai,programming-language,prompt-engineering" />
        </attvalues>
      </node>
      <node id="onflow/cadence" label="onflow/cadence">
        <attvalues>
          <attvalue for="0" value="cadence,language,programming-language,smart-contracts,onflow" />
        </attvalues>
      </node>
      <node id="takapi327/ldbc" label="takapi327/ldbc">
        <attvalues>
          <attvalue for="0" value="cats-effect-3,database,functional-programming,jdbc,mysql,scala,scala3,dotty,sbt,sbt-plugin,cats-effect,typelevel" />
        </attvalues>
      </node>
      <node id="switz/driver" label="switz/driver">
        <attvalues>
          <attvalue for="0" value="logic,state-machine,ui,javascript,state,typescript" />
        </attvalues>
      </node>
      <node id="ecyrbe/typeskell" label="ecyrbe/typeskell">
        <attvalues>
          <attvalue for="0" value="functional-programming,typeclass,typescript" />
        </attvalues>
      </node>
      <node id="agda/agda" label="agda/agda">
        <attvalues>
          <attvalue for="0" value="dependent-types,programming-language,proof-assistant,agda,type-theory" />
        </attvalues>
      </node>
      <node id="KSXGitHub/pipe-trait" label="KSXGitHub/pipe-trait">
        <attvalues>
          <attvalue for="0" value="rust,crate,pipe,trait,functional-programming,pipeline,no-std" />
        </attvalues>
      </node>
      <node id="ichiban/prolog" label="ichiban/prolog">
        <attvalues>
          <attvalue for="0" value="interpreter,prolog,golang,go,logic-programming" />
        </attvalues>
      </node>
      <node id="tonivade/purefun" label="tonivade/purefun">
        <attvalues>
          <attvalue for="0" value="java,functional-programming,experimental,monads,higher-kinded-types,typeclasses,tuples,io-monad,monad,tagless-final,free-monad,memoization,monad-transformers,stream,immutable-collections,mtl,effects" />
        </attvalues>
      </node>
      <node id="Champii/Rock" label="Champii/Rock">
        <attvalues>
          <attvalue for="0" value="rust,llvm,llvm-ir,ast,langage,functional-programming,low-level" />
        </attvalues>
      </node>
      <node id="pannous/english-script" label="pannous/english-script">
        <attvalues>
          <attvalue for="0" value="programming-language,ruby,compiler" />
        </attvalues>
      </node>
      <node id="wasiahmad/AVATAR" label="wasiahmad/AVATAR">
        <attvalues>
          <attvalue for="0" value="programming-language,programming-language-translator,representation-learning,translation-model" />
        </attvalues>
      </node>
      <node id="amr205/Introduccion-a-la-IA---Libro" label="amr205/Introduccion-a-la-IA---Libro">
        <attvalues>
          <attvalue for="0" value="programacion-logica,algoritmos-geneticos,machine-learning,supervised-learning,unsupervised-learning,aprendizaje-automatico,aprendizaje-supervisado,aprendizaje-no-supervisado,genetic-algorithm,genetic-programming,logic-programming,book,artifficial-intelligence,artificial-intelligence,inteligencia-artificial" />
        </attvalues>
      </node>
      <node id="Rafisto/uni" label="Rafisto/uni">
        <attvalues>
          <attvalue for="0" value="algebra,calculus,computer,lecture,logic,notes,science,algorythmic,university,informatyka-algorytmiczna,algorytmiczna,ina,informatyka,pwr" />
        </attvalues>
      </node>
      <node id="PlasmaLang/plasma" label="PlasmaLang/plasma">
        <attvalues>
          <attvalue for="0" value="plasma,bytecode,plasma-compiler,parallel-computing,concurrency,functional-programming,programming-language,programming-languages,parallelism,parallel-programming,parallelisation" />
        </attvalues>
      </node>
      <node id="guregu/php" label="guregu/php">
        <attvalues>
          <attvalue for="0" value="cgi,prolog,www" />
        </attvalues>
      </node>
      <node id="BooleanCat/go-functional" label="BooleanCat/go-functional">
        <attvalues>
          <attvalue for="0" value="go,golang,functional-programming" />
        </attvalues>
      </node>
      <node id="ValKmjolnir/Nasal-Interpreter" label="ValKmjolnir/Nasal-Interpreter">
        <attvalues>
          <attvalue for="0" value="interpreter,flightgear,script-language,compiler-principles,bytecode-interpreter,programming-language,windows,macos,linux,language,nasal,scripting-language" />
        </attvalues>
      </node>
      <node id="i-am-tom/holmes" label="i-am-tom/holmes">
        <attvalues>
          <attvalue for="0" value="propagation,constraint-solver,backtracking,logic-programming" />
        </attvalues>
      </node>
      <node id="golf-lang/golf" label="golf-lang/golf">
        <attvalues>
          <attvalue for="0" value="apache,c-programming-language,distributed-computing,encryption-decryption,haproxy,high-performance,in-memory-database,json,mariadb,memory-safety,mysql,nginx,postgresql,programming-language,regex,sqlite,web-development,web-services,application-server,development-tools" />
        </attvalues>
      </node>
      <node id="gcanti/parser-ts" label="gcanti/parser-ts">
        <attvalues>
          <attvalue for="0" value="typescript,parser-combinators,functional-programming,fp-ts" />
        </attvalues>
      </node>
      <node id="jamiebuilds/ghost-lang" label="jamiebuilds/ghost-lang">
        <attvalues>
          <attvalue for="0" value="programming-language,spec" />
        </attvalues>
      </node>
      <node id="ntk148v/lets-go" label="ntk148v/lets-go">
        <attvalues>
          <attvalue for="0" value="golang,language,learning,go,learn-to-code,learning-go,learning-golang,programming-language,tutorial,hacktoberfest" />
        </attvalues>
      </node>
      <node id="teles/array-mixer" label="teles/array-mixer">
        <attvalues>
          <attvalue for="0" value="array,javascript,es6,functional,functional-programming,es2015,node,babel,hacktoberfest" />
        </attvalues>
      </node>
      <node id="RubenVerg/TinyAPL" label="RubenVerg/TinyAPL">
        <attvalues>
          <attvalue for="0" value="apl,language,programming-language" />
        </attvalues>
      </node>
      <node id="carlosantq/LPL" label="carlosantq/LPL">
        <attvalues>
          <attvalue for="0" value="lpl,proof,logic,fitch-proofs,fitch" />
        </attvalues>
      </node>
      <node id="poteto/boba-js" label="poteto/boba-js">
        <attvalues>
          <attvalue for="0" value="interpreter,compiler,typescript,javascript,programming-language,monkey-language" />
        </attvalues>
      </node>
      <node id="baweaver/qo" label="baweaver/qo">
        <attvalues>
          <attvalue for="0" value="ruby,pattern-matching,functional-programming,rspec-examples" />
        </attvalues>
      </node>
      <node id="fp4php/functional" label="fp4php/functional">
        <attvalues>
          <attvalue for="0" value="functional,functional-programming,psalm,psalm-plugin,functions,function,monads,collections,collections-framework,static-analysis,php,immutable,streams" />
        </attvalues>
      </node>
      <node id="dimkr/szl" label="dimkr/szl">
        <attvalues>
          <attvalue for="0" value="scripting,script,embeddable,embedded,dynamic-typing,linux,c,c99,engine,programming-language,lightweight,interactive,shell,iot,mit,library,embedded-scripting-language,embedded-systems,interpreter,interpreted-programming-language" />
        </attvalues>
      </node>
      <node id="cicada-lang/inet-cute" label="cicada-lang/inet-cute">
        <attvalues>
          <attvalue for="0" value="interaction-nets,inet,stack-based,postfix-notation,interpreter,graph-processing,graph,undirected-graph,computation-model,monoid,programming-language,programming-language-concepts,programming-language-design,programming-language-development,language-design,ascii-art" />
        </attvalues>
      </node>
      <node id="JuliaSymbolics/Metatheory.jl" label="JuliaSymbolics/Metatheory.jl">
        <attvalues>
          <attvalue for="0" value="julia,symbolic,symbolic-computation,programming-language,optimization,compiler-optimization,compiler-construction,term-rewriting,equality-saturation,egraphs,symbolic-manipulation" />
        </attvalues>
      </node>
      <node id="boltlang/Bolt" label="boltlang/Bolt">
        <attvalues>
          <attvalue for="0" value="programming-language,web-development,productivity,security,scalability,experimental" />
        </attvalues>
      </node>
      <node id="JohnDTill/Forscape" label="JohnDTill/Forscape">
        <attvalues>
          <attvalue for="0" value="programming-language,scientific-computing,open-source,matrices,maths,typesetting,inline-equations,equation-editor,code-editor,unicode" />
        </attvalues>
      </node>
      <node id="hakank/hakank" label="hakank/hakank">
        <attvalues>
          <attvalue for="0" value="constraint-programming,constraint-satisfaction,minizinc,picat,z3py,gecode,essence,jacop,ampl,comet,jgap,frink,prolog,answer-set-programming,choco,eclipse-clp,numberjack,poplog,sicstus-prolog,setl" />
        </attvalues>
      </node>
      <node id="DeMaCS-UNICAL/Angry-HEX" label="DeMaCS-UNICAL/Angry-HEX">
        <attvalues>
          <attvalue for="0" value="artificial-intelligence,logic-programming,planning,angry-birds" />
        </attvalues>
      </node>
      <node id="wesovilabs/koazee" label="wesovilabs/koazee">
        <attvalues>
          <attvalue for="0" value="functional-programming,lazy-evaluation,golang-library,golang,immutable,arrays,slices" />
        </attvalues>
      </node>
      <node id="pointfreeco/swift-validated" label="pointfreeco/swift-validated">
        <attvalues>
          <attvalue for="0" value="functional-programming,error-handling,result-type,validation" />
        </attvalues>
      </node>
      <node id="stereobooster/write-you-a-programming-language" label="stereobooster/write-you-a-programming-language">
        <attvalues>
          <attvalue for="0" value="education,programming-language" />
        </attvalues>
      </node>
      <node id="Hihaheho/Desk" label="Hihaheho/Desk">
        <attvalues>
          <attvalue for="0" value="high-code,algebraic-effects,functional-programming,statically-typed,visual-programming" />
        </attvalues>
      </node>
      <node id="LingDong-/psvg" label="LingDong-/psvg">
        <attvalues>
          <attvalue for="0" value="svg,programming-language,vector-graphics,image-format" />
        </attvalues>
      </node>
      <node id="mactsouk/mGo4th" label="mactsouk/mGo4th">
        <attvalues>
          <attvalue for="0" value="book,go,goroutine,programming-language" />
        </attvalues>
      </node>
      <node id="philzook58/snakelog" label="philzook58/snakelog">
        <attvalues>
          <attvalue for="0" value="datalog,logic" />
        </attvalues>
      </node>
      <node id="aregtech/areg-sdk" label="aregtech/areg-sdk">
        <attvalues>
          <attvalue for="0" value="iot,realtime,embedded,rpc,ipc,multiprocessing,concurrency,distributed,framework,sdk,parallel-computing,cross-platform,async,multithreading,functional-programming,logging,library,client-server,event-driven,pubsub" />
        </attvalues>
      </node>
      <node id="rShetty/functional-go" label="rShetty/functional-go">
        <attvalues>
          <attvalue for="0" value="functional-programming,golang" />
        </attvalues>
      </node>
      <node id="GustikS/NeuraLogic" label="GustikS/NeuraLogic">
        <attvalues>
          <attvalue for="0" value="relational-learning,deep-learning,logic-programming,machine-learning,differentiable-programming" />
        </attvalues>
      </node>
      <node id="SAKET-SK/Programming-Aptitude-Interview-Prep" label="SAKET-SK/Programming-Aptitude-Interview-Prep">
        <attvalues>
          <attvalue for="0" value="aptitude,programming-languages,logic-programming,aptitude-solver,aptitudetraining,aptitude-tests,exercises,technical-test,interview-technical" />
        </attvalues>
      </node>
      <node id="akyoto/q" label="akyoto/q">
        <attvalues>
          <attvalue for="0" value="programming-language,compiler,high-performance" />
        </attvalues>
      </node>
      <node id="luminalang/lumina" label="luminalang/lumina">
        <attvalues>
          <attvalue for="0" value="compiler,compilers,cranelift,functional,functional-programming,logos,programming-language,programming-languages" />
        </attvalues>
      </node>
      <node id="chameco/bramble" label="chameco/bramble">
        <attvalues>
          <attvalue for="0" value="dependent-types,lisp,type-theory,programming-language,unsound" />
        </attvalues>
      </node>
      <node id="SystemFw/upperbound" label="SystemFw/upperbound">
        <attvalues>
          <attvalue for="0" value="functional-programming,scala,rate-limiter" />
        </attvalues>
      </node>
      <node id="stanipintjuk/nixos-router" label="stanipintjuk/nixos-router">
        <attvalues>
          <attvalue for="0" value="nixos,nixos-expression,functional-programming,ethernet,dhcpd" />
        </attvalues>
      </node>
      <node id="quadrupleslap/union-js" label="quadrupleslap/union-js">
        <attvalues>
          <attvalue for="0" value="javascript,union,discriminated-unions,functional-programming,vanilla-js" />
        </attvalues>
      </node>
      <node id="the-neutron-foundation/neutron-language" label="the-neutron-foundation/neutron-language">
        <attvalues>
          <attvalue for="0" value="programming-language,programming-languages,efficient,python3,python,sly,neutron" />
        </attvalues>
      </node>
      <node id="hufeng/iflux" label="hufeng/iflux">
        <attvalues>
          <attvalue for="0" value="react,immer,reactive,functional-programming" />
        </attvalues>
      </node>
      <node id="qorelanguage/qore" label="qorelanguage/qore">
        <attvalues>
          <attvalue for="0" value="qore,qore-language,programming-language" />
        </attvalues>
      </node>
      <node id="supercollider/supercollider" label="supercollider/supercollider">
        <attvalues>
          <attvalue for="0" value="supercollider,sclang,electronic-music,scsynth,synthesis,audio,music,sound,algorithmic-composition,computer-music,livecoding,programming-language,c-plus-plus,sonification" />
        </attvalues>
      </node>
      <node id="arximboldi/lager" label="arximboldi/lager">
        <attvalues>
          <attvalue for="0" value="library,redux,interactive,functional-programming,value-semantics,cpp17" />
        </attvalues>
      </node>
      <node id="orc-lang/orc" label="orc-lang/orc">
        <attvalues>
          <attvalue for="0" value="orc,concurrency,programming-language,orchestration" />
        </attvalues>
      </node>
      <node id="BafS/Java8-CheatSheet" label="BafS/Java8-CheatSheet">
        <attvalues>
          <attvalue for="0" value="cheatsheet,java,functional-programming,java8,stream,lambda-expressions,memo,resume" />
        </attvalues>
      </node>
      <node id="atymic/laravel-collection-playground" label="atymic/laravel-collection-playground">
        <attvalues>
          <attvalue for="0" value="laravel,laravel-framework,collections,functional-programming,laravel-collections,playground" />
        </attvalues>
      </node>
      <node id="nguyenphuminh/HelloWorld" label="nguyenphuminh/HelloWorld">
        <attvalues>
          <attvalue for="0" value="hello-world,helloworld-programs,programming-language,language" />
        </attvalues>
      </node>
      <node id="keyboardDrummer/Miksilo" label="keyboardDrummer/Miksilo">
        <attvalues>
          <attvalue for="0" value="meta-language,language-workbench,scala,parsing,programming-language" />
        </attvalues>
      </node>
      <node id="ditto-lang/ditto" label="ditto-lang/ditto">
        <attvalues>
          <attvalue for="0" value="ditto,ditto-lang,compiler,functional-programming" />
        </attvalues>
      </node>
      <node id="TomasMikula/libretto" label="TomasMikula/libretto">
        <attvalues>
          <attvalue for="0" value="concurrency,stream-processing,functional-programming,declarative-programming,expressiveness,type-safety,resource-safety,session-types,linear-types" />
        </attvalues>
      </node>
      <node id="M4GNV5/PointerScript" label="M4GNV5/PointerScript">
        <attvalues>
          <attvalue for="0" value="scripting-language,native-libraries,pointer,native,scripting,ffi,programming-language,language" />
        </attvalues>
      </node>
      <node id="logic-building/functional-go" label="logic-building/functional-go">
        <attvalues>
          <attvalue for="0" value="functional-go,functional-programming,functional,map,filter,map-filter-in-go,go-functional,sorting,sort,sort-struct,pmap,merge,zip,exists,union,intersection,golang,difference,set,superset" />
        </attvalues>
      </node>
      <node id="Anton-Latukha/Fundamental-Haskell" label="Anton-Latukha/Fundamental-Haskell">
        <attvalues>
          <attvalue for="0" value="haskell,org,org-mode,category-theory,functional-programming,emacs,philosophy-of-science,learning-resource,dictionary,dictionary-learning,spaced-repetition" />
        </attvalues>
      </node>
      <node id="digital-fabric/affect" label="digital-fabric/affect">
        <attvalues>
          <attvalue for="0" value="ruby,algebraic-effects,functional-programming" />
        </attvalues>
      </node>
      <node id="bcherny/tsoption" label="bcherny/tsoption">
        <attvalues>
          <attvalue for="0" value="typescript,scala,monad,functional-programming" />
        </attvalues>
      </node>
      <node id="jarcane/heresy" label="jarcane/heresy">
        <attvalues>
          <attvalue for="0" value="heresy,racket,lisp,basic,functional-programming,programming-language" />
        </attvalues>
      </node>
      <node id="IgorBuchelnikov/ObservableComputations" label="IgorBuchelnikov/ObservableComputations">
        <attvalues>
          <attvalue for="0" value="observablecollection,linq,functional-programming,declarative,declarative-programming,observable,continuous,bind,inotifypropertychanged,inotifycollectionchanged,functional,reactive-programming,dynamic-data,rx,rx-observable,reactive-collections,reactive-extensions,functional-reactive-programming,dataflow,hacktoberfest" />
        </attvalues>
      </node>
      <node id="aadhithya/rajiniPP" label="aadhithya/rajiniPP">
        <attvalues>
          <attvalue for="0" value="esoteric-interpreter,esoteric-language,programming-language,python,rply,interpreter" />
        </attvalues>
      </node>
      <node id="moirai-lang/moirai-kt" label="moirai-lang/moirai-kt">
        <attvalues>
          <attvalue for="0" value="interpreter,language,multi-tenant,programming-language,scripting-language,serverless" />
        </attvalues>
      </node>
      <node id="timandy/linq" label="timandy/linq">
        <attvalues>
          <attvalue for="0" value="java,android,linq,linq4j,lambda,stream-api,functional-programming,tuple" />
        </attvalues>
      </node>
      <node id="AppliedLogicSystems/ALSProlog" label="AppliedLogicSystems/ALSProlog">
        <attvalues>
          <attvalue for="0" value="prolog,compiler,language,programming-language,logic-programming,iso-prolog-standard,prolog-implementation,prolog-programming-language" />
        </attvalues>
      </node>
      <node id="abdulzakrt/WumpusWorld-CSharp" label="abdulzakrt/WumpusWorld-CSharp">
        <attvalues>
          <attvalue for="0" value="wumpusworld,csharp,prolog,gui,swi-prolog,wpf-application,wpf,game,agent,knowledgebase,wumpus,world,knowledgebase-agents,swipl" />
        </attvalues>
      </node>
      <node id="novalagung/gubrak" label="novalagung/gubrak">
        <attvalues>
          <attvalue for="0" value="golang,functional-programming,utility-library,go" />
        </attvalues>
      </node>
      <node id="ohkimur/the-c-programming-language-2nd-edition-solutions" label="ohkimur/the-c-programming-language-2nd-edition-solutions">
        <attvalues>
          <attvalue for="0" value="c,c-language,c-programming,programming,solutions,solution,programming-exercises,programming-challenges,language,programming-language" />
        </attvalues>
      </node>
      <node id="Proektsoftbg/Calcpad" label="Proektsoftbg/Calcpad">
        <attvalues>
          <attvalue for="0" value="mathematics,engineering,structural,numerical-methods,units-of-measurement,calculations,programming-language,interpreter" />
        </attvalues>
      </node>
      <node id="alibaba/fish-redux" label="alibaba/fish-redux">
        <attvalues>
          <attvalue for="0" value="flutter,redux,component,functional-programming,adapter,framework,reactive,aop" />
        </attvalues>
      </node>
      <node id="project-eutopia/keisan" label="project-eutopia/keisan">
        <attvalues>
          <attvalue for="0" value="ruby,calculator,equation,formula,symbolic-math,programming-language,math" />
        </attvalues>
      </node>
      <node id="m-ender/retina" label="m-ender/retina">
        <attvalues>
          <attvalue for="0" value="regex,programming-language,c-sharp,interpreter" />
        </attvalues>
      </node>
      <node id="koto-lang/koto" label="koto-lang/koto">
        <attvalues>
          <attvalue for="0" value="programming-language,scripting-language,rust,koto,language,compiler" />
        </attvalues>
      </node>
      <node id="santinic/pampy.js" label="santinic/pampy.js">
        <attvalues>
          <attvalue for="0" value="pattern-matching,javascript,lisp-interpreter,nodejs,functional,functional-programming" />
        </attvalues>
      </node>
      <node id="kfjahnke/zimt" label="kfjahnke/zimt">
        <attvalues>
          <attvalue for="0" value="multidimensional-arrays,simd,multithreading,multi-backend,arithmetic,nd-arrays,highway,vc,std-simd,functional-programming,tiled-storage" />
        </attvalues>
      </node>
      <node id="kevin-lee/j8plus" label="kevin-lee/j8plus">
        <attvalues>
          <attvalue for="0" value="java,java8,functional-programming,lambda-expressions,recursion,stream" />
        </attvalues>
      </node>
      <node id="UberPyro/prowl" label="UberPyro/prowl">
        <attvalues>
          <attvalue for="0" value="based-stack-based-language,forth-like,functional-programming,logic-programming,ocaml,proglangs-discord,programming-language,regex,stack-based-language" />
        </attvalues>
      </node>
      <node id="yangtau/hedgehog" label="yangtau/hedgehog">
        <attvalues>
          <attvalue for="0" value="programming-language,interpreter,compiler,toy-programming-language" />
        </attvalues>
      </node>
      <node id="fahad19/proppy" label="fahad19/proppy">
        <attvalues>
          <attvalue for="0" value="react,vue,preact,javascript,functional-programming,props,redux,rxjs" />
        </attvalues>
      </node>
      <node id="alilleybrinker/langs-in-rust" label="alilleybrinker/langs-in-rust">
        <attvalues>
          <attvalue for="0" value="rust,programming-language" />
        </attvalues>
      </node>
      <node id="hexalang/Hexa" label="hexalang/Hexa">
        <attvalues>
          <attvalue for="0" value="compiler,hexa,language,programming-language,magic,hexalang,javascript,transpiler,cross-platform,osdev,gamedev" />
        </attvalues>
      </node>
      <node id="dagronf/DSFToolbar" label="dagronf/DSFToolbar">
        <attvalues>
          <attvalue for="0" value="nstoolbar,declarative-programming,macos,maccatalyst,dsl,toolbar" />
        </attvalues>
      </node>
      <node id="funkia/hareactive" label="funkia/hareactive">
        <attvalues>
          <attvalue for="0" value="frp,frp-library,functional-reactive-programming,functional-programming,typescript,javascript" />
        </attvalues>
      </node>
      <node id="haldai/LogicalVision2" label="haldai/LogicalVision2">
        <attvalues>
          <attvalue for="0" value="swi-prolog,opencv,computer-vision" />
        </attvalues>
      </node>
      <node id="kujirahand/nadesiko3" label="kujirahand/nadesiko3">
        <attvalues>
          <attvalue for="0" value="programming-language,japanese,altjs,nodejs,japanese-programming-language" />
        </attvalues>
      </node>
      <node id="fsharp/fslang-design" label="fsharp/fslang-design">
        <attvalues>
          <attvalue for="0" value="fsharp,rfc,language-design,programming-language" />
        </attvalues>
      </node>
      <node id="nelson-lang/nelson" label="nelson-lang/nelson">
        <attvalues>
          <attvalue for="0" value="matrix-functions,interpreter,programming-language,scientific-computing,nelson,data-science,mathematical-functions,data-structures,octave,matlab,cpp17" />
        </attvalues>
      </node>
      <node id="ocadotechnology/pass4s" label="ocadotechnology/pass4s">
        <attvalues>
          <attvalue for="0" value="functional-programming,jms,scala,sns,sqs" />
        </attvalues>
      </node>
      <node id="dry-python/lambdas" label="dry-python/lambdas">
        <attvalues>
          <attvalue for="0" value="dry-python,functional-programming,fp,mypy,mypy-stubs,mypy-plugins,composition,lambdas,lambda,python,python3" />
        </attvalues>
      </node>
      <node id="MarcinMoskala/KotlinDiscreteMathToolkit" label="MarcinMoskala/KotlinDiscreteMathToolkit">
        <attvalues>
          <attvalue for="0" value="kotlin,discrete-math-functionalities,functional-programming,fun,extension-methods" />
        </attvalues>
      </node>
      <node id="suddi/suddi.github.io" label="suddi/suddi.github.io">
        <attvalues>
          <attvalue for="0" value="webpack,example,resume,functional-programming,reactjs,react,resume-site-builder,resume-builder,resume-template,webpack2,webpack-dev-server" />
        </attvalues>
      </node>
      <node id="debasishg/hask" label="debasishg/hask">
        <attvalues>
          <attvalue for="0" value="haskell,domain-driven-design,domain-specific-language,functional-programming" />
        </attvalues>
      </node>
      <node id="JoeStrout/miniscript" label="JoeStrout/miniscript">
        <attvalues>
          <attvalue for="0" value="miniscript,programming-language,programming-languages" />
        </attvalues>
      </node>
      <node id="octallium/functional-programming-with-elixir" label="octallium/functional-programming-with-elixir">
        <attvalues>
          <attvalue for="0" value="beginner,elixir,elixir-lang,elixir-phoenix,elixir-programming-language,functional-programming,tutorial" />
        </attvalues>
      </node>
      <node id="KyleM73/AHHH" label="KyleM73/AHHH">
        <attvalues>
          <attvalue for="0" value="programming-language,esoteric-interpreter,esoteric-programming-language,meme" />
        </attvalues>
      </node>
      <node id="StepfenShawn/Cantonese" label="StepfenShawn/Cantonese">
        <attvalues>
          <attvalue for="0" value="programming-language,cantonese-language,python3,cantonese,compiler" />
        </attvalues>
      </node>
      <node id="sarthak268/Embedded_Logic_and_Design" label="sarthak268/Embedded_Logic_and_Design">
        <attvalues>
          <attvalue for="0" value="verilog,verilog-hdl,verilog-programs,verilog-project,embedded-systems,embedded-logic,logic-circuit,logic-programming,embedded-c,c,vhdl,vhdl-code,zedboard,xilinx,xilinx-vivado,xilinx-fpga,xilinx-sdk,arm,vivado,pmod" />
        </attvalues>
      </node>
      <node id="selfrefactor/rambdax" label="selfrefactor/rambdax">
        <attvalues>
          <attvalue for="0" value="ramda,rambda,utils,lodash,functional-programming" />
        </attvalues>
      </node>
      <node id="i-am-tom/haskell-exercises" label="i-am-tom/haskell-exercises">
        <attvalues>
          <attvalue for="0" value="haskell,ghc,haskell-learning,teaching-materials,functional-programming" />
        </attvalues>
      </node>
      <node id="CakeML/cakeml" label="CakeML/cakeml">
        <attvalues>
          <attvalue for="0" value="programming-language,formal-verification,formal-semantics,compiler,theorem-proving,hol,sml" />
        </attvalues>
      </node>
      <node id="wahani/modules" label="wahani/modules">
        <attvalues>
          <attvalue for="0" value="cran,r,functional-programming,module" />
        </attvalues>
      </node>
      <node id="after12am/eisenscript" label="after12am/eisenscript">
        <attvalues>
          <attvalue for="0" value="javascript,programming-language,eisenscript,demo" />
        </attvalues>
      </node>
      <node id="magmide/magmide" label="magmide/magmide">
        <attvalues>
          <attvalue for="0" value="formal-verification,formal-methods,type-safety,systems-programming,dependent-types,verification,logic,coq" />
        </attvalues>
      </node>
      <node id="slavaGanzin/ramda.py" label="slavaGanzin/ramda.py">
        <attvalues>
          <attvalue for="0" value="ramda,fp,functional-programming,python,curry,toolz,itertools" />
        </attvalues>
      </node>
      <node id="kula-lang/kula" label="kula-lang/kula">
        <attvalues>
          <attvalue for="0" value="language,functional-programming,chinese,kula,scripting-language,lambda,lightweight,programming-language" />
        </attvalues>
      </node>
      <node id="fnogatz/xsd2json" label="fnogatz/xsd2json">
        <attvalues>
          <attvalue for="0" value="swi-prolog,prolog,xml-schema,json-schema" />
        </attvalues>
      </node>
      <node id="SHI-Yu-Zhe/awesome-agi-cocosci" label="SHI-Yu-Zhe/awesome-agi-cocosci">
        <attvalues>
          <attvalue for="0" value="awesome,artificial-general-intelligence,computational-cognitive-science,abduction,bayesian,pragmatics,theory-of-mind,language-of-thought,logic-programming,developmental-psychology,planning,intuitive-physics,explainable-ai,hybrid-system,analogy,commonsense,scientific-discovery,general-pattern-theory,awesome-list,mind-simulation" />
        </attvalues>
      </node>
      <node id="ArthaTi/Pepe" label="ArthaTi/Pepe">
        <attvalues>
          <attvalue for="0" value="esoteric,programming-language,pepe,meme" />
        </attvalues>
      </node>
      <node id="mykolav/coollang-2020-fs" label="mykolav/coollang-2020-fs">
        <attvalues>
          <attvalue for="0" value="compiler,programming-language,fsharp,toy-compiler,language,compiler-design,parsing,programming-languages,statically-typed,x86-64,hobby-compiler" />
        </attvalues>
      </node>
      <node id="lonelyenvoy/python-memoization" label="lonelyenvoy/python-memoization">
        <attvalues>
          <attvalue for="0" value="memoization,memoization-library,memoize-decorator,cache,cache-python,functional-programming,decorator,python-memoization,ttl,ttl-cache,lru,lru-cache,lfu,lfu-cache,fifo,fifo-cache,extensible,extendable,algorithm,ttl-support" />
        </attvalues>
      </node>
      <node id="logictensornetworks/logictensornetworks" label="logictensornetworks/logictensornetworks">
        <attvalues>
          <attvalue for="0" value="machinelearning,tensorflow,logic-programming,fuzzy-logic" />
        </attvalues>
      </node>
      <node id="burgravian/heartfuck" label="burgravian/heartfuck">
        <attvalues>
          <attvalue for="0" value="programming-language,esoteric-language,brainfuck,hacktoberfest" />
        </attvalues>
      </node>
      <node id="Banno/kafka4s" label="Banno/kafka4s">
        <attvalues>
          <attvalue for="0" value="kafka,functional-programming,fs2,cats,cats-effect,scala,stream-processing,fp" />
        </attvalues>
      </node>
      <node id="benzap/eden" label="benzap/eden">
        <attvalues>
          <attvalue for="0" value="lua,eden,clojure,clojurescript,programming-language" />
        </attvalues>
      </node>
      <node id="katsaii/catspeak-lang" label="katsaii/catspeak-lang">
        <attvalues>
          <attvalue for="0" value="domain-specific-language,gamemaker-studio-2,dynamically-typed,compiler,lexer-parser,games,language,programming-language" />
        </attvalues>
      </node>
      <node id="i5ting/imove" label="i5ting/imove">
        <attvalues>
          <attvalue for="0" value="flowchart,xstate,x6,javascript,logic,lowcode" />
        </attvalues>
      </node>
      <node id="thuwzy/Neural-Symbolic-and-Probabilistic-Logic-Papers" label="thuwzy/Neural-Symbolic-and-Probabilistic-Logic-Papers">
        <attvalues>
          <attvalue for="0" value="deep-logic,neurosymbolic,neural-symbolic,neural-logic,probabilistic-logic,probability,neural-module-networks,logic-programming" />
        </attvalues>
      </node>
      <node id="owo-lang/OwO" label="owo-lang/OwO">
        <attvalues>
          <attvalue for="0" value="programming-language,compiler,proof-assistant,dependent-types" />
        </attvalues>
      </node>
      <node id="thefrontside/ember-let" label="thefrontside/ember-let">
        <attvalues>
          <attvalue for="0" value="ember,javascript,emberjs,ember-addon,functional-programming,binding,handlebars" />
        </attvalues>
      </node>
      <node id="konclude/Konclude" label="konclude/Konclude">
        <attvalues>
          <attvalue for="0" value="reasoning,owl,logic,owl-reasoner,semantic-web,ontology,sparql" />
        </attvalues>
      </node>
      <node id="Pivot-Studio/pivot-lang" label="Pivot-Studio/pivot-lang">
        <attvalues>
          <attvalue for="0" value="immix,programming-language,pivot-lang,compiler,language" />
        </attvalues>
      </node>
      <node id="aspizu/goboscript" label="aspizu/goboscript">
        <attvalues>
          <attvalue for="0" value="scratch,compiler,programming-language,rust" />
        </attvalues>
      </node>
      <node id="IntersectMBO/plutus" label="IntersectMBO/plutus">
        <attvalues>
          <attvalue for="0" value="blockchain,smart-contracts,programming-language" />
        </attvalues>
      </node>
      <node id="AmrDeveloper/Turtle" label="AmrDeveloper/Turtle">
        <attvalues>
          <attvalue for="0" value="drawing-app,lilo,logo,programming-language,turtle-graphics" />
        </attvalues>
      </node>
      <node id="MuizZer07/The-Complete-Python-3-Course-Beginner-to-Advanced-Udemy-Course" label="MuizZer07/The-Complete-Python-3-Course-Beginner-to-Advanced-Udemy-Course">
        <attvalues>
          <attvalue for="0" value="python3,udemy,projects,exercises,programming-language,basics,advanced" />
        </attvalues>
      </node>
      <node id="mrdimosthenis/emel" label="mrdimosthenis/emel">
        <attvalues>
          <attvalue for="0" value="elixir,machine-learning,functional-programming,erlang,gleam" />
        </attvalues>
      </node>
      <node id="Storyyeller/cubiml-demo" label="Storyyeller/cubiml-demo">
        <attvalues>
          <attvalue for="0" value="programming-language,type-inference" />
        </attvalues>
      </node>
      <node id="jwiegley/putting-lenses-to-work" label="jwiegley/putting-lenses-to-work">
        <attvalues>
          <attvalue for="0" value="haskell,lens,lenses,functional-programming,practical" />
        </attvalues>
      </node>
      <node id="xgrommx/practical-functional-programming" label="xgrommx/practical-functional-programming">
        <attvalues>
          <attvalue for="0" value="functional-programming,javascript,js,fp,beginner-friendly,fun,paradigm" />
        </attvalues>
      </node>
      <node id="mvneerven/xo" label="mvneerven/xo">
        <attvalues>
          <attvalue for="0" value="es6,cssgrid,no-dependencies,pwa-apps,spa,javascript-library,form-schema,vanilla-javascript,inline-validation,json-schema,json-form,declarative-programming" />
        </attvalues>
      </node>
      <node id="fcolavecchia/fp-course-public" label="fcolavecchia/fp-course-public">
        <attvalues>
          <attvalue for="0" value="beginner-friendly,dotnet,fsharp,functional-programming,jupyter-notebook" />
        </attvalues>
      </node>
      <node id="AILab-FOI/pyxf" label="AILab-FOI/pyxf">
        <attvalues>
          <attvalue for="0" value="python,prolog,xsb,swipl,eclipse,flora-2,ergo-lite,interface" />
        </attvalues>
      </node>
      <node id="lettier/lambda-lantern" label="lettier/lambda-lantern">
        <attvalues>
          <attvalue for="0" value="panda3d,purescript,cpp,cpp11,game,game-development,bindings,functional-programming,haskell,purescript-native,game-engine,gamedev,video-game,functional-reactive-programming,indiegame,functional-language,functional,native,native-apps,desktop-app" />
        </attvalues>
      </node>
      <node id="kmyk-jikka/Jikka" label="kmyk-jikka/Jikka">
        <attvalues>
          <attvalue for="0" value="competitive-programming,programming-contests,programming-language,transpiler,compiler,optimization,algorithms" />
        </attvalues>
      </node>
      <node id="k-mrm/maxc" label="k-mrm/maxc">
        <attvalues>
          <attvalue for="0" value="maxc,c,programming-language,virtual-machine,interpreter" />
        </attvalues>
      </node>
      <node id="davidallysson/logica-de-programacao" label="davidallysson/logica-de-programacao">
        <attvalues>
          <attvalue for="0" value="programming,logic-programming,programming-language,exercises,uri,competitive-programming,uva,spoj" />
        </attvalues>
      </node>
      <node id="velipso/sink" label="velipso/sink">
        <attvalues>
          <attvalue for="0" value="programming-language,scripting-language,language,embeddable" />
        </attvalues>
      </node>
      <node id="tobia80/zio-entity" label="tobia80/zio-entity">
        <attvalues>
          <attvalue for="0" value="event-sourcing,zio,clustering,functional-programming" />
        </attvalues>
      </node>
      <node id="mlajtos/L1" label="mlajtos/L1">
        <attvalues>
          <attvalue for="0" value="neural-network,deep-learning,linear-algebra,functional-programming,visualization,differentiable-programming" />
        </attvalues>
      </node>
      <node id="j-mie6/design-patterns-for-parser-combinators" label="j-mie6/design-patterns-for-parser-combinators">
        <attvalues>
          <attvalue for="0" value="parser-combinators,design-patterns,functional-programming" />
        </attvalues>
      </node>
      <node id="leopiney/tensor-safe" label="leopiney/tensor-safe">
        <attvalues>
          <attvalue for="0" value="deep-learning,ai,haskell-library,dependent-types,functional-programming,haskell,machine-learning" />
        </attvalues>
      </node>
      <node id="dart-lang/sdk" label="dart-lang/sdk">
        <attvalues>
          <attvalue for="0" value="dart,language,sdk,programming-language" />
        </attvalues>
      </node>
      <node id="Ricardicus/ric-script" label="Ricardicus/ric-script">
        <attvalues>
          <attvalue for="0" value="c-programming,programming-language,programming-language-design,programming-language-development,programming-languages,yacc,yacc-lex" />
        </attvalues>
      </node>
      <node id="alox-ai/alox" label="alox-ai/alox">
        <attvalues>
          <attvalue for="0" value="compiler,programming-language,actor-model,gpu" />
        </attvalues>
      </node>
      <node id="estradajke/k9-simples" label="estradajke/k9-simples">
        <attvalues>
          <attvalue for="0" value="shakti,k9,programming-language" />
        </attvalues>
      </node>
      <node id="rvarago/kitten" label="rvarago/kitten">
        <attvalues>
          <attvalue for="0" value="cpp,modern-cpp,functional-programming,declarative-programming,category-theory,functors,monads,monadic-interface" />
        </attvalues>
      </node>
      <node id="tiancaiamao/cora" label="tiancaiamao/cora">
        <attvalues>
          <attvalue for="0" value="lisp,programming-language,cora,lambda" />
        </attvalues>
      </node>
      <node id="cskonopka/arduivis" label="cskonopka/arduivis">
        <attvalues>
          <attvalue for="0" value="maxmsp,puredata,javascript,automation,microcontroller,programming-language,max,maxpat,serial" />
        </attvalues>
      </node>
      <node id="almossawi/badarguments" label="almossawi/badarguments">
        <attvalues>
          <attvalue for="0" value="illustrated-book,critical-thinking,logical-fallacies,logic,arguments,debate,free-books" />
        </attvalues>
      </node>
      <node id="Adzz/data_schema" label="Adzz/data_schema">
        <attvalues>
          <attvalue for="0" value="elixir,data,types,functional-programming,validation,data-parsing" />
        </attvalues>
      </node>
      <node id="checkedc/checkedc" label="checkedc/checkedc">
        <attvalues>
          <attvalue for="0" value="c,programming-language,system-programming,clang,llvm,memory-safety,type-safety" />
        </attvalues>
      </node>
      <node id="bytexenon/The-Tiny-Lua-Compiler" label="bytexenon/The-Tiny-Lua-Compiler">
        <attvalues>
          <attvalue for="0" value="compiler,lexer,lua,lua-compiler,tiny-compiler,tokenizer,lua-the-tiny-compiler,lua-tiny-compiler,lua51,parser,small-compiler,code-compiler,code-generation,compiler-design,interpreter,programming-language,virtual-machine,interpreters,parsers,tlc" />
        </attvalues>
      </node>
      <node id="EricGrange/DWScript" label="EricGrange/DWScript">
        <attvalues>
          <attvalue for="0" value="delphi,pascal,script,pascal-language,pascal-compiler,windows,components,webserver,javascript,programming-language,json,sqlite3,transpiler,avx2,jit" />
        </attvalues>
      </node>
      <node id="orodley/naive" label="orodley/naive">
        <attvalues>
          <attvalue for="0" value="compiler,assembler,linker,libc,programming-language" />
        </attvalues>
      </node>
      <node id="aztek/scala-workflow" label="aztek/scala-workflow">
        <attvalues>
          <attvalue for="0" value="scala,scala-macros,monads,functors,applicative-functors,functional-programming" />
        </attvalues>
      </node>
      <node id="lichess-org/lila-fishnet" label="lichess-org/lila-fishnet">
        <attvalues>
          <attvalue for="0" value="cats,cats-effect,chess,fishnet,functional-programming,lichess,typelevel" />
        </attvalues>
      </node>
      <node id="jan0sch/pfhais" label="jan0sch/pfhais">
        <attvalues>
          <attvalue for="0" value="scala,functional-programming,cats-effect,http4s,fs2,monocle,tapir,optics,scala3" />
        </attvalues>
      </node>
      <node id="ayazhafiz/plts" label="ayazhafiz/plts">
        <attvalues>
          <attvalue for="0" value="programming-language-theory,type-systems,programming-language,compiler,interpreter" />
        </attvalues>
      </node>
      <node id="devexperts/remote-data-ts" label="devexperts/remote-data-ts">
        <attvalues>
          <attvalue for="0" value="typescript,algebraic-data-types,functional-programming,fp-ts" />
        </attvalues>
      </node>
      <node id="CjE369/All-in-One" label="CjE369/All-in-One">
        <attvalues>
          <attvalue for="0" value="tools,termux-tool,termux,hacking-tools,information-gathering,programming,programming-language,all-in-one" />
        </attvalues>
      </node>
      <node id="sand-lang/sand" label="sand-lang/sand">
        <attvalues>
          <attvalue for="0" value="programming-language,language,sand,compiler,low-level" />
        </attvalues>
      </node>
      <node id="quack/quack" label="quack/quack">
        <attvalues>
          <attvalue for="0" value="programming-language,language,programming-paradigms,repl,functional-programming" />
        </attvalues>
      </node>
      <node id="rowscript/rowscript" label="rowscript/rowscript">
        <attvalues>
          <attvalue for="0" value="javascript,programming-language,row-polymorphism,dependent-types,typescript" />
        </attvalues>
      </node>
      <node id="AmokHuginnsson/huginn" label="AmokHuginnsson/huginn">
        <attvalues>
          <attvalue for="0" value="huginn,scripting-language,runner,yaal,jupyter-kernels,repl,programming-language,huginn-programming-language,embeddable,interpreter,shell,system-shell,interactive-shell" />
        </attvalues>
      </node>
      <node id="react-declarative/react-pocketbase-crm" label="react-declarative/react-pocketbase-crm">
        <attvalues>
          <attvalue for="0" value="declarative-programming,dependency-injection,functional-programming,mobx,mui,pocketbase,pocketbase-realtime,react,react-declarative,react-hooks,realtime,rxjs,solid,websocket,kanban,kanban-application,kanban-board" />
        </attvalues>
      </node>
      <node id="android10/Rust-Cross-Platform-Development" label="android10/Rust-Cross-Platform-Development">
        <attvalues>
          <attvalue for="0" value="rust-lang,rust,rust-library,development,programming-language,programming,open-source,opensource,cargo,tools" />
        </attvalues>
      </node>
      <node id="MSeifert04/iteration_utilities" label="MSeifert04/iteration_utilities">
        <attvalues>
          <attvalue for="0" value="python,functional-programming,iterator,generator,performance" />
        </attvalues>
      </node>
      <node id="RustemB/profetch" label="RustemB/profetch">
        <attvalues>
          <attvalue for="0" value="prolog,fetch,neofetch" />
        </attvalues>
      </node>
      <node id="taufique71/node-c-parser" label="taufique71/node-c-parser">
        <attvalues>
          <attvalue for="0" value="parsing,grammar,programming-language,c" />
        </attvalues>
      </node>
      <node id="phenax/enum-fp" label="phenax/enum-fp">
        <attvalues>
          <attvalue for="0" value="js,functional-programming,enum,sum-types,algebraic-data-types" />
        </attvalues>
      </node>
      <node id="paulstansifer/unseemly" label="paulstansifer/unseemly">
        <attvalues>
          <attvalue for="0" value="macros,types,compiler,programming-language" />
        </attvalues>
      </node>
      <node id="mchav/froid" label="mchav/froid">
        <attvalues>
          <attvalue for="0" value="frege-programming-language,android-development,functional-programming,frege,android" />
        </attvalues>
      </node>
      <node id="artagnon/rhine" label="artagnon/rhine">
        <attvalues>
          <attvalue for="0" value="programming-language,llvm,compiler-design,c-plus-plus,compiler" />
        </attvalues>
      </node>
      <node id="Logoi-Linguistics/Logoi-Linguistics" label="Logoi-Linguistics/Logoi-Linguistics">
        <attvalues>
          <attvalue for="0" value="agi,lisp,prolog" />
        </attvalues>
      </node>
      <node id="ring-lang/ring" label="ring-lang/ring">
        <attvalues>
          <attvalue for="0" value="programming-language,compiler,virtual-machine,ring,language,ring-programming-language,imperative-programming-language,procedural,object-oriented,functional-programming,declarative-language,natural-language,desktop,web,mobile,games,windows,linux,macos,webassembly" />
        </attvalues>
      </node>
      <node id="MaxXSoft/YuLang" label="MaxXSoft/YuLang">
        <attvalues>
          <attvalue for="0" value="programming-language,compiler,llvm,yulang" />
        </attvalues>
      </node>
      <node id="elipmoc/Ruscall" label="elipmoc/Ruscall">
        <attvalues>
          <attvalue for="0" value="programming-language,llvm,rust,compiler,hindley-milner" />
        </attvalues>
      </node>
      <node id="kefirjs/kefir" label="kefirjs/kefir">
        <attvalues>
          <attvalue for="0" value="frp,reactive,stream,functional-programming,observable,javascript,kefir" />
        </attvalues>
      </node>
      <node id="neal-o-r/aireamhan" label="neal-o-r/aireamhan">
        <attvalues>
          <attvalue for="0" value="irish,language,programming-language" />
        </attvalues>
      </node>
      <node id="Mazin-O3/Veecom" label="Mazin-O3/Veecom">
        <attvalues>
          <attvalue for="0" value="risc-v,computer,cpu,logic,logisim,computer-architecture,computer-engineering,logisim-computer" />
        </attvalues>
      </node>
      <node id="bwalter/qt-promise" label="bwalter/qt-promise">
        <attvalues>
          <attvalue for="0" value="qt,c-plus-plus,promises,functional-programming" />
        </attvalues>
      </node>
      <node id="MartinSnyder/seamless-immutable-cursor" label="MartinSnyder/seamless-immutable-cursor">
        <attvalues>
          <attvalue for="0" value="es6-javascript,functional-programming,cursors,seamless-immutable,reactjs" />
        </attvalues>
      </node>
      <node id="alantech/alan" label="alantech/alan">
        <attvalues>
          <attvalue for="0" value="alan,programming-language,parallelization" />
        </attvalues>
      </node>
      <node id="TSG405/C-for-Everyone-Programming-Fundamentals" label="TSG405/C-for-Everyone-Programming-Fundamentals">
        <attvalues>
          <attvalue for="0" value="c-programming-language,logic-programming,data-structures,fundamentals-of-programming,solutions,university-of-california-santa-cruz,basic-programming,coursera" />
        </attvalues>
      </node>
      <node id="tc39/proposal-function-pipe-flow" label="tc39/proposal-function-pipe-flow">
        <attvalues>
          <attvalue for="0" value="javascript,tc39,proposal,functional-programming" />
        </attvalues>
      </node>
      <node id="ksco/BuildYourOwnLispCn" label="ksco/BuildYourOwnLispCn">
        <attvalues>
          <attvalue for="0" value="programming-language,lisp-interpreter,c" />
        </attvalues>
      </node>
      <node id="BartJongejan/Bracmat" label="BartJongejan/Bracmat">
        <attvalues>
          <attvalue for="0" value="pattern-matching,semi-structured-data,programming-language,xml,json,symbolic-computation,language-technology,natural-language-processing,high-level-language,rosettacode,html,computer-algebra,differentiation,structured-data,unstructured-data,tree-structure,bignumbers,epoc,gcc,expression-evaluator" />
        </attvalues>
      </node>
      <node id="VitorLuizC/bitty" label="VitorLuizC/bitty">
        <attvalues>
          <attvalue for="0" value="typescript,functional-programming,algebraic-data-types,types,animation,maybe" />
        </attvalues>
      </node>
      <node id="wolfgangj/okami" label="wolfgangj/okami">
        <attvalues>
          <attvalue for="0" value="linux,assembly,openbsd,concatenative,concatenative-language,concatenative-programming-language,language,programming-language" />
        </attvalues>
      </node>
      <node id="skius/progge.rs" label="skius/progge.rs">
        <attvalues>
          <attvalue for="0" value="program-analysis,abstract-interpretation,programming-language,type-checking,static-analysis,compiler,llvm" />
        </attvalues>
      </node>
      <node id="pd-l2ork/pd-l2ork" label="pd-l2ork/pd-l2ork">
        <attvalues>
          <attvalue for="0" value="computer,music,programming-language,dataflow,visual,l2ork,linux-laptop-orchestra,virginia-tech" />
        </attvalues>
      </node>
      <node id="ekzhang/crepe" label="ekzhang/crepe">
        <attvalues>
          <attvalue for="0" value="datalog,rust,souffle,static-analysis,logic-programming,translator" />
        </attvalues>
      </node>
      <node id="vein-lang/vein" label="vein-lang/vein">
        <attvalues>
          <attvalue for="0" value="language,virtual-machine,research-project,arm64,quantum-computing,arm32,machine-learning,cli,programming-language,jit,interpreter" />
        </attvalues>
      </node>
      <node id="OpShin/opshin" label="OpShin/opshin">
        <attvalues>
          <attvalue for="0" value="cardano,validator,compiler,language,programming-language,python,smart-contracts,hacktoberfest" />
        </attvalues>
      </node>
      <node id="roboticslab-cseiitg/ProjectTartarus" label="roboticslab-cseiitg/ProjectTartarus">
        <attvalues>
          <attvalue for="0" value="prolog,swi-prolog,mobile-agents,autonomous-agents,multi-agent-systems,raspberry-pi,emulation,agent,internet-of-things,cyber-physical-systems,tartarus,agent-oriented-programming" />
        </attvalues>
      </node>
      <node id="iamgio/quarkdown" label="iamgio/quarkdown">
        <attvalues>
          <attvalue for="0" value="markdown,markdown-parser,markup-language,paper,programming-language,scripting-language,slides,presentations" />
        </attvalues>
      </node>
      <node id="ryanmaugv1/Tachyon" label="ryanmaugv1/Tachyon">
        <attvalues>
          <attvalue for="0" value="compiler,programming-language,toy-language,language" />
        </attvalues>
      </node>
      <node id="moonad/Moonad" label="moonad/Moonad">
        <attvalues>
          <attvalue for="0" value="moonad,formality,formal-verification,formal-languages,academic-journals,functional-programming,game-development" />
        </attvalues>
      </node>
      <node id="lazpeng/birlscript" label="lazpeng/birlscript">
        <attvalues>
          <attvalue for="0" value="esoteric-language,interpretador,programming-language,interpreter" />
        </attvalues>
      </node>
      <node id="w0lya/fsharp-3d-and-gamedev" label="w0lya/fsharp-3d-and-gamedev">
        <attvalues>
          <attvalue for="0" value="fsharp,functional-programming,3d-graphics,game-development" />
        </attvalues>
      </node>
      <node id="haifenghuang/magpie-language-design" label="haifenghuang/magpie-language-design">
        <attvalues>
          <attvalue for="0" value="interpreters,language,language-design,languages,programming-language,programming-languages,language-learning,pratt-parser" />
        </attvalues>
      </node>
      <node id="hargettp/prolog_lsp" label="hargettp/prolog_lsp">
        <attvalues>
          <attvalue for="0" value="language-server-protocol,prolog" />
        </attvalues>
      </node>
      <node id="ghostdogpr/caliban" label="ghostdogpr/caliban">
        <attvalues>
          <attvalue for="0" value="scala,graphql,graphql-server,functional-programming,graphql-client" />
        </attvalues>
      </node>
      <node id="octopus2023-inc/gensphere" label="octopus2023-inc/gensphere">
        <attvalues>
          <attvalue for="0" value="agentic-framework,agentic-workflow,agents,artificial-intelligence,declarative-programming,llms,platform,text-to-agent,agentic-ai-development,agents-from-prompts,ai-agents-framework,open-source,python" />
        </attvalues>
      </node>
      <node id="ManuelLerchner/fpv-tutorial-SS23" label="ManuelLerchner/fpv-tutorial-SS23">
        <attvalues>
          <attvalue for="0" value="functional-programming,pdf,tum,ocaml" />
        </attvalues>
      </node>
      <node id="MLton/mlton" label="MLton/mlton">
        <attvalues>
          <attvalue for="0" value="mlton,standard-ml,sml,functional-programming,compiler" />
        </attvalues>
      </node>
      <node id="Spydr06/CSpydr" label="Spydr06/CSpydr">
        <attvalues>
          <attvalue for="0" value="cspydr,compiler,static-typed,programming-language,c,standard-library,syntax,assembly,x86-64-linux-gnu,x86-64,assembly-x86-64,proglangs-discord,hacktoberfest2024" />
        </attvalues>
      </node>
      <node id="sarl/sarl" label="sarl/sarl">
        <attvalues>
          <attvalue for="0" value="agent,agent-based-modeling,programming-language,framework,ide,xtext,java,dsl,agents,agent-teamwork,agent-based,linux,macox,windows" />
        </attvalues>
      </node>
      <node id="cardillan/mindcode" label="cardillan/mindcode">
        <attvalues>
          <attvalue for="0" value="compiler,mindustry,mlog,logic,schematics" />
        </attvalues>
      </node>
      <node id="chshersh/ccl" label="chshersh/ccl">
        <attvalues>
          <attvalue for="0" value="config,functional-programming,language,ocaml,category-theory" />
        </attvalues>
      </node>
      <node id="tpetricek/tiny-systems" label="tpetricek/tiny-systems">
        <attvalues>
          <attvalue for="0" value="education,programming-language,programming-system" />
        </attvalues>
      </node>
      <node id="manthanguptaa/CricLang" label="manthanguptaa/CricLang">
        <attvalues>
          <attvalue for="0" value="ast,go,golang,parser,programming-language" />
        </attvalues>
      </node>
      <node id="daniele-rapagnani/melon" label="daniele-rapagnani/melon">
        <attvalues>
          <attvalue for="0" value="melon,scripting-language,interpreter,bytecode,programming-language,language,embeddable-scripting-language,game-development,lua,wren,hacktoberfest" />
        </attvalues>
      </node>
      <node id="rollbear/lift" label="rollbear/lift">
        <attvalues>
          <attvalue for="0" value="functional-programming,higher-order-functions,cpp17,library,constexpr" />
        </attvalues>
      </node>
      <node id="simply-logical/simply-logical" label="simply-logical/simply-logical">
        <attvalues>
          <attvalue for="0" value="jupyter-book,prolog,swish,simply-logical" />
        </attvalues>
      </node>
      <node id="lambdaclass/concrete" label="lambdaclass/concrete">
        <attvalues>
          <attvalue for="0" value="mlir,programming-language" />
        </attvalues>
      </node>
      <node id="hemansnation/Python-For-Data-Professionals" label="hemansnation/Python-For-Data-Professionals">
        <attvalues>
          <attvalue for="0" value="data-analytics,data-professionals,data-science,exploratory-data-analysis,logic-programming,machine-learning,pandas,python" />
        </attvalues>
      </node>
      <node id="purescript-hyper/hyper" label="purescript-hyper/hyper">
        <attvalues>
          <attvalue for="0" value="purescript,web,node,functional-programming,type-safe" />
        </attvalues>
      </node>
      <node id="spell-music/csound-expression" label="spell-music/csound-expression">
        <attvalues>
          <attvalue for="0" value="music-library,functional-programming,generative-art,haskell-library,haskell,haskell-art,csound,glitch-art" />
        </attvalues>
      </node>
      <node id="mahanfr/Nmet" label="mahanfr/Nmet">
        <attvalues>
          <attvalue for="0" value="asmx86,nasm,nmt,programming-language,rust,nemet" />
        </attvalues>
      </node>
      <node id="LucasMW/Headache" label="LucasMW/Headache">
        <attvalues>
          <attvalue for="0" value="compiler,brainfuck,programming-language,headache,esoteric-programming-language,c,esolang,transpiler,ast,translator,language,esoteric,esoteric-language,bf" />
        </attvalues>
      </node>
      <node id="suned/stateless" label="suned/stateless">
        <attvalues>
          <attvalue for="0" value="algebraic-effects,functional-programming,python" />
        </attvalues>
      </node>
      <node id="PacktWorkshops/The-Java-Workshop" label="PacktWorkshops/The-Java-Workshop">
        <attvalues>
          <attvalue for="0" value="java,java12,javaapi,classes,objects,object-oriented-programming,lists,collection,packages,functional-programming,java-streams,threading,testing,exceptions,gui,cli" />
        </attvalues>
      </node>
      <node id="logigator/logigator" label="logigator/logigator">
        <attvalues>
          <attvalue for="0" value="angular,logic,logic-circuit,logic-gates,simulation" />
        </attvalues>
      </node>
      <node id="darklang/dark" label="darklang/dark">
        <attvalues>
          <attvalue for="0" value="programming-language,cloud,functional-programming,editor" />
        </attvalues>
      </node>
      <node id="KuroLabs/stegcloak" label="KuroLabs/stegcloak">
        <attvalues>
          <attvalue for="0" value="cryptography,steganography,compression,functional-programming,ramdajs,hacking-tool,security,hacking,javascript,privacy,security-tools,stego,cipher,infosec,hacking-tools,data-exfiltration" />
        </attvalues>
      </node>
      <node id="niieani/bash-oo-framework" label="niieani/bash-oo-framework">
        <attvalues>
          <attvalue for="0" value="bash,shell,framework,oop,functional-programming,boilerplate,standard-library,testing,error-handling,logging" />
        </attvalues>
      </node>
      <node id="fraktalio/fmodel" label="fraktalio/fmodel">
        <attvalues>
          <attvalue for="0" value="event-sourcing,cqrs,functional-programming,kotlin,arrow-kt,reactive,streaming,eventsourcing" />
        </attvalues>
      </node>
      <node id="ikokkari/AI" label="ikokkari/AI">
        <attvalues>
          <attvalue for="0" value="ilkka-kokkarinen,prolog,artificial-intelligence,aima-book,python" />
        </attvalues>
      </node>
      <node id="paladin-t/my_basic" label="paladin-t/my_basic">
        <attvalues>
          <attvalue for="0" value="programming-language,scripting-language,interpreter,basic" />
        </attvalues>
      </node>
      <node id="syegulalp/Akilang" label="syegulalp/Akilang">
        <attvalues>
          <attvalue for="0" value="llvm,llvmlite,compiler,python,python36,python3,language,repl,programming-language,python-3,python-3-6,win32,windows,conway-life,demo,aki,language-syntax,python37,python-3-7" />
        </attvalues>
      </node>
      <node id="ciao-lang/ciao" label="ciao-lang/ciao">
        <attvalues>
          <attvalue for="0" value="prolog,compiler,programming-language,logic,interpreter,bytecode,virtual-machine,clp,constraints,prolog-implementation,prolog-interpreter,prolog-compiler,iso-prolog-standard,ciao-prolog,prolog-programming-language,logic-programming" />
        </attvalues>
      </node>
      <node id="phel-lang/phel-lang" label="phel-lang/phel-lang">
        <attvalues>
          <attvalue for="0" value="php,lisp,phel,language,programming-language,transpiler,functional-programming,clojure,phel-lang" />
        </attvalues>
      </node>
      <node id="orsinium-labs/python-lambda-calculus" label="orsinium-labs/python-lambda-calculus">
        <attvalues>
          <attvalue for="0" value="lambda,lambda-calculus,python,ycombinator,combinator,functional-programming" />
        </attvalues>
      </node>
      <node id="fraktalio/fmodel-demos" label="fraktalio/fmodel-demos">
        <attvalues>
          <attvalue for="0" value="event-sourcing,ddd,architecture,functional-programming,oop-principles,kotlin,event-modeling,arrow-kt,modeling,demo-app,reactive-programming,reactive" />
        </attvalues>
      </node>
      <node id="chromium/subspace" label="chromium/subspace">
        <attvalues>
          <attvalue for="0" value="cxx,cxx20,standard-library,functional-programming,safety" />
        </attvalues>
      </node>
      <node id="jdormit/sicp-logic" label="jdormit/sicp-logic">
        <attvalues>
          <attvalue for="0" value="clojure,logic-programming,datalog,sicp" />
        </attvalues>
      </node>
      <node id="ciren/cilib" label="ciren/cilib">
        <attvalues>
          <attvalue for="0" value="cilib,scala,functional-programming,computational-intelligence,optimization-algorithms,machine-learning" />
        </attvalues>
      </node>
      <node id="gdejohn/procrastination" label="gdejohn/procrastination">
        <attvalues>
          <attvalue for="0" value="functional-programming,lazy-evaluation,persistent-data-structure,algebraic-data-types,pattern-matching,stream-api,trampoline,y-combinator" />
        </attvalues>
      </node>
      <node id="nbuilding/N-lang" label="nbuilding/N-lang">
        <attvalues>
          <attvalue for="0" value="language,programming-language,lark,nearley" />
        </attvalues>
      </node>
      <node id="grin-compiler/grin" label="grin-compiler/grin">
        <attvalues>
          <attvalue for="0" value="optimisation,compiler,haskell,llvm,data-flow-analysis,functional-programming" />
        </attvalues>
      </node>
      <node id="osstotalsoft/jsbb" label="osstotalsoft/jsbb">
        <attvalues>
          <attvalue for="0" value="javascript,functional-programming,validation-library,rules-engine,change-tracking,react-hooks" />
        </attvalues>
      </node>
      <node id="BEPb/Python-100-days" label="BEPb/Python-100-days">
        <attvalues>
          <attvalue for="0" value="python,study,study-project,programming,programming-language,prog" />
        </attvalues>
      </node>
      <node id="SandroMaglione/getting-started-xstate-and-effect" label="SandroMaglione/getting-started-xstate-and-effect">
        <attvalues>
          <attvalue for="0" value="effect,effect-schema,functional-programming,xstate,xstate-fsm,xstate-react" />
        </attvalues>
      </node>
      <node id="JBakouny/Scallina" label="JBakouny/Scallina">
        <attvalues>
          <attvalue for="0" value="formal-methods,functional-programming,coq,scala,synthesis" />
        </attvalues>
      </node>
      <node id="abs-lang/abs" label="abs-lang/abs">
        <attvalues>
          <attvalue for="0" value="bash,scripting-language,programming-language,golang,shell,shell-scripting,scripting,scripting-languages" />
        </attvalues>
      </node>
      <node id="jungi-php/common" label="jungi-php/common">
        <attvalues>
          <attvalue for="0" value="functional-programming,result,option,equatable" />
        </attvalues>
      </node>
      <node id="Zhou-zhi-peng/cnpl" label="Zhou-zhi-peng/cnpl">
        <attvalues>
          <attvalue for="0" value="compiler,bytecode,bytecode-vm,stack-vm,lexer,grammarparser,gc,programming-language,chinese-programming-language,linux-arm,windows-x86" />
        </attvalues>
      </node>
      <node id="nickmqb/muon" label="nickmqb/muon">
        <attvalues>
          <attvalue for="0" value="programming-language" />
        </attvalues>
      </node>
      <node id="parapluu/encore" label="parapluu/encore">
        <attvalues>
          <attvalue for="0" value="encore,programming-language,compiler" />
        </attvalues>
      </node>
      <node id="mrieppel/fitchjs" label="mrieppel/fitchjs">
        <attvalues>
          <attvalue for="0" value="logic,latex,proof,fitch-proofs,javascript,proof-assistant" />
        </attvalues>
      </node>
      <node id="Calysto/calysto_scheme" label="Calysto/calysto_scheme">
        <attvalues>
          <attvalue for="0" value="jupyter,scheme,python,programming-language" />
        </attvalues>
      </node>
      <node id="alehander92/hatlog" label="alehander92/hatlog">
        <attvalues>
          <attvalue for="0" value="type-system,prolog,python,grammar" />
        </attvalues>
      </node>
      <node id="m-ender/hexagony" label="m-ender/hexagony">
        <attvalues>
          <attvalue for="0" value="interpreter,programming-language,hexagonal,two-dimensional,esolang" />
        </attvalues>
      </node>
      <node id="luafun/luafun" label="luafun/luafun">
        <attvalues>
          <attvalue for="0" value="lua,luajit,functional-programming,luarocks" />
        </attvalues>
      </node>
      <node id="vmware/differential-datalog" label="vmware/differential-datalog">
        <attvalues>
          <attvalue for="0" value="programming-language,datalog,ddlog,rust,incremental" />
        </attvalues>
      </node>
      <node id="ego/awesome-mojo" label="ego/awesome-mojo">
        <attvalues>
          <attvalue for="0" value="mojo,awesome,awesome-mojo,python,compilers,cpp,llvm,mlir,programming-language,artificial-intelligence,benchmark,machine-learning,performance,future-ai,future-technologies,hardware-acceleration,mojo-language,mojolang,mojo-lang,hacktoberfest" />
        </attvalues>
      </node>
      <node id="unisonweb/ucm-desktop" label="unisonweb/ucm-desktop">
        <attvalues>
          <attvalue for="0" value="elm-lang,ui,unison-language,desktop-app,tauri,tauri-app,frontend,functional-programming,typescript" />
        </attvalues>
      </node>
      <node id="dry-rb/dry-monads" label="dry-rb/dry-monads">
        <attvalues>
          <attvalue for="0" value="dry-rb,monad,functional-programming,ruby,gem,rubygem" />
        </attvalues>
      </node>
      <node id="KyleMcMaster/payroll-processor" label="KyleMcMaster/payroll-processor">
        <attvalues>
          <attvalue for="0" value="angular,dotnet-core,akita,functional-programming,azure-functions,clean-architecture,scss,cosmosdb,vertical-slice-architecture,bootstrap,typescript,azure,azure-storage" />
        </attvalues>
      </node>
      <node id="apache/groovy" label="apache/groovy">
        <attvalues>
          <attvalue for="0" value="groovy,jvm-languages,programming-language,metaprogramming,functional-programming,dynamic-typing,static-typing,compiler,apache" />
        </attvalues>
      </node>
      <node id="cedille/cedille" label="cedille/cedille">
        <attvalues>
          <attvalue for="0" value="dependent-types,programming-language,lambda-calculus,dependent-intersections" />
        </attvalues>
      </node>
      <node id="r4gus/nodus" label="r4gus/nodus">
        <attvalues>
          <attvalue for="0" value="bevy,bevy-engine,simulator,rust,logic-gates,logic,logic-circuit,circuit,gate" />
        </attvalues>
      </node>
      <node id="zero-one-group/fxl.js" label="zero-one-group/fxl.js">
        <attvalues>
          <attvalue for="0" value="javascript,typescript,nodejs,functional-programming,excel,spreadsheet,data-oriented,xlsx" />
        </attvalues>
      </node>
      <node id="mndrix/regex" label="mndrix/regex">
        <attvalues>
          <attvalue for="0" value="prolog,regular-expression,regex" />
        </attvalues>
      </node>
      <node id="seangwright/typescript-functional-extensions" label="seangwright/typescript-functional-extensions">
        <attvalues>
          <attvalue for="0" value="typescript,monad,functional-programming" />
        </attvalues>
      </node>
      <node id="TomerAberbach/lfi" label="TomerAberbach/lfi">
        <attvalues>
          <attvalue for="0" value="async,sync,concurrent,functional-programming,lazy,promise,iterable,iterator,javascript,npm-module,generator,npm-package" />
        </attvalues>
      </node>
      <node id="mdiep/Logician" label="mdiep/Logician">
        <attvalues>
          <attvalue for="0" value="swift,kanren,logic-programming,solver,constraints" />
        </attvalues>
      </node>
      <node id="tomgrek/zincbase" label="tomgrek/zincbase">
        <attvalues>
          <attvalue for="0" value="graph-neural-networks,prolog,knowledge-graph,knowledge-base,neural-network" />
        </attvalues>
      </node>
      <node id="s-arash/ascent" label="s-arash/ascent">
        <attvalues>
          <attvalue for="0" value="rust,datalog,logic-programming,lattice,declarative-language" />
        </attvalues>
      </node>
      <node id="raydac/jprol" label="raydac/jprol">
        <attvalues>
          <attvalue for="0" value="prolog,java,gui-editor,prolog-engine,engine,prolog-programming-language" />
        </attvalues>
      </node>
      <node id="logicmoo/logicmoo_workspace" label="logicmoo/logicmoo_workspace">
        <attvalues>
          <attvalue for="0" value="logicmoo,prolog-programming-language,planner,mud,game-server,artifical-intelligence,agi" />
        </attvalues>
      </node>
      <node id="oguzkaran/JavaApp1-Mar-2023" label="oguzkaran/JavaApp1-Mar-2023">
        <attvalues>
          <attvalue for="0" value="functional-programming,jpa,jpa-hibernate,lambda,lambda-functions,repository,repository-pattern,spring,spring-boot,springboot,hibernate,hibernate-jpa,hibernate-orm,java" />
        </attvalues>
      </node>
      <node id="tailcallhq/zio-compose" label="tailcallhq/zio-compose">
        <attvalues>
          <attvalue for="0" value="distributed-computing,scala,functional-programming" />
        </attvalues>
      </node>
      <node id="xxxnell/flex" label="xxxnell/flex">
        <attvalues>
          <attvalue for="0" value="scala,functional-programming,probability,probability-density-function,probability-distribution,statistics,data-stream" />
        </attvalues>
      </node>
      <node id="philzook58/knuckledragger" label="philzook58/knuckledragger">
        <attvalues>
          <attvalue for="0" value="logic,theorem-proving,proof-assistant,python" />
        </attvalues>
      </node>
      <node id="trainyard/pico-lambda" label="trainyard/pico-lambda">
        <attvalues>
          <attvalue for="0" value="javascript-array,functional-programming,javascript,es6" />
        </attvalues>
      </node>
      <node id="LukasZahradnik/PyNeuraLogic" label="LukasZahradnik/PyNeuraLogic">
        <attvalues>
          <attvalue for="0" value="machine-learning,deep-learning,graph-neural-networks,relational-learning,python,geometric-deep-learning,pytorch,logic-programming,differentiable-programming" />
        </attvalues>
      </node>
      <node id="crystal-lang/crystal" label="crystal-lang/crystal">
        <attvalues>
          <attvalue for="0" value="crystal,hacktoberfest,compiler,crystal-language,programming-language" />
        </attvalues>
      </node>
      <node id="Jaraxxus-Me/LogiCity" label="Jaraxxus-Me/LogiCity">
        <attvalues>
          <attvalue for="0" value="logic-programming,planning,reasoning,reinforcement-learning-environments" />
        </attvalues>
      </node>
      <node id="scalawithcats/scala-with-cats" label="scalawithcats/scala-with-cats">
        <attvalues>
          <attvalue for="0" value="book,scala,functional-programming" />
        </attvalues>
      </node>
      <node id="DevOgabek/LeetCodePythonSolutions" label="DevOgabek/LeetCodePythonSolutions">
        <attvalues>
          <attvalue for="0" value="leetcode,leetcode-python,leetcode-solutions,logic-programming,solutions" />
        </attvalues>
      </node>
      <node id="karol11/argentum" label="karol11/argentum">
        <attvalues>
          <attvalue for="0" value="programming-language" />
        </attvalues>
      </node>
      <node id="MondayMorningHaskell/haskellings" label="MondayMorningHaskell/haskellings">
        <attvalues>
          <attvalue for="0" value="haskell,functional-programming,haskell-platform,ghc,haskell-stack,nix,tutorial" />
        </attvalues>
      </node>
      <node id="dry-python/returns" label="dry-python/returns">
        <attvalues>
          <attvalue for="0" value="python,python3,functional-programming,fp,type-safety,mypy,railway-oriented-programming,dry-python,mypy-plugins,mypy-stubs,hacktoberfest" />
        </attvalues>
      </node>
      <node id="bsella/Emergence" label="bsella/Emergence">
        <attvalues>
          <attvalue for="0" value="image,pixel,qt5,graph,gui,nodes,graphics,cpp,bitmap,fractal,mandelbrot,node,computer-graphics,functional-programming,functional,function,functions,complex-numbers" />
        </attvalues>
      </node>
      <node id="simvux/imagene" label="simvux/imagene">
        <attvalues>
          <attvalue for="0" value="image-manipulation,image-processing,rust,functional-programming" />
        </attvalues>
      </node>
      <node id="projeduc/oop4coders" label="projeduc/oop4coders">
        <attvalues>
          <attvalue for="0" value="book,oop-concepts,programming-language,oop,programming,object-oriented-programming,object-oriented,programming-book,latex" />
        </attvalues>
      </node>
      <node id="goplus/igop" label="goplus/igop">
        <attvalues>
          <attvalue for="0" value="golang,interpreter,gop,goplus,stem-education,igop,programming-language,data-science,low-code,stem,scientific-computing" />
        </attvalues>
      </node>
      <node id="viatra/VIATRA-Generator" label="viatra/VIATRA-Generator">
        <attvalues>
          <attvalue for="0" value="logic,modeling,graphs,eclipse-plugin" />
        </attvalues>
      </node>
      <node id="ingolemo/python-lenses" label="ingolemo/python-lenses">
        <attvalues>
          <attvalue for="0" value="lens,lenses,functional-programming,functional-optics,python,prism,traversal,immutable-datastructures,immutable,optics" />
        </attvalues>
      </node>
      <node id="vtereshkov/xdpw" label="vtereshkov/xdpw">
        <attvalues>
          <attvalue for="0" value="pascal-language,pascal-compiler,delphi,free-pascal,xd-pascal,self-hosting,windows,win32,winapi,compiler-design,compiler-construction,compiler,parser,x86,x86-32,go,golang,programming-language,game-development,raylib" />
        </attvalues>
      </node>
      <node id="marcinzh/turbolift" label="marcinzh/turbolift">
        <attvalues>
          <attvalue for="0" value="scala,functional-programming,algebraic-effects" />
        </attvalues>
      </node>
      <node id="epellis/esta" label="epellis/esta">
        <attvalues>
          <attvalue for="0" value="rust,wasm,programming-language,lalrpop,virtual-machine,stack-based,interpreter" />
        </attvalues>
      </node>
      <node id="z-pattern-matching/z" label="z-pattern-matching/z">
        <attvalues>
          <attvalue for="0" value="pattern-matching,functional-programming,immutability" />
        </attvalues>
      </node>
      <node id="motorcycle/motorcycle.ts" label="motorcycle/motorcycle.ts">
        <attvalues>
          <attvalue for="0" value="motorcycle,typescript,functional-programming,reactive,mostjs,mostly-dom,virtual-dom,frp,functional,declarative" />
        </attvalues>
      </node>
      <node id="wernsey/Jatalog" label="wernsey/Jatalog">
        <attvalues>
          <attvalue for="0" value="datalog,datalog-engine,logic-programming,evaluation-engine" />
        </attvalues>
      </node>
      <node id="albrow/fo" label="albrow/fo">
        <attvalues>
          <attvalue for="0" value="language,generic-types,generic-functions,experimental-language,golang,functional-programming" />
        </attvalues>
      </node>
      <node id="stanipintjuk/immutable-rice" label="stanipintjuk/immutable-rice">
        <attvalues>
          <attvalue for="0" value="rice,nixos,nixos-configuration,functional-programming" />
        </attvalues>
      </node>
      <node id="hemanth/functional-programming-jargon" label="hemanth/functional-programming-jargon">
        <attvalues>
          <attvalue for="0" value="functional-programming,fp" />
        </attvalues>
      </node>
      <node id="sdleffler/whisper" label="sdleffler/whisper">
        <attvalues>
          <attvalue for="0" value="logic-programming,rust,rust-lang,dsl,unification,backtracking-search" />
        </attvalues>
      </node>
      <node id="uclnlp/ntp" label="uclnlp/ntp">
        <attvalues>
          <attvalue for="0" value="tensorflow,nips-2017,deep-learning,prolog" />
        </attvalues>
      </node>
      <node id="shard-org/sharc" label="shard-org/sharc">
        <attvalues>
          <attvalue for="0" value="language,compiler,programming-language,llvm" />
        </attvalues>
      </node>
      <node id="BlueBlazin/thislang" label="BlueBlazin/thislang">
        <attvalues>
          <attvalue for="0" value="compiler,interpreter,javascript,virtual-machine,programming-language,self-hosting,bytecode" />
        </attvalues>
      </node>
      <node id="acl2/acl2" label="acl2/acl2">
        <attvalues>
          <attvalue for="0" value="acl2,theorem-prover,theorem-proving,common-lisp,rewriting,formal-verification,formal-methods,first-order-logic,logic" />
        </attvalues>
      </node>
      <node id="dloscutoff/Esolangs" label="dloscutoff/Esolangs">
        <attvalues>
          <attvalue for="0" value="interpreter,esolang,python,javascript,two-dimensional,lisp,turing-tarpit,minimalist,queue,esoteric-language,toy-language,regex,programming-language,functional-programming,bitstring,transpiled-language,interpreted-language,stack" />
        </attvalues>
      </node>
      <node id="felix-lang/felix" label="felix-lang/felix">
        <attvalues>
          <attvalue for="0" value="programming-language,programming,c-plus-plus,ocaml,compiler,coroutines,coroutine-framework,functional-programming,performant,scripting-language,compiled,platform-independent,code-generator,static-analysis,polymorphism,type-classes,parametric-polymorphism" />
        </attvalues>
      </node>
      <node id="diagram-of-thought/diagram-of-thought" label="diagram-of-thought/diagram-of-thought">
        <attvalues>
          <attvalue for="0" value="large-language-models,llm,reasoning,logic,math" />
        </attvalues>
      </node>
      <node id="OhadRau/Quartz" label="OhadRau/Quartz">
        <attvalues>
          <attvalue for="0" value="programming-language,concurrency,functional-programming,object-oriented,oop,beam,actor-model,session-types,static-typing,type-safety" />
        </attvalues>
      </node>
      <node id="fluture-js/Fluture" label="fluture-js/Fluture">
        <attvalues>
          <attvalue for="0" value="fantasy-land,promise,future,monad,async,control-flow,algebraic-data-types,functional-programming,fluture,cancellation,sanctuary" />
        </attvalues>
      </node>
      <node id="cmditch/elm-ethereum" label="cmditch/elm-ethereum">
        <attvalues>
          <attvalue for="0" value="elm,ethereum,functional-programming,ethereumjs,web3js,elm-lang,web3" />
        </attvalues>
      </node>
      <node id="jsaund/RxUploader" label="jsaund/RxUploader">
        <attvalues>
          <attvalue for="0" value="rxjava,android,functional-programming,functional-reactive-programming,frp,upload,uploader,upload-file,upload-manager" />
        </attvalues>
      </node>
      <node id="kmtusher97/Knowledge-Based-QA-System-with-Python-and-Prolog" label="kmtusher97/Knowledge-Based-QA-System-with-Python-and-Prolog">
        <attvalues>
          <attvalue for="0" value="knowledge-based-systems,python3,prolog,prolog-application,prolog-python,chatbot,chatbots,python" />
        </attvalues>
      </node>
      <node id="chapel-lang/chapel" label="chapel-lang/chapel">
        <attvalues>
          <attvalue for="0" value="compiler,gpu,hpc,language,parallel,chapel,concurrency,distributed-computing,high-performance-computing,open-source,parallel-computing,performance,productive,programming-language,scientific-computing" />
        </attvalues>
      </node>
      <node id="creativescala/creative-scala" label="creativescala/creative-scala">
        <attvalues>
          <attvalue for="0" value="graphical,exercise,doodle,scala,learn-to-code,learning,functional-programming,book" />
        </attvalues>
      </node>
      <node id="kulics/koral" label="kulics/koral">
        <attvalues>
          <attvalue for="0" value="programming-language,cross-platform,language,grammar" />
        </attvalues>
      </node>
      <node id="DeMaCS-UNICAL/LoIDE" label="DeMaCS-UNICAL/LoIDE">
        <attvalues>
          <attvalue for="0" value="ide,logic-programming,web-based-ide,logic-formalisms,logic-based-languages,web-app,web-application,editing,editor,web-editor" />
        </attvalues>
      </node>
      <node id="raviksharma/bartosz-basics-of-haskell" label="raviksharma/bartosz-basics-of-haskell">
        <attvalues>
          <attvalue for="0" value="haskell,functional-programming,tutorial,haskell-programming,exercises,interpreter" />
        </attvalues>
      </node>
      <node id="notxcain/aecor" label="notxcain/aecor">
        <attvalues>
          <attvalue for="0" value="scala,eventsourcing,cqrs,akka,functional-programming,pure,runtime,behavior,aecor,distributed,reactive" />
        </attvalues>
      </node>
      <node id="Kalebu/pyswahili" label="Kalebu/pyswahili">
        <attvalues>
          <attvalue for="0" value="swahili,python,pyswahili,swahilipython,python-swahili,swahili-programming-language,swahili-transpiler,python-tanzania,opensource,programming-language,tanzania" />
        </attvalues>
      </node>
      <node id="gcanti/elm-ts" label="gcanti/elm-ts">
        <attvalues>
          <attvalue for="0" value="typescript,elm-lang,fp-ts,functional-programming,rxjs6,react" />
        </attvalues>
      </node>
      <node id="bnediction/bonesis" label="bnediction/bonesis">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,boolean-networks,synthesis,systems-biology" />
        </attvalues>
      </node>
      <node id="kara-lang/Kara" label="kara-lang/Kara">
        <attvalues>
          <attvalue for="0" value="dependent-types,swift,programming-language,functional-programming" />
        </attvalues>
      </node>
      <node id="kickstarter/android-oss" label="kickstarter/android-oss">
        <attvalues>
          <attvalue for="0" value="android-development,android,functional-programming,rxjava,functional-reactive-programming,frp,kotlin-android" />
        </attvalues>
      </node>
      <node id="tekknolagi/ghuloum" label="tekknolagi/ghuloum">
        <attvalues>
          <attvalue for="0" value="c,x86,x86-64,compiler,programming-language,lisp,lisp-compiler" />
        </attvalues>
      </node>
      <node id="guregu/trealla-js" label="guregu/trealla-js">
        <attvalues>
          <attvalue for="0" value="javascript,logic-programming,prolog,webassembly" />
        </attvalues>
      </node>
      <node id="roc-lang/roc" label="roc-lang/roc">
        <attvalues>
          <attvalue for="0" value="functional-language,functional-programming,language,roc-lang,hacktoberfest" />
        </attvalues>
      </node>
      <node id="aclai-lab/SoleLogics.jl" label="aclai-lab/SoleLogics.jl">
        <attvalues>
          <attvalue for="0" value="logic,modal-logic,symbolic-learning" />
        </attvalues>
      </node>
      <node id="emojicode/emojicode" label="emojicode/emojicode">
        <attvalues>
          <attvalue for="0" value="emojicode,emojis,programming-language,language,compiler" />
        </attvalues>
      </node>
      <node id="pchampio/othello-prolog" label="pchampio/othello-prolog">
        <attvalues>
          <attvalue for="0" value="prolog,logic-programming,board-game,student-project,othello-game,swipl,alpha-beta,minmax,artificial-intelligence,univ-lemans" />
        </attvalues>
      </node>
      <node id="rustq/3body-lang" label="rustq/3body-lang">
        <attvalues>
          <attvalue for="0" value="3bodyproblem,compiler,language,programming-language,rust,threebody,threebodyproblem" />
        </attvalues>
      </node>
      <node id="JasonSteving99/claro-lang" label="JasonSteving99/claro-lang">
        <attvalues>
          <attvalue for="0" value="claro,language,programming-language,claro-lang,compiler,experimental-language,dataflow-programming,fearless-concurrency,metaprogramming" />
        </attvalues>
      </node>
      <node id="ali77gh/language_performance_prime_algorithm" label="ali77gh/language_performance_prime_algorithm">
        <attvalues>
          <attvalue for="0" value="benchmark,prime-numbers,programming-language" />
        </attvalues>
      </node>
      <node id="typelevel/doobie" label="typelevel/doobie">
        <attvalues>
          <attvalue for="0" value="typelevel,fp,functional-programming,scala,database,jdbc" />
        </attvalues>
      </node>
      <node id="japgolly/test-state" label="japgolly/test-state">
        <attvalues>
          <attvalue for="0" value="scala,scalajs,testing,react,scalajs-react,fp,functional-programming,cats,scalaz,dom,state,script,selenium" />
        </attvalues>
      </node>
      <node id="underscoreio/essential-scala" label="underscoreio/essential-scala">
        <attvalues>
          <attvalue for="0" value="book,scala,functional-programming" />
        </attvalues>
      </node>
      <node id="rusini/manool" label="rusini/manool">
        <attvalues>
          <attvalue for="0" value="development,software-development,programming,compiler,interpreter,programming-language,homoiconic,multi-paradigm,general-purpose,practical,functional,functional-programming,functional-language,functional-core,dynamically-typed,strongly-typed,imperative,imperative-programming,procedural,procedural-programming" />
        </attvalues>
      </node>
      <node id="pointbazaar/espl1000" label="pointbazaar/espl1000">
        <attvalues>
          <attvalue for="0" value="language,programming-language,compiler,work-in-progress" />
        </attvalues>
      </node>
      <node id="klaudiosinani/awesome-prolog" label="klaudiosinani/awesome-prolog">
        <attvalues>
          <attvalue for="0" value="awesome,prolog,list,logic,programming" />
        </attvalues>
      </node>
      <node id="suned/pfun" label="suned/pfun">
        <attvalues>
          <attvalue for="0" value="functional-programming,python3,python-3,type-safety,mypy,static-code-analysis,types,immutable,immutable-datastructures,immutable-collections,immutable-objects,currying,curry,asyncio,async,zio,effects,effect-system" />
        </attvalues>
      </node>
      <node id="mkearney/dapr" label="mkearney/dapr">
        <attvalues>
          <attvalue for="0" value="rstats,r,functional-programming,for-loops,iterator,r-package" />
        </attvalues>
      </node>
      <node id="scalasummerschool/lectures" label="scalasummerschool/lectures">
        <attvalues>
          <attvalue for="0" value="scala,functional-programming,workshop,typeclasses,io-monad" />
        </attvalues>
      </node>
      <node id="marcosh/lamphpda" label="marcosh/lamphpda">
        <attvalues>
          <attvalue for="0" value="functional-programming,data-structures,php,psalm,hacktoberfest" />
        </attvalues>
      </node>
      <node id="cognate-lang/cognate" label="cognate-lang/cognate">
        <attvalues>
          <attvalue for="0" value="programming-language,functional-programming,stack-language,natural-language,closures,compiler,forth,prefix-notation,language,interpreter,lambda-calculus,stack-based-language,c,forth-like,based-stack-based-language,proglangs-discord,combinatorics" />
        </attvalues>
      </node>
      <node id="jank-lang/jank" label="jank-lang/jank">
        <attvalues>
          <attvalue for="0" value="functional-programming,compiler,clojure,language,jit,lisp,llvm,cpp,programming-language,native" />
        </attvalues>
      </node>
      <node id="vtereshkov/umka-lang" label="vtereshkov/umka-lang">
        <attvalues>
          <attvalue for="0" value="programming-language,scripting-language,compiler,interpreter,virtual-machine,cross-platform,concurrency,coroutines,fibers,c,static-typing,language" />
        </attvalues>
      </node>
      <node id="kylestetz/slang" label="kylestetz/slang">
        <attvalues>
          <attvalue for="0" value="livecoding,programming-language,audio,javascript" />
        </attvalues>
      </node>
      <node id="aclai-lab/Sole.jl" label="aclai-lab/Sole.jl">
        <attvalues>
          <attvalue for="0" value="artificial-intelligence,julia,logic,symbolic-learning" />
        </attvalues>
      </node>
      <node id="capjamesg/knowledge-graph-language" label="capjamesg/knowledge-graph-language">
        <attvalues>
          <attvalue for="0" value="knowledge-graph,programming-language" />
        </attvalues>
      </node>
      <node id="amirbawab/BashClass" label="amirbawab/BashClass">
        <attvalues>
          <attvalue for="0" value="bash,bash-script,oop,class,compiler,programming-language,object-oriented,transpiler" />
        </attvalues>
      </node>
      <node id="iewnfod/CAIE_Code" label="iewnfod/CAIE_Code">
        <attvalues>
          <attvalue for="0" value="programming-language,pseudocode,python3,interpreter" />
        </attvalues>
      </node>
      <node id="VirtusLab/Inkuire" label="VirtusLab/Inkuire">
        <attvalues>
          <attvalue for="0" value="dokka,scala,functional-programming,scalajs,dotty,scaladoc,inkuire,hoogle,scala3" />
        </attvalues>
      </node>
      <node id="spebbe/dartz" label="spebbe/dartz">
        <attvalues>
          <attvalue for="0" value="dart,functional-programming" />
        </attvalues>
      </node>
      <node id="coord-e/scopion" label="coord-e/scopion">
        <attvalues>
          <attvalue for="0" value="programming-language,cpp14,cpp,llvm,compiler,cpp-library,cplusplus,cplusplus-14,language" />
        </attvalues>
      </node>
      <node id="endless4s/endless" label="endless4s/endless">
        <attvalues>
          <attvalue for="0" value="scala,functional-programming,actors,akka,akka-cluster,akka-actors,cqrs,event-sourcing,tagless,tagless-final,algebra" />
        </attvalues>
      </node>
      <node id="Wonder-Technology/Wonder.js" label="Wonder-Technology/Wonder.js">
        <attvalues>
          <attvalue for="0" value="webgl,functional-programming,high-performance,3d,engine,reasonml,wonder,web3d" />
        </attvalues>
      </node>
      <node id="kanugurajesh/RAG-Gemini" label="kanugurajesh/RAG-Gemini">
        <attvalues>
          <attvalue for="0" value="gemini-api,logic-programming,pineconedb,retrieval-augmented-generation,semantic-search,typescript,vector-database,script,generative-ai,rag-template" />
        </attvalues>
      </node>
      <node id="vmmc2/Bleach" label="vmmc2/Bleach">
        <attvalues>
          <attvalue for="0" value="cpp,programming-language,compilers,educational-project,educational-software,interpreters" />
        </attvalues>
      </node>
      <node id="KikyTokamuro/Simple-Functional-Programming" label="KikyTokamuro/Simple-Functional-Programming">
        <attvalues>
          <attvalue for="0" value="simple,functional-programming,python,scheme,haskell,hacktoberfest" />
        </attvalues>
      </node>
      <node id="vkostyukov/scalacaster" label="vkostyukov/scalacaster">
        <attvalues>
          <attvalue for="0" value="scala,algorithm,okasaki,functional-programming,data-structures" />
        </attvalues>
      </node>
      <node id="dfinity/motoko" label="dfinity/motoko">
        <attvalues>
          <attvalue for="0" value="internet-computer,motoko,motoko-language,programming-language" />
        </attvalues>
      </node>
      <node id="ilya-klyuchnikov/lambdapi" label="ilya-klyuchnikov/lambdapi">
        <attvalues>
          <attvalue for="0" value="dependent-types,programming-language" />
        </attvalues>
      </node>
      <node id="willcipriano/Connery" label="willcipriano/Connery">
        <attvalues>
          <attvalue for="0" value="lisp-interpreter,programming-language,build-your-own-lisp,connery,lisp,lisp-variant,lisp-like,c,esolang,esolangs" />
        </attvalues>
      </node>
      <node id="Ezhil-Language-Foundation/Ezhil-Lang" label="Ezhil-Language-Foundation/Ezhil-Lang">
        <attvalues>
          <attvalue for="0" value="programming-language,python,ezhil-language,tamil" />
        </attvalues>
      </node>
      <node id="ashwinbhaskar/functional-way" label="ashwinbhaskar/functional-way">
        <attvalues>
          <attvalue for="0" value="clojure,haskell,functional-programming,immutable-datastructures,algorithms,scala3,dotty,scala" />
        </attvalues>
      </node>
      <node id="knowrob/knowrob" label="knowrob/knowrob">
        <attvalues>
          <attvalue for="0" value="knowledge-base,knowledge-graph,prolog,query-answering,reasoning,robotics" />
        </attvalues>
      </node>
      <node id="chai2010/advanced-go-programming-book" label="chai2010/advanced-go-programming-book">
        <attvalues>
          <attvalue for="0" value="go,golang,book,cgo,asm,rpc,web,cloud,programming-language" />
        </attvalues>
      </node>
      <node id="YBogomolov/fp-ts-kata" label="YBogomolov/fp-ts-kata">
        <attvalues>
          <attvalue for="0" value="functional-programming,fp-ts,kata,typescript" />
        </attvalues>
      </node>
      <node id="Dherse/masterproef" label="Dherse/masterproef">
        <attvalues>
          <attvalue for="0" value="master-thesis,photonics,programming-language" />
        </attvalues>
      </node>
      <node id="masala/masala-parser" label="masala/masala-parser">
        <attvalues>
          <attvalue for="0" value="functional-programming,parsec,parser-combinator,monad,generalization" />
        </attvalues>
      </node>
      <node id="Bystroushaak/tinySelf" label="Bystroushaak/tinySelf">
        <attvalues>
          <attvalue for="0" value="rpython,selflang,interpreter,programming-language" />
        </attvalues>
      </node>
      <node id="dannyvankooten/nederlang" label="dannyvankooten/nederlang">
        <attvalues>
          <attvalue for="0" value="interpreter,rust,bytecode,nederlands,programming-language,virtual-machine,compiler" />
        </attvalues>
      </node>
      <node id="fallen/SucreLA" label="fallen/SucreLA">
        <attvalues>
          <attvalue for="0" value="analyzer,ecp5,fpga,litex,logic,migen,risc-v,hydrausb3" />
        </attvalues>
      </node>
      <node id="marcincuber/modal_logic" label="marcincuber/modal_logic">
        <attvalues>
          <attvalue for="0" value="modal,logic,logic-programming,complexity,graph-theory,graph-algorithms,complexity-theory,modal-logic,temporal-logic" />
        </attvalues>
      </node>
      <node id="archermarx/PartialFunctions.jl" label="archermarx/PartialFunctions.jl">
        <attvalues>
          <attvalue for="0" value="currying,curry,function,julia,functional,partial,partial-application,partial-functions,lazy-evaluation,functional-programming,function-composition,function-curring" />
        </attvalues>
      </node>
      <node id="DeathKing/Learning-SICP" label="DeathKing/Learning-SICP">
        <attvalues>
          <attvalue for="0" value="sicp,scheme,functional-programming,compiler-principles,interpreters,open-course" />
        </attvalues>
      </node>
      <node id="justinmeza/lolcode-spec" label="justinmeza/lolcode-spec">
        <attvalues>
          <attvalue for="0" value="esoteric-programming-language,lolcode,programming-language,rfc,specification" />
        </attvalues>
      </node>
      <node id="nythrox/purifree" label="nythrox/purifree">
        <attvalues>
          <attvalue for="0" value="typescript,functional-programming,javascript,fp-ts" />
        </attvalues>
      </node>
      <node id="forkingachild/helloworlds" label="forkingachild/helloworlds">
        <attvalues>
          <attvalue for="0" value="language,programming,programming-language,hello-world,helloworld,helloworld-programs,languages,language-learning,collection,collections,awesome,awesome-list,awesome-lists,programming-languages,languag,list,lists,helloworlds,readme,haskell" />
        </attvalues>
      </node>
      <node id="raptor494/PyJava" label="raptor494/PyJava">
        <attvalues>
          <attvalue for="0" value="programming-language,python,python3,transpiler" />
        </attvalues>
      </node>
      <node id="TylorS/typed" label="TylorS/typed">
        <attvalues>
          <attvalue for="0" value="streams,typescript,modular,functional-programming,architecture,async,state-management,effect,effect-ts,dom,html,router,server" />
        </attvalues>
      </node>
      <node id="SummerSec/SPATool" label="SummerSec/SPATool">
        <attvalues>
          <attvalue for="0" value="cfg,ast,spatool,spa,sa,static-analysis,programming-language" />
        </attvalues>
      </node>
      <node id="google/codeworld" label="google/codeworld">
        <attvalues>
          <attvalue for="0" value="haskell,ghcjs,education,fiddle,playground,codeworld,learn-to-code,k12,functional-programming" />
        </attvalues>
      </node>
      <node id="YBogomolov/monadic-mondays" label="YBogomolov/monadic-mondays">
        <attvalues>
          <attvalue for="0" value="monadic-monday,functional-programming,fp,typescript,category-theory" />
        </attvalues>
      </node>
      <node id="kbrsh/moon" label="kbrsh/moon">
        <attvalues>
          <attvalue for="0" value="moon,javascript,ui,functional-programming" />
        </attvalues>
      </node>
      <node id="hollyoops/RecoilSwift" label="hollyoops/RecoilSwift">
        <attvalues>
          <attvalue for="0" value="recoil,redux,mvvm,swiftui,state-mangement,reswift,swift,ios,functional-programming,tca" />
        </attvalues>
      </node>
      <node id="josephguan/scala-design-patterns" label="josephguan/scala-design-patterns">
        <attvalues>
          <attvalue for="0" value="scala,design-patterns,functional-programming" />
        </attvalues>
      </node>
      <node id="wa-lang/ugo-compiler-book" label="wa-lang/ugo-compiler-book">
        <attvalues>
          <attvalue for="0" value="wasm,webassembly,wa,programming-language,wa-lang" />
        </attvalues>
      </node>
      <node id="bdqnghi/ggnn.tensorflow" label="bdqnghi/ggnn.tensorflow">
        <attvalues>
          <attvalue for="0" value="ggnn,graph,deep-learning,programming-language,program-classification,graph-classification" />
        </attvalues>
      </node>
      <node id="bearycool11/PMLL_logic_loop_Knowledge_block" label="bearycool11/PMLL_logic_loop_Knowledge_block">
        <attvalues>
          <attvalue for="0" value="ai,chatgpt,lllama,logic,openai,logicloop,pmll,veniceai,azure,azure-devops,azure-functions,persistent-memory,persistent-memory-index,persistent-memory-logic-loop,efll,arll" />
        </attvalues>
      </node>
      <node id="Xachap/Neuro-FLOPER" label="Xachap/Neuro-FLOPER">
        <attvalues>
          <attvalue for="0" value="neuro-floper,floper,python,neural-network,multilayer-perceptron-network,fuzzy-neural-network,tune,tuner,final-degree-project,dec-tau,keras,tensorflow,swi-prolog,iris,iris-dataset,fasill,malp,prolog" />
        </attvalues>
      </node>
      <node id="sampersand/squire" label="sampersand/squire">
        <attvalues>
          <attvalue for="0" value="programming-language,esolang,macros,runtime,runtime-typechecking,pattern-matching" />
        </attvalues>
      </node>
      <node id="triska/the-power-of-prolog" label="triska/the-power-of-prolog">
        <attvalues>
          <attvalue for="0" value="prolog,book,logic-programming,teaching-materials,constraints" />
        </attvalues>
      </node>
      <node id="AyeshaShaukat/Project-Battle-Ships-Game" label="AyeshaShaukat/Project-Battle-Ships-Game">
        <attvalues>
          <attvalue for="0" value="java,procedural-programming,logic-programming,game,arrays,simple,console-game" />
        </attvalues>
      </node>
      <node id="LoopPerfect/neither" label="LoopPerfect/neither">
        <attvalues>
          <attvalue for="0" value="cpp,monads,header-only,buckaroo,either,functional-programming,optional,maybe" />
        </attvalues>
      </node>
      <node id="gallettilance/magnificATS" label="gallettilance/magnificATS">
        <attvalues>
          <attvalue for="0" value="ats-lang,functional-programming,algorithms,lambda-calculus,sudoku,dependent-types,tail-recursion,neural-network,machine-learning,compiler" />
        </attvalues>
      </node>
      <node id="Cm-lang/Cmc" label="Cm-lang/Cmc">
        <attvalues>
          <attvalue for="0" value="compiler,programming-language,llvm,language,lambda,cmc,cm-language" />
        </attvalues>
      </node>
      <node id="adamsol/Pyxell" label="adamsol/Pyxell">
        <attvalues>
          <attvalue for="0" value="python,cpp,indentation,syntax,rational-numbers,generators,parser,programming-language,compiler" />
        </attvalues>
      </node>
      <node id="Rhovas/Interpreter" label="Rhovas/Interpreter">
        <attvalues>
          <attvalue for="0" value="rhovas,language,programming-language,api-design,object-oriented,functional" />
        </attvalues>
      </node>
      <node id="Jyothsnasrinivas/eta-android-2048" label="Jyothsnasrinivas/eta-android-2048">
        <attvalues>
          <attvalue for="0" value="eta,haskell,frp,functional-programming,android" />
        </attvalues>
      </node>
      <node id="VubbiScript/VubbiScript" label="VubbiScript/VubbiScript">
        <attvalues>
          <attvalue for="0" value="unity3d,blockly,visual,programming-language,programming" />
        </attvalues>
      </node>
      <node id="cedricbonhomme/iterated-function-systems" label="cedricbonhomme/iterated-function-systems">
        <attvalues>
          <attvalue for="0" value="fractal,barnsley-fern,ocaml,visualisation,functional-programming,self-similarity" />
        </attvalues>
      </node>
      <node id="citelab/JAMScript" label="citelab/JAMScript">
        <attvalues>
          <attvalue for="0" value="c,javascript,cloud-computing,iot-framework,iot,programming-language,iot-middleware,fog-computing" />
        </attvalues>
      </node>
      <node id="Moderocky/ByteSkript" label="Moderocky/ByteSkript">
        <attvalues>
          <attvalue for="0" value="skript,skript-language,bytecode,compiler,jvm-languages,jvm-bytecode,language,language-compiler,programming-language,jvm,hacktoberfest" />
        </attvalues>
      </node>
      <node id="SimonHauguel/Paso" label="SimonHauguel/Paso">
        <attvalues>
          <attvalue for="0" value="functional-programming,isomorphic,metaprogramming,programming-language,haskell" />
        </attvalues>
      </node>
      <node id="nomisRev/Saga" label="nomisRev/Saga">
        <attvalues>
          <attvalue for="0" value="distributed-systems,kotlin,saga,saga-pattern,functional-programming,microservices,ktor,java,coroutines" />
        </attvalues>
      </node>
      <node id="svenssonjoel/lispBM" label="svenssonjoel/lispBM">
        <attvalues>
          <attvalue for="0" value="lisp,interpreter,stm32f4,chibios,nrf52,esp32,zephyr,concurrency,repl,quasiquotation,programming-language,pattern-matching,riscv32,functional-programming,language,microcontroller,freertos" />
        </attvalues>
      </node>
      <node id="hussar-lang/hussar" label="hussar-lang/hussar">
        <attvalues>
          <attvalue for="0" value="golang,interpreter,toy-language,hussar,programming-language" />
        </attvalues>
      </node>
      <node id="aya-lang/aya" label="aya-lang/aya">
        <attvalues>
          <attvalue for="0" value="programming-language,code-golf,esoteric-language,golfing-language,plot,esolang,tacit" />
        </attvalues>
      </node>
      <node id="drizzer14/fnts" label="drizzer14/fnts">
        <attvalues>
          <attvalue for="0" value="fp,functional-programming,function,functions,typescript,javascript,typescript-library,functional,monad,types" />
        </attvalues>
      </node>
      <node id="MilenaCarecho/myBooks" label="MilenaCarecho/myBooks">
        <attvalues>
          <attvalue for="0" value="books,programming,programming-language,livros,livros-gratis,programacao" />
        </attvalues>
      </node>
      <node id="finos/morphir" label="finos/morphir">
        <attvalues>
          <attvalue for="0" value="morphir-modeling,business-knowledge,multi-language,functional-programming" />
        </attvalues>
      </node>
      <node id="HarvardPL/formulog" label="HarvardPL/formulog">
        <attvalues>
          <attvalue for="0" value="datalog,logic-programming,smt,static-analysis,symbolic-execution" />
        </attvalues>
      </node>
      <node id="sacalon/sacalon" label="sacalon/sacalon">
        <attvalues>
          <attvalue for="0" value="hascal,programming-language,compiler,language,general-purpose,optimal,simple,hascal-language,compiler-design,compiler-frontend,compiler-backend,compiler-optimization,hacktoberfest" />
        </attvalues>
      </node>
      <node id="parapet-io/parapet" label="parapet-io/parapet">
        <attvalues>
          <attvalue for="0" value="scala,functional-programming,distributed-systems,distributed-computing,event-driven,parallel-computing,parapet,effects" />
        </attvalues>
      </node>
      <node id="NewHR/telegram" label="NewHR/telegram">
        <attvalues>
          <attvalue for="0" value="telegram,telegram-group,comunity,programming,programming-language,programming-languages,machine-learning,data-science,linux-mint,digital,devops,news,frontend,deep-learning,hacker-news,fedora,linux,javascript" />
        </attvalues>
      </node>
      <node id="marvinborner/birb" label="marvinborner/birb">
        <attvalues>
          <attvalue for="0" value="combinatory-logic,esolang,lambda-calculus,programming-language,ski-combinators,birds,functional-programming" />
        </attvalues>
      </node>
      <node id="android10/Android-CleanArchitecture-Kotlin" label="android10/Android-CleanArchitecture-Kotlin">
        <attvalues>
          <attvalue for="0" value="android,architectural,lessons-learned,android-cleanarchitecture-kotlin,kotlin,kotlin-android,architectural-patterns,functional-programming,android-development,clean-architecture,mobile-development" />
        </attvalues>
      </node>
      <node id="h0tk3y/kotlin-monads" label="h0tk3y/kotlin-monads">
        <attvalues>
          <attvalue for="0" value="kotlin,monad,functional-programming,do-notation,coroutines" />
        </attvalues>
      </node>
      <node id="scodec/scodec-stream" label="scodec/scodec-stream">
        <attvalues>
          <attvalue for="0" value="scodec,fs2,scala,functional-programming" />
        </attvalues>
      </node>
      <node id="venil7/json-decoder" label="venil7/json-decoder">
        <attvalues>
          <attvalue for="0" value="json,decoder,elm,elm-lang,functional-programming,composition,typescript" />
        </attvalues>
      </node>
      <node id="tutara/tutara" label="tutara/tutara">
        <attvalues>
          <attvalue for="0" value="tutara,interpreter,compiler,programming-language,language,rust" />
        </attvalues>
      </node>
      <node id="jxnu-liguobin/cs-summary-reflection" label="jxnu-liguobin/cs-summary-reflection">
        <attvalues>
          <attvalue for="0" value="java,leetcode,interview,functional-programming,blog-article,scala,rust,scala-utils,notes,learning-exercise,kotlin-leetcode,python-leetcode,rust-leetcode,java-leetcode,scala-leetcode" />
        </attvalues>
      </node>
      <node id="nicolas-p/skov" label="nicolas-p/skov">
        <attvalues>
          <attvalue for="0" value="visual-programming-language,visual-programming,programming-language,integrated-development-environment,tree-structure" />
        </attvalues>
      </node>
      <node id="hylo-lang/hylo" label="hylo-lang/hylo">
        <attvalues>
          <attvalue for="0" value="programming-language" />
        </attvalues>
      </node>
      <node id="arrow-kt/arrow-fx" label="arrow-kt/arrow-fx">
        <attvalues>
          <attvalue for="0" value="functional-programming,kotlin-library,arrow" />
        </attvalues>
      </node>
      <node id="Shambles-Dev/AutoHotkey-Facade" label="Shambles-Dev/AutoHotkey-Facade">
        <attvalues>
          <attvalue for="0" value="autohotkey,ahk,functional-programming" />
        </attvalues>
      </node>
      <node id="liuxinyu95/AlgoXY" label="liuxinyu95/AlgoXY">
        <attvalues>
          <attvalue for="0" value="algorithms,haskell,functional-programming" />
        </attvalues>
      </node>
      <node id="ArkScript-lang/Ark" label="ArkScript-lang/Ark">
        <attvalues>
          <attvalue for="0" value="programming-language,language,scripting,lisp,ark,scripting-language,cpp,vm,virtual-machine,compiler,arkscript" />
        </attvalues>
      </node>
      <node id="QuMuLab/python-nnf" label="QuMuLab/python-nnf">
        <attvalues>
          <attvalue for="0" value="python,nnf,logic,dimacs" />
        </attvalues>
      </node>
      <node id="rvanasa/funqy" label="rvanasa/funqy">
        <attvalues>
          <attvalue for="0" value="quantum-computing,functional-programming,quantum,language,programming-language,library,simulator,quantum-programming-language" />
        </attvalues>
      </node>
      <node id="sabertazimi/hust-lab" label="sabertazimi/hust-lab">
        <attvalues>
          <attvalue for="0" value="hust-lab,hust,lab,computer-science,algorithm,assembly,c,compiler,data-structrues,digital-logic,verilog,functional-programming,matlab,operating-system" />
        </attvalues>
      </node>
      <node id="MilesMcBain/fnmate" label="MilesMcBain/fnmate">
        <attvalues>
          <attvalue for="0" value="rstats,functions,functional-programming" />
        </attvalues>
      </node>
      <node id="toblotron/praxis-ide" label="toblotron/praxis-ide">
        <attvalues>
          <attvalue for="0" value="low-code,online-idecode-editor,prolog,prolog-programming-language,visual-programming-editor" />
        </attvalues>
      </node>
      <node id="asteroid-lang/asteroid" label="asteroid-lang/asteroid">
        <attvalues>
          <attvalue for="0" value="programming-language,pattern-matching,scripting-language,higher-order-functions,object-oriented,language" />
        </attvalues>
      </node>
      <node id="xebia-functional/xef" label="xebia-functional/xef">
        <attvalues>
          <attvalue for="0" value="ai,kotlin,llm,multiplatform,scala,artificial-intelligence,agents,chatgpt-api,embeddings,functional-programming,openai,tokenizers" />
        </attvalues>
      </node>
      <node id="sdiehl/haskell-picosat" label="sdiehl/haskell-picosat">
        <attvalues>
          <attvalue for="0" value="picosat,picosat-solver,haskell,haskell-library,sat-solver,logic-programming,logic" />
        </attvalues>
      </node>
      <node id="black-sat/black" label="black-sat/black">
        <attvalues>
          <attvalue for="0" value="logic,temporal-logic,formal-verification,formal-methods,linear-temporal-logic" />
        </attvalues>
      </node>
      <node id="CaptureContext/swift-standard-clients" label="CaptureContext/swift-standard-clients">
        <attvalues>
          <attvalue for="0" value="swift,ios,macos,tvos,watchos,protocol-witnesses,clients,functional-programming,managers,caching,keychain,notifications,idfa,analytics,userdefaults,interfaces" />
        </attvalues>
      </node>
      <node id="narcode/codeklavier" label="narcode/codeklavier">
        <attvalues>
          <attvalue for="0" value="piano,programming-language,livecoding,python,supercollider,prototype,codeklavier-python,python-midi-analysis,midi-parser,stimuleringsfonds" />
        </attvalues>
      </node>
      <node id="SenegalLang/Senegal" label="SenegalLang/Senegal">
        <attvalues>
          <attvalue for="0" value="programming-language,senegal,vm,bird,senegal-language" />
        </attvalues>
      </node>
      <node id="hazelgrove/hazel" label="hazelgrove/hazel">
        <attvalues>
          <attvalue for="0" value="editor,functional-programming,ocaml,elm,reasonml,holes" />
        </attvalues>
      </node>
      <node id="BowenFu/hspp" label="BowenFu/hspp">
        <attvalues>
          <attvalue for="0" value="cpp,functional-programming,haskell,monad,parser-combinators,do-notation,cpp17,parser-combinator,cpp20,software-transactional-memory,stm,transactional-memory,concurrency,concurrent-programming,cpp-library,monadic,monadic-interface" />
        </attvalues>
      </node>
      <node id="Muqsit/arithmexp" label="Muqsit/arithmexp">
        <attvalues>
          <attvalue for="0" value="composer-library,php,calculator,logic,math,parser,pmmp,pocketmine-mp,virion,mathematical-expression-parser,compiler,constant-folding,strength-reduction,optimization,phpstan-l9" />
        </attvalues>
      </node>
      <node id="planttheidea/switchem" label="planttheidea/switchem">
        <attvalues>
          <attvalue for="0" value="javascript,functional-programming" />
        </attvalues>
      </node>
      <node id="HallofFamer/CLox" label="HallofFamer/CLox">
        <attvalues>
          <attvalue for="0" value="lox-language,bytecode,bytecode-interpreter,c,lox,lox-programming-language,programming-language,scripting-language" />
        </attvalues>
      </node>
      <node id="lucasconstantino/react-compose-hooks" label="lucasconstantino/react-compose-hooks">
        <attvalues>
          <attvalue for="0" value="react,functional-programming,composition,hooks" />
        </attvalues>
      </node>
      <node id="narimiran/AdventOfCode2017" label="narimiran/AdventOfCode2017">
        <attvalues>
          <attvalue for="0" value="nim,nim-lang,python,python3,advent-of-code,advent-of-code-2017,ocaml,functional-programming,adventofcode,adventofcode2017,advent,nimlang" />
        </attvalues>
      </node>
      <node id="Erawaa/MessiScriptInterpreter" label="Erawaa/MessiScriptInterpreter">
        <attvalues>
          <attvalue for="0" value="esoteric,argentina,esoteric-programming-language,messi,python,programming-language" />
        </attvalues>
      </node>
      <node id="gfngfn/Sesterl" label="gfngfn/Sesterl">
        <attvalues>
          <attvalue for="0" value="erlang,process-calculus,actor-model,type-system,ocaml,monad,concurrent-programming,f-ing-modules,module-system,statically-typed,programming-language,sesterl" />
        </attvalues>
      </node>
      <node id="stanford-oval/thingtalk" label="stanford-oval/thingtalk">
        <attvalues>
          <attvalue for="0" value="programming-language,dsl,voice-assistant,hacktoberfest" />
        </attvalues>
      </node>
      <node id="sjsyrek/malc" label="sjsyrek/malc">
        <attvalues>
          <attvalue for="0" value="lambda-calculus,lambda-functions,lambda-expressions,functional-programming,haskell,javascript,python,perl6,ruby,elixir" />
        </attvalues>
      </node>
      <node id="Aluriak/PowerGrASP" label="Aluriak/PowerGrASP">
        <attvalues>
          <attvalue for="0" value="graph-compression,answer-set-programming,python,python-library" />
        </attvalues>
      </node>
      <node id="samarium-lang/Samarium" label="samarium-lang/Samarium">
        <attvalues>
          <attvalue for="0" value="programming-language,samarium,language,python" />
        </attvalues>
      </node>
      <node id="JGU-HPC/parallelprogrammingbook" label="JGU-HPC/parallelprogrammingbook">
        <attvalues>
          <attvalue for="0" value="cuda,mpi,upc,openmp,multithreading,pram,parallel,programming-language,hpc,book" />
        </attvalues>
      </node>
      <node id="pietrobarbiero/logic_explained_networks" label="pietrobarbiero/logic_explained_networks">
        <attvalues>
          <attvalue for="0" value="xai,explainable-ai,deep-learning,neural-networks,machine-learning,logic" />
        </attvalues>
      </node>
      <node id="w1nte/vscode-dlv-syntax-highlighting" label="w1nte/vscode-dlv-syntax-highlighting">
        <attvalues>
          <attvalue for="0" value="dlv,syntax-highlighting,asp,vscode-extension,answer-set-programming" />
        </attvalues>
      </node>
      <node id="jiacai2050/ideas" label="jiacai2050/ideas">
        <attvalues>
          <attvalue for="0" value="ideas,thoughts,functional-programming,lisp" />
        </attvalues>
      </node>
      <node id="Braden1996/Cracking-the-Coding-Interview-TypeScript" label="Braden1996/Cracking-the-Coding-Interview-TypeScript">
        <attvalues>
          <attvalue for="0" value="typescript,algorithms,data-structures,logic,cracking-the-coding-interview,ts-jest,tslint,prettier" />
        </attvalues>
      </node>
      <node id="evancz/functional-programming-in-elm" label="evancz/functional-programming-in-elm">
        <attvalues>
          <attvalue for="0" value="elm,functional-programming,recursion" />
        </attvalues>
      </node>
      <node id="michael-klein/hookuspocus" label="michael-klein/hookuspocus">
        <attvalues>
          <attvalue for="0" value="hooks,react,functional-programming,javascript,functional,functional-js" />
        </attvalues>
      </node>
      <node id="basilTeam/basil" label="basilTeam/basil">
        <attvalues>
          <attvalue for="0" value="programming-language,compiler,parser,lisp-dialect,static-typing,jit,jit-compiler,language" />
        </attvalues>
      </node>
      <node id="dhil/phd-dissertation" label="dhil/phd-dissertation">
        <attvalues>
          <attvalue for="0" value="algebraic-effects,effect-handlers,continuations,abstract-machines,continuation-passing-style,expressivity,functional-programming,research,phd-thesis,expressiveness,control-effects,computational-effects,unix,phd-dissertation,effect-handler-oriented-programming" />
        </attvalues>
      </node>
      <node id="DoctorWkt/TTL_TicTacToe" label="DoctorWkt/TTL_TicTacToe">
        <attvalues>
          <attvalue for="0" value="ttl,game,logic,circuit" />
        </attvalues>
      </node>
      <node id="marceloboeira/sre" label="marceloboeira/sre">
        <attvalues>
          <attvalue for="0" value="site-reliability-engineering,software-engineering,system-programming,operating-systems,nosql,infrastructure-as-code,terraform,coursera,courses,functional-programming,distributed-systems,oncall,sre" />
        </attvalues>
      </node>
      <node id="markkurossi/mpc" label="markkurossi/mpc">
        <attvalues>
          <attvalue for="0" value="multi-party-computation,golang,go,mpc,yao-millionaires,garbled-circuit,logical-circuits,oblivious-transfer,sha-256,sha-512,ed25519,hmac-sha256,programming-language,hmac-sha512,aes-128-cbc,aes-128-gcm,multiparty-computation" />
        </attvalues>
      </node>
      <node id="Max-Starling/Notes" label="Max-Starling/Notes">
        <attvalues>
          <attvalue for="0" value="architecture,elasticsearch,testing,computer-science,docker,design-patterns,javascript,programming-language,bundling,browser,database,graphql,css,discrete-mathematics,nodejs,redux,architectural-patterns,encoding,git,rest" />
        </attvalues>
      </node>
      <node id="smlnj/smlnj" label="smlnj/smlnj">
        <attvalues>
          <attvalue for="0" value="standard-ml,functional-programming,sml" />
        </attvalues>
      </node>
      <node id="mlochbaum/BQN" label="mlochbaum/BQN">
        <attvalues>
          <attvalue for="0" value="apl,multidimensional-arrays,compiler,functional-programming,immutable,language,bqn" />
        </attvalues>
      </node>
      <node id="mraza007/Python-for-beginners" label="mraza007/Python-for-beginners">
        <attvalues>
          <attvalue for="0" value="notes,programming-language,python3,python-notes,learning-python" />
        </attvalues>
      </node>
      <node id="pietrobarbiero/constraint-learning" label="pietrobarbiero/constraint-learning">
        <attvalues>
          <attvalue for="0" value="neural-network,deep-learning,logic,explainable-ai,constraints,learning,python,pytorch,notebook-jupyter" />
        </attvalues>
      </node>
      <node id="zio-archive/zio-optics" label="zio-archive/zio-optics">
        <attvalues>
          <attvalue for="0" value="scala,functional-programming,zio,optics" />
        </attvalues>
      </node>
      <node id="gridlocdev/lua-beginners-guide" label="gridlocdev/lua-beginners-guide">
        <attvalues>
          <attvalue for="0" value="guide,lua,programming-language" />
        </attvalues>
      </node>
      <node id="Yonaba/Moses" label="Yonaba/Moses">
        <attvalues>
          <attvalue for="0" value="lua,underscore,functional-programming,table,functional,array,object,collection" />
        </attvalues>
      </node>
      <node id="fnogatz/dcg4pt" label="fnogatz/dcg4pt">
        <attvalues>
          <attvalue for="0" value="prolog,parsing,grammar,definite-clause-grammar" />
        </attvalues>
      </node>
      <node id="ana-molinos/fund_prog" label="ana-molinos/fund_prog">
        <attvalues>
          <attvalue for="0" value="algorithm,algorithms,algoritmos,c,logic-programming,logica-de-programacao" />
        </attvalues>
      </node>
      <node id="xf-zhao/LoT" label="xf-zhao/LoT">
        <attvalues>
          <attvalue for="0" value="chain-of-thought,chain-of-thought-prompting,chain-of-thought-reasoning,chain-of-thoughts,language,language-model,llm,llms,logic,lot,reasoning,symbolic-logic,symbolic-logic-reasoning,zero-shot,coling,coling2024" />
        </attvalues>
      </node>
      <node id="haifenghuang/monkey" label="haifenghuang/monkey">
        <attvalues>
          <attvalue for="0" value="programming-language,scripting-languages,scripting-language,interpreted-languages,interpreter,object-oriented,pratt-parser,language" />
        </attvalues>
      </node>
      <node id="xamidi/pmGenerator" label="xamidi/pmGenerator">
        <attvalues>
          <attvalue for="0" value="proof-theory,propositional-calculus,hpc,tbb,logic,condensed-detachment,proof-complexity,mpi,formal-proofs,hilbert-systems,frege-systems,mathematical-logic,unification" />
        </attvalues>
      </node>
      <node id="lmendo/MATL" label="lmendo/MATL">
        <attvalues>
          <attvalue for="0" value="code-golf,matlab,octave,programming-language,compiler,stack-based,esolang,esoteric-language,golfing-language" />
        </attvalues>
      </node>
      <node id="repeale/fp-go" label="repeale/fp-go">
        <attvalues>
          <attvalue for="0" value="golang,go,functional-programming,currying,option,functional" />
        </attvalues>
      </node>
      <node id="monix/monix" label="monix/monix">
        <attvalues>
          <attvalue for="0" value="scala,monix,typelevel,functional-programming,reactive-programming,fp,cats,reactive-streams,reactivex,cats-effect" />
        </attvalues>
      </node>
      <node id="reasonml/reason" label="reasonml/reason">
        <attvalues>
          <attvalue for="0" value="ocaml,javascript,reasonml,reason,programming-language" />
        </attvalues>
      </node>
      <node id="awalterschulze/gominikanren" label="awalterschulze/gominikanren">
        <attvalues>
          <attvalue for="0" value="go,minikanren,logic-programming" />
        </attvalues>
      </node>
      <node id="pakoito/Komprehensions" label="pakoito/Komprehensions">
        <attvalues>
          <attvalue for="0" value="kotlin,functional-programming,rxjava" />
        </attvalues>
      </node>
      <node id="interactiveimmersivehq/Introduction-to-touchdesigner" label="interactiveimmersivehq/Introduction-to-touchdesigner">
        <attvalues>
          <attvalue for="0" value="touchdesigner,programming-language,shaders,creative-coding,python" />
        </attvalues>
      </node>
      <node id="chaos-lang/chaos" label="chaos-lang/chaos">
        <attvalues>
          <attvalue for="0" value="programming-language,immutability,functional,typesafe,chaos,chaos-language,procedural,cyclomatic-complexity" />
        </attvalues>
      </node>
      <node id="triska/trs" label="triska/trs">
        <attvalues>
          <attvalue for="0" value="trs,prolog,term-rewriting" />
        </attvalues>
      </node>
      <node id="kickstarter/Kickstarter-ReactiveExtensions" label="kickstarter/Kickstarter-ReactiveExtensions">
        <attvalues>
          <attvalue for="0" value="swift,swift-language,functional-programming,reactivecocoa,reactiveswift,functional-reactive-programming,ios,frp" />
        </attvalues>
      </node>
      <node id="MatthiasNickles/diff-SAT" label="MatthiasNickles/diff-SAT">
        <attvalues>
          <attvalue for="0" value="satisfiability,answer-set-programming,optimization,probabilistic-programming,artificial-intelligence,sat-solver,logic-programming,psat,constraint-programming,differentiable-satisfiability,differentiable-programming,dimacs-cnf,probabilistic-asp,probabilistic-satisfiability,multi-models-optimization,weighted-sat-solving,probabilistic,probability" />
        </attvalues>
      </node>
      <node id="daviromero/anita" label="daviromero/anita">
        <attvalues>
          <attvalue for="0" value="logic,analytic-tableaux,proof-assistant,teaching-tools" />
        </attvalues>
      </node>
      <node id="bow-swift/bow" label="bow-swift/bow">
        <attvalues>
          <attvalue for="0" value="functional-programming,category-theory,functor,monad,swift-library,free-monad,tagless-final,mtl,cocoapods,carthage,swift,bow,effects,composition,fp,spm,declarative-programming,reactive-programming,hacktoberfest" />
        </attvalues>
      </node>
      <node id="kcl-lang/kcl" label="kcl-lang/kcl">
        <attvalues>
          <attvalue for="0" value="record,configuration,functional,policy,language,rust,configuration-language,compiler,devops,kubernetes,cloud-native,configuration-management,schema,shift-left,validation,infrastructure-as-code,platform-engineering,programming-language" />
        </attvalues>
      </node>
      <node id="haldai/Jurassic.pl" label="haldai/Jurassic.pl">
        <attvalues>
          <attvalue for="0" value="prolog,julia,swi-prolog,interface" />
        </attvalues>
      </node>
      <node id="darrenks/nibbles" label="darrenks/nibbles">
        <attvalues>
          <attvalue for="0" value="codegolf,functional-programming" />
        </attvalues>
      </node>
      <node id="haifenghuang/magpie" label="haifenghuang/magpie">
        <attvalues>
          <attvalue for="0" value="programming-language,scripting-languages,scripting-language,interpreted-languages,interpreter,object-oriented,pratt-parser,language,linq,golang,go,dsl,async,await,debugger" />
        </attvalues>
      </node>
      <node id="ocaml-community/awesome-ocaml" label="ocaml-community/awesome-ocaml">
        <attvalues>
          <attvalue for="0" value="ocaml,awesome,resources,programming-language" />
        </attvalues>
      </node>
      <node id="fwcd/curry-language-server" label="fwcd/curry-language-server">
        <attvalues>
          <attvalue for="0" value="curry,functional-programming,logic-programming,language-server-protocol,haskell" />
        </attvalues>
      </node>
      <node id="hanbings/alkaid" label="hanbings/alkaid">
        <attvalues>
          <attvalue for="0" value="minecraft,bukkit,tool,library,spigot,java,alkaid,functional-programming,stream,lambda,bungeecord,paper,mongodb,redis,spigot-plugin" />
        </attvalues>
      </node>
      <node id="wotpp/wotpp" label="wotpp/wotpp">
        <attvalues>
          <attvalue for="0" value="strings,programming-language,cpp,small,fast,hacktoberfest" />
        </attvalues>
      </node>
      <node id="grokking-vietnam/grox" label="grokking-vietnam/grox">
        <attvalues>
          <attvalue for="0" value="scala,scala3,functional-programming,interpreter,compiler,lox-language,lox,parser-combinators,typelevel,cats,cats-effect,scalajs,programming-language,fs2" />
        </attvalues>
      </node>
      <node id="Periklismant/oPIEC" label="Periklismant/oPIEC">
        <attvalues>
          <attvalue for="0" value="complex-event-processing,complex-event-recognition,stream-reasoning,event-calculus,probabilistic-reasoning,activity-recognition,logic-programming" />
        </attvalues>
      </node>
      <node id="vlasovskikh/funcparserlib" label="vlasovskikh/funcparserlib">
        <attvalues>
          <attvalue for="0" value="parsing,parser-combinators,functional-programming,python" />
        </attvalues>
      </node>
      <node id="para-droid-ai/scratchpad" label="para-droid-ai/scratchpad">
        <attvalues>
          <attvalue for="0" value="logic,model,reasoning,scratchpad" />
        </attvalues>
      </node>
      <node id="apaz-cli/daisho" label="apaz-cli/daisho">
        <attvalues>
          <attvalue for="0" value="compiler,c,polymorphic-types,programming-language,experimental-language" />
        </attvalues>
      </node>
      <node id="aardvark-platform/aardvark.base" label="aardvark-platform/aardvark.base">
        <attvalues>
          <attvalue for="0" value="math,aardvark,aardvark-platform,geometry,graphics,attribute-grammars,linear-algebra,tensors,matrices,incremental-evaluation,datastructures,persistent-data-structure,functional-programming,fsharp" />
        </attvalues>
      </node>
      <node id="adyavanapalli/stanford-introduction-to-mathematical-thinking" label="adyavanapalli/stanford-introduction-to-mathematical-thinking">
        <attvalues>
          <attvalue for="0" value="logic,mathematical-thinking,mathematical-logic,stanford,coursera,number-theory,real-analysis" />
        </attvalues>
      </node>
      <node id="vain0x/friends-lang" label="vain0x/friends-lang">
        <attvalues>
          <attvalue for="0" value="programming-language,japanese-language,joke" />
        </attvalues>
      </node>
      <node id="KennedyTedesco/monkey" label="KennedyTedesco/monkey">
        <attvalues>
          <attvalue for="0" value="interpreter,lexer,parser,programming-language,php,monkey-programming-language,monkey-language" />
        </attvalues>
      </node>
      <node id="kjosib/sophie" label="kjosib/sophie">
        <attvalues>
          <attvalue for="0" value="programming-language" />
        </attvalues>
      </node>
      <node id="gvolpe/pfps-examples" label="gvolpe/pfps-examples">
        <attvalues>
          <attvalue for="0" value="functional-programming,fp,cats,cats-effect,fs2,refined,newtypes,monocle,cats-mtl" />
        </attvalues>
      </node>
      <node id="Lambdish/phunctional" label="Lambdish/phunctional">
        <attvalues>
          <attvalue for="0" value="php,functional-programming,map,reduce,functional,immutability,performance,php-library" />
        </attvalues>
      </node>
      <node id="MilesCranmer/DispatchDoctor.jl" label="MilesCranmer/DispatchDoctor.jl">
        <attvalues>
          <attvalue for="0" value="code-quality,developer-tools,development,julia,monitoring,performance,performance-testing,programming-language,safety" />
        </attvalues>
      </node>
      <node id="tallesl/Rich-Hickey-fanclub" label="tallesl/Rich-Hickey-fanclub">
        <attvalues>
          <attvalue for="0" value="rich-hickey,clojure,functional-programming" />
        </attvalues>
      </node>
      <node id="krismuniz/js-to-json-logic" label="krismuniz/js-to-json-logic">
        <attvalues>
          <attvalue for="0" value="json,json-logic,js-to-json,js-to-json-logic,logic,nodejs,javascript" />
        </attvalues>
      </node>
      <node id="spcl/dace" label="spcl/dace">
        <attvalues>
          <attvalue for="0" value="high-performance-computing,programming-language,cuda,fpga,high-level-synthesis,vivado-hls" />
        </attvalues>
      </node>
      <node id="GetStream/stream-result" label="GetStream/stream-result">
        <attvalues>
          <attvalue for="0" value="android,coroutines,functional-programming,kotlin,kotlin-result,railway-oriented-programming,result,retrofit2" />
        </attvalues>
      </node>
      <node id="maciej-nowak/DP-Film-Expert-System" label="maciej-nowak/DP-Film-Expert-System">
        <attvalues>
          <attvalue for="0" value="declarative-programming,logic-programming,expert-system,prolog-rules,prolog,film-expert,university" />
        </attvalues>
      </node>
      <node id="zegl/tre" label="zegl/tre">
        <attvalues>
          <attvalue for="0" value="language,llvm-ir,golang,llvm,clang,programming-language" />
        </attvalues>
      </node>
      <node id="dcampogiani/AndroidFunctionalValidation" label="dcampogiani/AndroidFunctionalValidation">
        <attvalues>
          <attvalue for="0" value="android,functional-programming,kategory,validation,arrow,arrow-kt" />
        </attvalues>
      </node>
      <node id="mike-engel/bkmrkd" label="mike-engel/bkmrkd">
        <attvalues>
          <attvalue for="0" value="javascript,elm,bookmark,postgresql,functional-programming,docker,self-hosted" />
        </attvalues>
      </node>
      <node id="vitorsvieira/scala-iso" label="vitorsvieira/scala-iso">
        <attvalues>
          <attvalue for="0" value="scala,functional-programming,functional" />
        </attvalues>
      </node>
      <node id="aurora-pl/aurora" label="aurora-pl/aurora">
        <attvalues>
          <attvalue for="0" value="compiler,programming-language" />
        </attvalues>
      </node>
      <node id="MrinmoiHossain/HackerRank" label="MrinmoiHossain/HackerRank">
        <attvalues>
          <attvalue for="0" value="programming-contests,programming-language,algorithm,data-structures,c-plus-plus,c,hackerrank-solutions,hackerrank" />
        </attvalues>
      </node>
      <node id="riicchhaarrd/ocean" label="riicchhaarrd/ocean">
        <attvalues>
          <attvalue for="0" value="programming-language,compiler,x86,c,ast,lexer,elf" />
        </attvalues>
      </node>
      <node id="maelswarm/nymph" label="maelswarm/nymph">
        <attvalues>
          <attvalue for="0" value="programming-language,language,nymph,c,preprocessor" />
        </attvalues>
      </node>
      <node id="nullobject/bulb" label="nullobject/bulb">
        <attvalues>
          <attvalue for="0" value="javascript,functional,reactive,reactive-programming,functional-programming" />
        </attvalues>
      </node>
      <node id="Ratstail91/Toy" label="Ratstail91/Toy">
        <attvalues>
          <attvalue for="0" value="compiler,interpreter,language,programming-language,toylang,toy-programming-language,scripting-language,toy,embedded-scripting-language" />
        </attvalues>
      </node>
      <node id="uraimo/SwiftyLISP" label="uraimo/SwiftyLISP">
        <attvalues>
          <attvalue for="0" value="lisp,interpreter,programming-language,language" />
        </attvalues>
      </node>
      <node id="Pufcorina/UBB-Computer-Science" label="Pufcorina/UBB-Computer-Science">
        <attvalues>
          <attvalue for="0" value="java,python,c,css,html,csharp,cpp,lisp,prolog,ubb,computer-science" />
        </attvalues>
      </node>
      <node id="borgo-lang/borgo" label="borgo-lang/borgo">
        <attvalues>
          <attvalue for="0" value="compiler,golang,programming-language,rust-lang" />
        </attvalues>
      </node>
      <node id="Chymyst/chymyst-core" label="Chymyst/chymyst-core">
        <attvalues>
          <attvalue for="0" value="scala,chemical-machine,join-calculus,concurrency,concurrent-programming,actor-model,csp,declarative,dsl,async-channels,asynchronous-programming,parallelism,multithreading,jvm,functional-programming,multicore" />
        </attvalues>
      </node>
      <node id="courses-at-nju-by-hfwei/problem-solving-class-lectures" label="courses-at-nju-by-hfwei/problem-solving-class-lectures">
        <attvalues>
          <attvalue for="0" value="lecture-notes,course-materials,linear-programming,group-theory,number-theory,nanjing-university,computational-complexity,logic,set-theory,discrete-mathematics,discrete-probability,algorithms,abstract-algebra,graph-theory,nju-courses" />
        </attvalues>
      </node>
      <node id="typelevel/fs2" label="typelevel/fs2">
        <attvalues>
          <attvalue for="0" value="scala,stream,streaming-computation,fp,functional-programming" />
        </attvalues>
      </node>
      <node id="Grapycal/Grapycal" label="Grapycal/Grapycal">
        <attvalues>
          <attvalue for="0" value="programming-language,interactive,visualization" />
        </attvalues>
      </node>
      <node id="Alan-Rock-GS/GpuScript" label="Alan-Rock-GS/GpuScript">
        <attvalues>
          <attvalue for="0" value="artificial-intelligence,csharp,gpgpu,gpu-programming,unity,unity3d,machine-learning,neural-networks,object-oriented-programming,functional-programming" />
        </attvalues>
      </node>
      <node id="cyrus-lang/Cyrus-Lang" label="cyrus-lang/Cyrus-Lang">
        <attvalues>
          <attvalue for="0" value="compiler,gcc,gcc-compiler,gccjit,programming-language,cyrus-lang" />
        </attvalues>
      </node>
      <node id="DigitecGalaxus/Galaxus.Functional" label="DigitecGalaxus/Galaxus.Functional">
        <attvalues>
          <attvalue for="0" value="csharp,functional-programming,functional,digitec,galaxus,digitecgalaxus" />
        </attvalues>
      </node>
      <node id="nicoladileo/NephroDoctor" label="nicoladileo/NephroDoctor">
        <attvalues>
          <attvalue for="0" value="artificial-intelligence,expert-system,medical-informatics,prolog-programming-language,prolog-interpreter,inference-engine,knowledge-base,rule-based,uncertainty" />
        </attvalues>
      </node>
      <node id="ThoughtWorksInc/DeepLearning.scala" label="ThoughtWorksInc/DeepLearning.scala">
        <attvalues>
          <attvalue for="0" value="automatic-differentiation,deep-neural-networks,deep-learning,scala,neural-network,functional-programming,symbolic-computation,dsl,domain-specific-language,machine-learning" />
        </attvalues>
      </node>
      <node id="teves-castro/ts-do" label="teves-castro/ts-do">
        <attvalues>
          <attvalue for="0" value="do-notation,fp-ts,functional-programming" />
        </attvalues>
      </node>
      <node id="alexandregama/golang-tutorials" label="alexandregama/golang-tutorials">
        <attvalues>
          <attvalue for="0" value="golang,golang-tools,google,go,tutorial,guide,learn-to-code,learning-by-doing,learn-by-doing,functional-programming,concurrency,concurrent-programming,open-source,hackingcode,hacking-code,go-tutorial,go-tutorials" />
        </attvalues>
      </node>
      <node id="chkoreff/Fexl" label="chkoreff/Fexl">
        <attvalues>
          <attvalue for="0" value="c,functional-programming,interpreter" />
        </attvalues>
      </node>
      <node id="typelevel/skunk" label="typelevel/skunk">
        <attvalues>
          <attvalue for="0" value="scala,postgres,functional-programming,cats,cats-effect,fs2,scodec,typelevel,database" />
        </attvalues>
      </node>
      <node id="cozis/Noja" label="cozis/Noja">
        <attvalues>
          <attvalue for="0" value="interpreter,compiler,programming-language,c" />
        </attvalues>
      </node>
      <node id="GaijinEntertainment/daScript" label="GaijinEntertainment/daScript">
        <attvalues>
          <attvalue for="0" value="programming-language,scripting-language,interpreter,game-development,static-typing" />
        </attvalues>
      </node>
      <node id="im-d-team/Dev-Contents-House" label="im-d-team/Dev-Contents-House">
        <attvalues>
          <attvalue for="0" value="dev-culture,dev-info,performance,graphql,git,nodejs,java,javascript,css,testing,webpack,functional-programming,vue,react,typescript,browser,redux,svg,web,security" />
        </attvalues>
      </node>
      <node id="mumuki/mulang" label="mumuki/mulang">
        <attvalues>
          <attvalue for="0" value="mumuki,code-analysis,ast,haskell,static-analysis,inspection,languages,educational,mulang-ast,functional,object-oriented,logic-paradigm,prolog,java,ruby,javascript,python,nodejs,browser" />
        </attvalues>
      </node>
      <node id="joewiz/learn-xquery" label="joewiz/learn-xquery">
        <attvalues>
          <attvalue for="0" value="xquery,learning-xquery,xml,query-language,functional-programming" />
        </attvalues>
      </node>
      <node id="morloc-project/morloc" label="morloc-project/morloc">
        <attvalues>
          <attvalue for="0" value="programming-language,type-system,interoperability,ontologies,functional-language,language,code-generation,polyglot" />
        </attvalues>
      </node>
      <node id="lucaong/immutable" label="lucaong/immutable">
        <attvalues>
          <attvalue for="0" value="crystal,immutable-collections,vector,hash,data-structures,functional-programming,persistent-data-structure" />
        </attvalues>
      </node>
      <node id="PacktPublishing/Swift-3-Functional-Programming" label="PacktPublishing/Swift-3-Functional-Programming">
        <attvalues>
          <attvalue for="0" value="swift,functional-programming,frontend,backend,fp,ios,mac,packt,protocol-oriented,vapor-swift,frp,functional-reactive-programming" />
        </attvalues>
      </node>
      <node id="dkormalev/cefal" label="dkormalev/cefal">
        <attvalues>
          <attvalue for="0" value="cpp,cpp20,concepts,functional-programming,monad" />
        </attvalues>
      </node>
      <node id="mattlianje/etl4s" label="mattlianje/etl4s">
        <attvalues>
          <attvalue for="0" value="etl,functional-programming,streaming,scala" />
        </attvalues>
      </node>
      <node id="NMF-earth/nmf-app" label="NMF-earth/nmf-app">
        <attvalues>
          <attvalue for="0" value="react-native,ios,android,expo,climate-change,sustainability,global-warming,functional-programming,redux-toolkit,zero-waste,typescript,openfoodfacts,hacktoberfest" />
        </attvalues>
      </node>
      <node id="norswap/prolog-dry" label="norswap/prolog-dry">
        <attvalues>
          <attvalue for="0" value="prolog,logic-programming,dcg,backtracking" />
        </attvalues>
      </node>
      <node id="MrSmith33/vox" label="MrSmith33/vox">
        <attvalues>
          <attvalue for="0" value="jit,x86-64,codegen,pe-format,linker,d,dlang,compiler,amd64,ssa-form,aot,vox,voxlang,language,programming-language" />
        </attvalues>
      </node>
      <node id="pakoito/RxSealedUnions" label="pakoito/RxSealedUnions">
        <attvalues>
          <attvalue for="0" value="android,functional-programming" />
        </attvalues>
      </node>
      <node id="bobocode-projects/java-functional-features-exercises" label="bobocode-projects/java-functional-features-exercises">
        <attvalues>
          <attvalue for="0" value="java-8,lambda,method-reference,stream-api,functional-programming" />
        </attvalues>
      </node>
      <node id="AndreaInfUFSM/elc117-2024b" label="AndreaInfUFSM/elc117-2024b">
        <attvalues>
          <attvalue for="0" value="concurrent-programming,functional-programming,haskell,java,liascript-course,logic-programming,object-oriented-programming,programming-paradigms,prolog" />
        </attvalues>
      </node>
      <node id="Technologicat/unpythonic" label="Technologicat/unpythonic">
        <attvalues>
          <attvalue for="0" value="python,python3,functional-programming,language-extension,syntactic-macros,tail-call-optimization,tco,continuations,currying,dynamic-variable,macros,lisp,scheme,racket,haskell,lazy-evaluation,cpython,pypy3,multiple-dispatch,mcpyrate" />
        </attvalues>
      </node>
      <node id="mactsouk/mastering-Go-3rd" label="mactsouk/mastering-Go-3rd">
        <attvalues>
          <attvalue for="0" value="go,programming-language,systems-programming,command-line-tool,golang,book" />
        </attvalues>
      </node>
      <node id="imkiva/KiVM" label="imkiva/KiVM">
        <attvalues>
          <attvalue for="0" value="jvm,java,virtual-machine,interpreter,programming-language,garbage-collector" />
        </attvalues>
      </node>
      <node id="functionalscript/functionalscript" label="functionalscript/functionalscript">
        <attvalues>
          <attvalue for="0" value="javascript,functional-programming,typescript,lambda,closure,pure-functional,programming-language,lazy-evaluation,immutable,purely-functional,safety" />
        </attvalues>
      </node>
      <node id="TimWSpence/cats-stm" label="TimWSpence/cats-stm">
        <attvalues>
          <attvalue for="0" value="scala,cats-effect,transactional-memory,cats,software-transactional-memory,functional-programming,monad" />
        </attvalues>
      </node>
      <node id="One-Language/One" label="One-Language/One">
        <attvalues>
          <attvalue for="0" value="compiler,programming-language,compiler-optimization,language,self-hosting,open-source,compiler-designs,compilers-design,compiler-backend,compiler-frontend,compiler-tool,programming,programming-languages,one,one-lang,onelang,llvm,llvm-frontend,llvm-compiler,hacktoberfest" />
        </attvalues>
      </node>
      <node id="CompSciCabal/reading-material" label="CompSciCabal/reading-material">
        <attvalues>
          <attvalue for="0" value="computer-science,type-theory,logic-programming,tar-pit,stealthy-trojans,pf-pl" />
        </attvalues>
      </node>
      <node id="IMax153/expressive-ts" label="IMax153/expressive-ts">
        <attvalues>
          <attvalue for="0" value="javascript,typescript,regular-expressions,regex,functional-programming" />
        </attvalues>
      </node>
      <node id="youthlin/stream" label="youthlin/stream">
        <attvalues>
          <attvalue for="0" value="go-stream,filter,map,flatmap,reduce,functional,functional-programming,foreach" />
        </attvalues>
      </node>
      <node id="raj-pranav/learn-solidity" label="raj-pranav/learn-solidity">
        <attvalues>
          <attvalue for="0" value="solidity,dapps,web3,blockchain,smart-contract,tutorial,programming-language,ethereum" />
        </attvalues>
      </node>
      <node id="narke/colorForth" label="narke/colorForth">
        <attvalues>
          <attvalue for="0" value="colorforth,programming-language,forth" />
        </attvalues>
      </node>
      <node id="MuhammadSulaiman001/prolog-lab" label="MuhammadSulaiman001/prolog-lab">
        <attvalues>
          <attvalue for="0" value="learn-prolog,logic-programming,prolog,prolog-exercises,swi-prolog,logic,logical-programming,logical-programming-language,prolog-programming-language" />
        </attvalues>
      </node>
      <node id="elves/elvish" label="elves/elvish">
        <attvalues>
          <attvalue for="0" value="shell,go,unix,programming-language" />
        </attvalues>
      </node>
      <node id="moonbitlang/moonbit-docs" label="moonbitlang/moonbit-docs">
        <attvalues>
          <attvalue for="0" value="programming-language" />
        </attvalues>
      </node>
      <node id="ab25cq/comelang" label="ab25cq/comelang">
        <attvalues>
          <attvalue for="0" value="c,compiler,programming-language,oop" />
        </attvalues>
      </node>
      <node id="Rick-Lang/rickroll-lang" label="Rick-Lang/rickroll-lang">
        <attvalues>
          <attvalue for="0" value="interpreter,compiler,esoteric-language,esoteric-programming-language,programming-language,rickroll,language,rick-astley,rick-roll-language,transpiler,python,python3,never-gonna-give-you-up,meme,memes,youtube,ast,abstract-syntax-tree,rickroll-lang" />
        </attvalues>
      </node>
      <node id="wavebitscientific/functional-fortran" label="wavebitscientific/functional-fortran">
        <attvalues>
          <attvalue for="0" value="functional-programming,fortran" />
        </attvalues>
      </node>
      <node id="fionafibration/owoScript" label="fionafibration/owoScript">
        <attvalues>
          <attvalue for="0" value="programming-languages,esoteric-programming-language,python3,python,antlr4-grammar,antlr4-python3,owo-whats-this,owo,programming-language" />
        </attvalues>
      </node>
      <node id="tgdwyer/tgdwyer.github.io" label="tgdwyer/tgdwyer.github.io">
        <attvalues>
          <attvalue for="0" value="hacktoberfest,haskell-book,functional-programming,learning-resources,javascript,typescript,purescript,textbook" />
        </attvalues>
      </node>
      <node id="thautwarm/FSTan" label="thautwarm/FSTan">
        <attvalues>
          <attvalue for="0" value="typeclasses,subtypeclassing,higher-kinded-types,monad,monoids,functional-programming" />
        </attvalues>
      </node>
      <node id="somekindofwallflower/complete-javascript-course-2021" label="somekindofwallflower/complete-javascript-course-2021">
        <attvalues>
          <attvalue for="0" value="javascript,object-oriented-programming,functional-programming,es6,es6-javascript,pig-game,guess-the-number,dom-manipulation,dom,arrays,functions,promises,ajax-request,ajax,work-in-progress" />
        </attvalues>
      </node>
      <node id="ponylang/ponyc" label="ponylang/ponyc">
        <attvalues>
          <attvalue for="0" value="pony-language,pony-source,ponyc,programming-language,actor-model,ponylang" />
        </attvalues>
      </node>
      <node id="xSavitar/programming-books-and-resources" label="xSavitar/programming-books-and-resources">
        <attvalues>
          <attvalue for="0" value="programming-language,books,programming-resources" />
        </attvalues>
      </node>
      <node id="triska/letswicrypt" label="triska/letswicrypt">
        <attvalues>
          <attvalue for="0" value="swi-prolog,prolog,https,https-server" />
        </attvalues>
      </node>
      <node id="vitaliihonta/scala-ql" label="vitaliihonta/scala-ql">
        <attvalues>
          <attvalue for="0" value="data-engineering,dsl,functional,scala,csv,excel,json,functional-programming,scala3,data-manipulation" />
        </attvalues>
      </node>
      <node id="semiversus/python-broqer" label="semiversus/python-broqer">
        <attvalues>
          <attvalue for="0" value="python,reactive,publish-subscribe,broker,functional-programming" />
        </attvalues>
      </node>
      <node id="ThoughtWorksInc/future.scala" label="ThoughtWorksInc/future.scala">
        <attvalues>
          <attvalue for="0" value="asynchronous,monad,continuation,future,scala,functional-programming,stack-safe" />
        </attvalues>
      </node>
      <node id="kunjee17/awesome-fable" label="kunjee17/awesome-fable">
        <attvalues>
          <attvalue for="0" value="fsharp,fable,fable-plugin,javascript,bable,webpack2,functional-programming,awesome-list" />
        </attvalues>
      </node>
      <node id="japiirainen/fp" label="japiirainen/fp">
        <attvalues>
          <attvalue for="0" value="haskell,interpreter,programming-language" />
        </attvalues>
      </node>
      <node id="antonioru/deep-waters" label="antonioru/deep-waters">
        <attvalues>
          <attvalue for="0" value="javascript,validation,validation-library,validators,nodejs,functional,functional-programming,deep-waters" />
        </attvalues>
      </node>
      <node id="overlogged/steak" label="overlogged/steak">
        <attvalues>
          <attvalue for="0" value="cpp17,programming-language,functional-programming,generalized-algebraic-data-type,pattern-matching,lazy-evaluation" />
        </attvalues>
      </node>
      <node id="glebec/lambda-talk" label="glebec/lambda-talk">
        <attvalues>
          <attvalue for="0" value="lambda-calculus,church-encodings,composition,functional-programming,mathematics,theory-of-computation,javascript,combinatory-logic,combinators,currying" />
        </attvalues>
      </node>
      <node id="guregu/predicates" label="guregu/predicates">
        <attvalues>
          <attvalue for="0" value="go,prolog,dynamodb" />
        </attvalues>
      </node>
      <node id="saschagrunert/func" label="saschagrunert/func">
        <attvalues>
          <attvalue for="0" value="c,functional-programming,cpp,either,maybe" />
        </attvalues>
      </node>
      <node id="frizensami/singlang" label="frizensami/singlang">
        <attvalues>
          <attvalue for="0" value="programming-language,interpreter,singlish" />
        </attvalues>
      </node>
      <node id="MonacsLib/Monacs" label="MonacsLib/Monacs">
        <attvalues>
          <attvalue for="0" value="functional-programming,csharp,monad,railway-oriented-programming" />
        </attvalues>
      </node>
      <node id="xieyuheng/exo" label="xieyuheng/exo">
        <attvalues>
          <attvalue for="0" value="logic-programming,elixir,minikanren,microkanren,the-reasoned-schemer" />
        </attvalues>
      </node>
      <node id="logicmoo/CYC_JRTL_with_CommonLisp" label="logicmoo/CYC_JRTL_with_CommonLisp">
        <attvalues>
          <attvalue for="0" value="common-lisp,opencyc,cyc,prolog-programming-language,lisp-interpreter,artificial-intelligence,natural-language-processing,logic-programming,abcl,artificial-general-intelligence,cyc-jrtl" />
        </attvalues>
      </node>
      <node id="CodesdaLu/Programming-Books" label="CodesdaLu/Programming-Books">
        <attvalues>
          <attvalue for="0" value="pdf,books,bookstack,bookstore-web,programming,programming-language,libros,livros,livros-desenvolvedor,livros-gratis,css,html,java,javascript,python,php,backend,csharp,front-end" />
        </attvalues>
      </node>
      <node id="mrLSD/semantic-analyzer-rs" label="mrLSD/semantic-analyzer-rs">
        <attvalues>
          <attvalue for="0" value="compiler,programming-language,abstract-syntax-tree,semantic-analysis,semantic-analyzer,compiler-construction,compiler-design" />
        </attvalues>
      </node>
      <node id="usm4n/cycle-hn" label="usm4n/cycle-hn">
        <attvalues>
          <attvalue for="0" value="cyclejs,cycle-app,reactive-programming,functional-programming,pwa,progressive-web-app" />
        </attvalues>
      </node>
      <node id="gvolpe/shopping-cart-haskell" label="gvolpe/shopping-cart-haskell">
        <attvalues>
          <attvalue for="0" value="functional-programming,newtypes,refined,servant,postgresql,http" />
        </attvalues>
      </node>
      <node id="ivanperez-keera/dunai" label="ivanperez-keera/dunai">
        <attvalues>
          <attvalue for="0" value="haskell,haskell-library,frp,frp-library,functional-programming,functional-reactive-programming,game,monad,arrows,abstraction,yampa,games" />
        </attvalues>
      </node>
      <node id="rgleichman/glance" label="rgleichman/glance">
        <attvalues>
          <attvalue for="0" value="glance,haskell,visual-programming-language,visual-programming,graph-layout,diagrams,graphviz,visual,functional-programming,gtk,gtk3,gdk,cairo" />
        </attvalues>
      </node>
      <node id="TeaEntityLab/fpRust" label="TeaEntityLab/fpRust">
        <attvalues>
          <attvalue for="0" value="rust,functional-programming,functional-reactive-programming,reactive,reactive-programming,rust-library,monad,monads,optional,optional-implementations,publisher-subscriber,publisher-subscriber-pattern,pubsub,async,handler,generator,coroutines,coroutine-library,coroutine,actor-model" />
        </attvalues>
      </node>
      <node id="grandseiken/static-functional" label="grandseiken/static-functional">
        <attvalues>
          <attvalue for="0" value="compile-time,cpp,cpp20,function,functional,functional-programming,header-only,pointers,static" />
        </attvalues>
      </node>
      <node id="gregziegan/goat" label="gregziegan/goat">
        <attvalues>
          <attvalue for="0" value="elm,image-annotation,svg,annotations,image-editing,functional-programming" />
        </attvalues>
      </node>
      <node id="mobily/firestore-fp" label="mobily/firestore-fp">
        <attvalues>
          <attvalue for="0" value="typescript,functional-programming,firebase,firestore,firebase-firestore" />
        </attvalues>
      </node>
      <node id="garciparedes/prolog-examples" label="garciparedes/prolog-examples">
        <attvalues>
          <attvalue for="0" value="prolog,examples,university,logic-programming,university-of-valladolid" />
        </attvalues>
      </node>
      <node id="fraktalio/fmodel-rust" label="fraktalio/fmodel-rust">
        <attvalues>
          <attvalue for="0" value="cqrs,ddd,domain-modeling,event-driven,event-modeling,event-sourcing,fmodel,functional-programming" />
        </attvalues>
      </node>
      <node id="ISCPIF/freedsl" label="ISCPIF/freedsl">
        <attvalues>
          <attvalue for="0" value="pure,monad,monad-transformers,functional-programming,free-monad,scala,effects,modularity" />
        </attvalues>
      </node>
      <node id="straw-hat-team/adr" label="straw-hat-team/adr">
        <attvalues>
          <attvalue for="0" value="adr,straw-hat,straw-hat-platform,reactjs,golang,typescript,nodejs,elixir-lang,databases,programming-language,architecture-decision-record,genesis-adr" />
        </attvalues>
      </node>
      <node id="AsmXFoundation/AsmX" label="AsmXFoundation/AsmX">
        <attvalues>
          <attvalue for="0" value="asmx,compiler,programming-language,arm,app,open-source,os,assembler,asm,programming-languages" />
        </attvalues>
      </node>
      <node id="Vexu/toy-lang" label="Vexu/toy-lang">
        <attvalues>
          <attvalue for="0" value="programming-language,compiler" />
        </attvalues>
      </node>
      <node id="lambdaclass/riak_core_tutorial" label="lambdaclass/riak_core_tutorial">
        <attvalues>
          <attvalue for="0" value="distributed,distributed-systems,elixir,erlang,functional-programming,riak,riak-kv" />
        </attvalues>
      </node>
      <node id="neogeodev/NeoChips" label="neogeodev/NeoChips">
        <attvalues>
          <attvalue for="0" value="neogeo,clone,chips,asic,snk,preservation,repair,fix,gerber,electronics,pcb,layout,verilog,logic,cpld,fpga,neo-geo,arcade" />
        </attvalues>
      </node>
      <node id="aol/cyclops" label="aol/cyclops">
        <attvalues>
          <attvalue for="0" value="functional-programming,reactive-streams,monoid,streams,collections,data-structures,monad,monad-transformers,reactive,asynchronous,java8,streams-api,java" />
        </attvalues>
      </node>
      <node id="max7patek/metaprogramming" label="max7patek/metaprogramming">
        <attvalues>
          <attvalue for="0" value="university,metaprogramming,python,object-oriented,aspect-oriented-programming,functional-programming,domain-specific-language" />
        </attvalues>
      </node>
      <node id="mikesol/purescript-ocarina" label="mikesol/purescript-ocarina">
        <attvalues>
          <attvalue for="0" value="web-audio,functional-programming,purescript" />
        </attvalues>
      </node>
      <node id="ktonga/reactive-turtle" label="ktonga/reactive-turtle">
        <attvalues>
          <attvalue for="0" value="turtle,turtle-graphics,scala,father,son,educational,children,kids,functional-programming,akka" />
        </attvalues>
      </node>
      <node id="colomboe/KIO" label="colomboe/KIO">
        <attvalues>
          <attvalue for="0" value="kotlin,kotlin-library,functional-programming" />
        </attvalues>
      </node>
      <node id="rahul-malik/writing-dsls" label="rahul-malik/writing-dsls">
        <attvalues>
          <attvalue for="0" value="swift,talk,functional-programming,domain-specific-language" />
        </attvalues>
      </node>
      <node id="neeilan/neeilang" label="neeilan/neeilang">
        <attvalues>
          <attvalue for="0" value="programming-language,compiler,llvm" />
        </attvalues>
      </node>
      <node id="ispc/ispc" label="ispc/ispc">
        <attvalues>
          <attvalue for="0" value="ispc,programming-language,compiler,intel,simd,spmd" />
        </attvalues>
      </node>
      <node id="frol/completely-unscientific-benchmarks" label="frol/completely-unscientific-benchmarks">
        <attvalues>
          <attvalue for="0" value="benchmark,cpp,rust,java,javascript,swift,nim,python,kotlin,dlang,csharp,haskell,golang,ada,lua,luajit,programming-language,scoreboard,ruby" />
        </attvalues>
      </node>
      <node id="knowthen/fpjs" label="knowthen/fpjs">
        <attvalues>
          <attvalue for="0" value="functional-programming,javascript,frontend,hyperscript,hyperscript-helpers" />
        </attvalues>
      </node>
      <node id="AnyDSL/MimIR" label="AnyDSL/MimIR">
        <attvalues>
          <attvalue for="0" value="compiler,compilers,compiler-construction,partial-evaluation,partial-evaluator,dependent-types,intermediate-representation,optimizer,ssa,static-single-assignment,cps,continuation-passing-style,functional-programming,functional-programming-language,programming-language" />
        </attvalues>
      </node>
      <node id="logisim-evolution/logisim-evolution" label="logisim-evolution/logisim-evolution">
        <attvalues>
          <attvalue for="0" value="logisim-evolution,education,circuit,circuits,digital-circuit,digital-circuits,simulator,logic,digital-logic,digital-logic-design,fpga,timing-diagram,logisim,vhdl,verilog" />
        </attvalues>
      </node>
      <node id="wmww/Pinecone" label="wmww/Pinecone">
        <attvalues>
          <attvalue for="0" value="programming-language,language,pinecone" />
        </attvalues>
      </node>
      <node id="mnr/CodeClinicR" label="mnr/CodeClinicR">
        <attvalues>
          <attvalue for="0" value="r,clinic,lynda,linkedin,eight-queen-problem,shiny,programming-language,series" />
        </attvalues>
      </node>
      <node id="csabahruska/jhc-components" label="csabahruska/jhc-components">
        <attvalues>
          <attvalue for="0" value="haskell,compiler,grin,jhc,multiplatform,c,optimizer,c-backend,functional-programming" />
        </attvalues>
      </node>
      <node id="tuProlog/2p-kt" label="tuProlog/2p-kt">
        <attvalues>
          <attvalue for="0" value="prolog,logic-programming,kotlin,kotlin-multiplatform,kotlin-multi-platform,tuprolog,2p,java,jvm,javascript,js,symbolic,simbolic-ai" />
        </attvalues>
      </node>
      <node id="rj45/digilogic" label="rj45/digilogic">
        <attvalues>
          <attvalue for="0" value="circuit,digital,logic,logic-gates,simulation,eda,schematic-capture" />
        </attvalues>
      </node>
      <node id="alimpfard/citron" label="alimpfard/citron">
        <attvalues>
          <attvalue for="0" value="interpreter,programming-language,c" />
        </attvalues>
      </node>
      <node id="mshockwave/gross" label="mshockwave/gross">
        <attvalues>
          <attvalue for="0" value="compiler,programming-language,student-project,v8-javascript-engine" />
        </attvalues>
      </node>
      <node id="boehm-s/fun-php" label="boehm-s/fun-php">
        <attvalues>
          <attvalue for="0" value="functional-programming,ramdajs,compositional-data,function-composition" />
        </attvalues>
      </node>
      <node id="golang/go" label="golang/go">
        <attvalues>
          <attvalue for="0" value="programming-language,language,go,golang" />
        </attvalues>
      </node>
      <node id="lucasepe/g2d" label="lucasepe/g2d">
        <attvalues>
          <attvalue for="0" value="golang,graphics2d,interpreter,programming-language,scripting-language,canvas,geometry" />
        </attvalues>
      </node>
      <node id="topshell-language/topshell" label="topshell-language/topshell">
        <attvalues>
          <attvalue for="0" value="functional-programming,type-safety,reactive,programming-language" />
        </attvalues>
      </node>
      <node id="tazjin/nix-1p" label="tazjin/nix-1p">
        <attvalues>
          <attvalue for="0" value="nix,nixos,nixpkgs,functional-programming,purity,hacktoberfest" />
        </attvalues>
      </node>
      <node id="smartherd/JavaTutorial" label="smartherd/JavaTutorial">
        <attvalues>
          <attvalue for="0" value="java,java8,tutorials,object-oriented-programming,object-oriented,functional-programming" />
        </attvalues>
      </node>
      <node id="Maximilian-Winter/Bite-Programming-Language" label="Maximilian-Winter/Bite-Programming-Language">
        <attvalues>
          <attvalue for="0" value="csharp,interpreter,language,scripting,scripting-language,compiler,programming-language" />
        </attvalues>
      </node>
      <node id="xodio/hm-def" label="xodio/hm-def">
        <attvalues>
          <attvalue for="0" value="hindley-milner,type-checking,functional-programming,invariant,javascript" />
        </attvalues>
      </node>
      <node id="appcypher/awesome-wasm-langs" label="appcypher/awesome-wasm-langs">
        <attvalues>
          <attvalue for="0" value="webassembly,wasm,programming-language,language,web,astro,c,csharp,cpp,java,javascript,typescript,asmjs" />
        </attvalues>
      </node>
      <node id="inko-lang/inko" label="inko-lang/inko">
        <attvalues>
          <attvalue for="0" value="rust,compiler,programming-language,llvm,inko" />
        </attvalues>
      </node>
      <node id="tamizhvendan/CafeApp" label="tamizhvendan/CafeApp">
        <attvalues>
          <attvalue for="0" value="fsharp,suave,docker,cqrs,event-sourcing,functional-programming" />
        </attvalues>
      </node>
      <node id="cicada-lang/chimera" label="cicada-lang/chimera">
        <attvalues>
          <attvalue for="0" value="json,logic,logic-programming,programming-language" />
        </attvalues>
      </node>
      <node id="rafael-santiago/hefesto" label="rafael-santiago/hefesto">
        <attvalues>
          <attvalue for="0" value="build-tool,build-automation,build-system,c,multi-platform,programming-language,compiler-design,interpreters,interpreted-languages" />
        </attvalues>
      </node>
      <node id="uellenberg/Logimat" label="uellenberg/Logimat">
        <attvalues>
          <attvalue for="0" value="math,logic,language" />
        </attvalues>
      </node>
      <node id="itsanshulverma/du-cs-undergrad-course" label="itsanshulverma/du-cs-undergrad-course">
        <attvalues>
          <attvalue for="0" value="undergraduate-course,computer-science,cpp,java,du,html-css-javascript,lex,yacc,python,android,assembly,r,prolog" />
        </attvalues>
      </node>
      <node id="Drona-Org/Drona" label="Drona-Org/Drona">
        <attvalues>
          <attvalue for="0" value="drones,robotics,programming-language,safe,px4-firmware,p" />
        </attvalues>
      </node>
      <node id="ergonomica/ergonomica" label="ergonomica/ergonomica">
        <attvalues>
          <attvalue for="0" value="terminal,shell,python,functional-programming,cli,bash-alternative,lisp-variant,lisp,scheme" />
        </attvalues>
      </node>
      <node id="dongyx/shsub" label="dongyx/shsub">
        <attvalues>
          <attvalue for="0" value="shell,template-engine,unix,c,bash,formatter,linux,mini-language,posix-shell,programming-language,templating,template-language,preprocess,preprocessing,preprocessor,static-site-generation,static-site-generator" />
        </attvalues>
      </node>
      <node id="Shopify/FunctionalTableData" label="Shopify/FunctionalTableData">
        <attvalues>
          <attvalue for="0" value="functional-programming,user-interface,ios,swift,declarative,uitableview,uicollectionview" />
        </attvalues>
      </node>
      <node id="b9org/b9" label="b9org/b9">
        <attvalues>
          <attvalue for="0" value="programming-language,educational,virtual-machine,jit,gc" />
        </attvalues>
      </node>
      <node id="Vyxal/Vyxal" label="Vyxal/Vyxal">
        <attvalues>
          <attvalue for="0" value="golfing-language,readability,conciseness,vyxal,golfing,programming-language,code-golf,stack-based,stack-based-language,esolang,esoteric-language,esoteric-programming-language,python,powered-by-copilot,fractional-bytes,array-language,arrays,experience" />
        </attvalues>
      </node>
      <node id="AlbanPerli/Noema-Declarative-AI" label="AlbanPerli/Noema-Declarative-AI">
        <attvalues>
          <attvalue for="0" value="ai,ai-agent,ai-agent-framework,ai-agents,ai-agents-framework,aiagent,aiagents,deep-learning,llm,llm-inference,declarative-programming,llm-agent,llm-agents" />
        </attvalues>
      </node>
      <node id="loophp/combinator" label="loophp/combinator">
        <attvalues>
          <attvalue for="0" value="combinator,combinatory-logic,functional-programming,educational" />
        </attvalues>
      </node>
      <node id="jolie/jolie" label="jolie/jolie">
        <attvalues>
          <attvalue for="0" value="jolie,microservices,programming-language" />
        </attvalues>
      </node>
      <node id="SBTCVM/SBTCVM-Gen2-9" label="SBTCVM/SBTCVM-Gen2-9">
        <attvalues>
          <attvalue for="0" value="balanced-ternary,vm,virtual-machine,ternary,ternary-computer,sbtcvm,sstnpl,sbtcvm-assembly,programming-language,programming,computer-architecture,computer,balanced-ternary-computer,xas" />
        </attvalues>
      </node>
      <node id="akabe/docker-ocaml-jupyter-datascience" label="akabe/docker-ocaml-jupyter-datascience">
        <attvalues>
          <attvalue for="0" value="jupyter-notebook,docker,dockerfile,datascience,machine-learning,dataanalysis,ocaml,functional-programming" />
        </attvalues>
      </node>
      <node id="BlackMATov/kari.hpp" label="BlackMATov/kari.hpp">
        <attvalues>
          <attvalue for="0" value="cpp17,functional-programming,cpp,currying,curry,functional,c-plus-plus-17,c-plus-plus" />
        </attvalues>
      </node>
      <node id="contextgeneric/cgp" label="contextgeneric/cgp">
        <attvalues>
          <attvalue for="0" value="functional-programming,modular-programming,rust" />
        </attvalues>
      </node>
      <node id="tealang/tea" label="tealang/tea">
        <attvalues>
          <attvalue for="0" value="tea,tealang,programming-language,strongly-typed,type-inference,modularization" />
        </attvalues>
      </node>
      <node id="jkrukoff/optic" label="jkrukoff/optic">
        <attvalues>
          <attvalue for="0" value="erlang-otp,erlang-library,functional-programming,lens,traversable,immutable" />
        </attvalues>
      </node>
      <node id="azizamari/Ncodi" label="azizamari/Ncodi">
        <attvalues>
          <attvalue for="0" value="language,programming-language,compiler,csharp,dotnet,ide,tunisia" />
        </attvalues>
      </node>
      <node id="ad-si/awesome-fp-jobs" label="ad-si/awesome-fp-jobs">
        <attvalues>
          <attvalue for="0" value="elixir,elm,fp,fsharp,functional-programming,haskell,job,job-board,job-search,jobs,nix-language,ocaml,purescript,reasonml,rescript,scala" />
        </attvalues>
      </node>
      <node id="atnos-org/eff" label="atnos-org/eff">
        <attvalues>
          <attvalue for="0" value="scala,monad,monad-transformers,effects,cats,functional-programming" />
        </attvalues>
      </node>
      <node id="chr1st0scli/RainLisp" label="chr1st0scli/RainLisp">
        <attvalues>
          <attvalue for="0" value="dotnet,interpreter,lisp,programming-language,repl,lisp-dialect,lisp-interpreter,library,tutorial" />
        </attvalues>
      </node>
      <node id="eantcal/nubasic" label="eantcal/nubasic">
        <attvalues>
          <attvalue for="0" value="basic-programming-language,interpreter,windows,linux,gtk2,c-plus-plus,basic,programming-language,android,macosx,ide,language,syntax-highlighting,debugger,c-plus-plus-17" />
        </attvalues>
      </node>
      <node id="reibitto/command-center" label="reibitto/command-center">
        <attvalues>
          <attvalue for="0" value="zio,scala,functional-programming,alfred,launcher,productivity,cross-platform,window-manager" />
        </attvalues>
      </node>
      <node id="akkartik/wart" label="akkartik/wart">
        <attvalues>
          <attvalue for="0" value="c-plus-plus,lisp,lisp-interpreter,lisp-1,fexprs,unit-tested,literate-programming,programming-language" />
        </attvalues>
      </node>
      <node id="johnynek/bosatsu" label="johnynek/bosatsu">
        <attvalues>
          <attvalue for="0" value="language,functional-programming" />
        </attvalues>
      </node>
      <node id="jlangch/venice" label="jlangch/venice">
        <attvalues>
          <attvalue for="0" value="lisp,sandbox,clojure,java-interoperability,programming-language,language,functional-programming,functional,repl,devops,scripting" />
        </attvalues>
      </node>
      <node id="uuverifiers/eldarica" label="uuverifiers/eldarica">
        <attvalues>
          <attvalue for="0" value="horn-clauses,smt-solver,model-checker,verification,smt2,prolog" />
        </attvalues>
      </node>
      <node id="wu-lang/wu" label="wu-lang/wu">
        <attvalues>
          <attvalue for="0" value="programming-language,language,wu,lua" />
        </attvalues>
      </node>
      <node id="suhdonghwi/nuri" label="suhdonghwi/nuri">
        <attvalues>
          <attvalue for="0" value="hangul,programming-language" />
        </attvalues>
      </node>
      <node id="p4lang/p4-spec" label="p4lang/p4-spec">
        <attvalues>
          <attvalue for="0" value="p4,p4lang,programming-language" />
        </attvalues>
      </node>
      <node id="frankdilu/CheLang" label="frankdilu/CheLang">
        <attvalues>
          <attvalue for="0" value="argentina,programming-language,programming-languages,argentino,argento,esoteric-language,esoteric-programming-language,esoteric,esoteric-languages" />
        </attvalues>
      </node>
      <node id="softlang/yas" label="softlang/yas">
        <attvalues>
          <attvalue for="0" value="slr,yas,language,prolog" />
        </attvalues>
      </node>
      <node id="AndroDevcd/Sharp" label="AndroDevcd/Sharp">
        <attvalues>
          <attvalue for="0" value="sharp,sharplang,language,programming-language" />
        </attvalues>
      </node>
      <node id="OSCC-Project/iMap" label="OSCC-Project/iMap">
        <attvalues>
          <attvalue for="0" value="eda,logic" />
        </attvalues>
      </node>
      <node id="Snektron/pareas" label="Snektron/pareas">
        <attvalues>
          <attvalue for="0" value="futhark,cpp,programming-language,gpgpu,compiler" />
        </attvalues>
      </node>
      <node id="schwalbe-sprach/schwalbe" label="schwalbe-sprach/schwalbe">
        <attvalues>
          <attvalue for="0" value="transpiler,programming-language,swift,schwalbe" />
        </attvalues>
      </node>
      <node id="michaelbull/kotlin-result" label="michaelbull/kotlin-result">
        <attvalues>
          <attvalue for="0" value="kotlin,result,monad,either,type,class,functional-programming,functional,fp,ios,jvm,js,browser,kotlin-multiplatform" />
        </attvalues>
      </node>
      <node id="pointfreeco/pointfreeco" label="pointfreeco/pointfreeco">
        <attvalues>
          <attvalue for="0" value="functional-programming,swift,server-side-swift,snapshot-testing,swift-playgrounds,education" />
        </attvalues>
      </node>
      <node id="square-lang/Square" label="square-lang/Square">
        <attvalues>
          <attvalue for="0" value="programming-language,language,language-parsing,language-parser,square-lang,c,tiny,compiler,interpreter" />
        </attvalues>
      </node>
      <node id="imteekay/functional-programming-learning-path" label="imteekay/functional-programming-learning-path">
        <attvalues>
          <attvalue for="0" value="functional-programming,javascript,clojure,functional-languages" />
        </attvalues>
      </node>
      <node id="noahgrant/resourcerer" label="noahgrant/resourcerer">
        <attvalues>
          <attvalue for="0" value="javascript,react,data-fetching,declarative-programming,frontend,rest-api" />
        </attvalues>
      </node>
      <node id="hofstadter-io/hof" label="hofstadter-io/hof">
        <attvalues>
          <attvalue for="0" value="hofstadter,code-generator,declarative-programming,cuelang,data-modeling,migrations-generator,cue,llm,tui,workflow-engine,hacktoberfest" />
        </attvalues>
      </node>
      <node id="Lartu/ldpl" label="Lartu/ldpl">
        <attvalues>
          <attvalue for="0" value="ldpl,programming-language,compiler,cobol,compiled,dinosaur,dinosaurs,imperative-programming,imperative-programming-language,robust,robustness,static,static-typed,structured,structured-programming,systems-language,systems-programming,typed" />
        </attvalues>
      </node>
      <node id="rusucosmin/courses" label="rusucosmin/courses">
        <attvalues>
          <attvalue for="0" value="functional-programming,statistics,data-science,epfl,ubb-computer-science,data-analysis,data-visualization,network-analysis,scala,scalajs,pyspark,jupyter-notebook" />
        </attvalues>
      </node>
      <node id="ThakeeNathees/pocketlang" label="ThakeeNathees/pocketlang">
        <attvalues>
          <attvalue for="0" value="programming-language,c,language,scripting-language,bytecode-compiler,interpreter,vm,functional" />
        </attvalues>
      </node>
      <node id="ikskuh/LoLa" label="ikskuh/LoLa">
        <attvalues>
          <attvalue for="0" value="lola-language,zig,programming-language,script-language,compiler,language,interpreter,zig-package" />
        </attvalues>
      </node>
      <node id="thomscoder/luna" label="thomscoder/luna">
        <attvalues>
          <attvalue for="0" value="compiler,learning-by-doing,personal-project,sample-code,webassembly,wat2wasm,wasm,wasmtime,wasmer,codemotion,learning,programming-language,javascript,runtime,tinygo" />
        </attvalues>
      </node>
      <node id="xyproto/battlestar" label="xyproto/battlestar">
        <attvalues>
          <attvalue for="0" value="assembly,linux,programming-language,tiny,inline,gcc,dosbox" />
        </attvalues>
      </node>
      <node id="guidomb/Portal" label="guidomb/Portal">
        <attvalues>
          <attvalue for="0" value="state-management,functional-programming,ios,architecture,framework,ui,immutable,declarative-ui,swift" />
        </attvalues>
      </node>
      <node id="perkss/clojure-kafka-examples" label="perkss/clojure-kafka-examples">
        <attvalues>
          <attvalue for="0" value="clojure,kafka,kafka-streams,functional-programming,avro-kafka,java,kafka-topic,testcontainers" />
        </attvalues>
      </node>
      <node id="lean-ja/lean-by-example" label="lean-ja/lean-by-example">
        <attvalues>
          <attvalue for="0" value="lean,lean4,mdbook,functional-programming,theorem-proving,reference" />
        </attvalues>
      </node>
      <node id="aalhour/awesome-compilers" label="aalhour/awesome-compilers">
        <attvalues>
          <attvalue for="0" value="awesome-list,awesome,list,compiler,interpreter,runtime,virtual-machine,programming-language,resources,books" />
        </attvalues>
      </node>
      <node id="mpangburn/FunctionKit" label="mpangburn/FunctionKit">
        <attvalues>
          <attvalue for="0" value="swift,functional-programming,ios,macos,watchos,tvos,swift-package-manager,cocoapods,carthage" />
        </attvalues>
      </node>
      <node id="ghaffarian/progex" label="ghaffarian/progex">
        <attvalues>
          <attvalue for="0" value="programming-language,graph,cfg,ast,pdg,java,antlr4,program-analysis" />
        </attvalues>
      </node>
      <node id="bmstu-iu9/refal-5-lambda" label="bmstu-iu9/refal-5-lambda">
        <attvalues>
          <attvalue for="0" value="refal,compiler-design,functional-programming" />
        </attvalues>
      </node>
      <node id="justgage/tachyons-elm" label="justgage/tachyons-elm">
        <attvalues>
          <attvalue for="0" value="elm-lang,functional-programming,functional-css,tachyons,tachyons-css,css" />
        </attvalues>
      </node>
      <node id="aripiprazole/plank" label="aripiprazole/plank">
        <attvalues>
          <attvalue for="0" value="plank,kotlin,compiler,llvm,programming-language,parser" />
        </attvalues>
      </node>
      <node id="awto/mfjs-logic" label="awto/mfjs-logic">
        <attvalues>
          <attvalue for="0" value="logic,monad,logic-programming,javascript,mfjs,constraint-programming" />
        </attvalues>
      </node>
      <node id="politrons/Dive_into_Haskell" label="politrons/Dive_into_Haskell">
        <attvalues>
          <attvalue for="0" value="haskell,functional-programming,pure" />
        </attvalues>
      </node>
      <node id="jonathanvdc/Flame" label="jonathanvdc/Flame">
        <attvalues>
          <attvalue for="0" value="programming-language,compiler,flame" />
        </attvalues>
      </node>
      <node id="byo-books/pretty_laughable_lang" label="byo-books/pretty_laughable_lang">
        <attvalues>
          <attvalue for="0" value="c,compiler,educational,programming-language,python" />
        </attvalues>
      </node>
      <node id="izdi/elm-cheat-sheet" label="izdi/elm-cheat-sheet">
        <attvalues>
          <attvalue for="0" value="elm,tutorial,cheatsheet,learn,functional-programming,education" />
        </attvalues>
      </node>
      <node id="hkust-taco/mlscript" label="hkust-taco/mlscript">
        <attvalues>
          <attvalue for="0" value="functional-programming,type-inference" />
        </attvalues>
      </node>
      <node id="sam46/FuncMorph" label="sam46/FuncMorph">
        <attvalues>
          <attvalue for="0" value="animation,creative-coding,drawing,drawing-library,haskell,functional-programming,art,jupyter-notebook,ihaskell" />
        </attvalues>
      </node>
      <node id="xonixx/intellij-awk" label="xonixx/intellij-awk">
        <attvalues>
          <attvalue for="0" value="intellij,intellij-plugin,awk,programming-language,gawk" />
        </attvalues>
      </node>
      <node id="Kushal997-das/Pattern_Printing" label="Kushal997-das/Pattern_Printing">
        <attvalues>
          <attvalue for="0" value="python,patterns,logic-programming,python3,cpp" />
        </attvalues>
      </node>
      <node id="egordorichev/lit" label="egordorichev/lit">
        <attvalues>
          <attvalue for="0" value="lit,language,programming-language,interpreter" />
        </attvalues>
      </node>
      <node id="owo-lang/narc-rs" label="owo-lang/narc-rs">
        <attvalues>
          <attvalue for="0" value="programming-language,dependent-types,type-theory,pattern-matching" />
        </attvalues>
      </node>
      <node id="ekmett/coda" label="ekmett/coda">
        <attvalues>
          <attvalue for="0" value="visual-studio,coda,haskell,programming-language,node,vscode-extension" />
        </attvalues>
      </node>
      <node id="briza-insurance/illogical" label="briza-insurance/illogical">
        <attvalues>
          <attvalue for="0" value="logic,comparison,operand,parser,conditional" />
        </attvalues>
      </node>
      <node id="mpkocher/Functional-Programming-Techniques-In-Python" label="mpkocher/Functional-Programming-Techniques-In-Python">
        <attvalues>
          <attvalue for="0" value="functional-programming,python,composition,juypter-notebook" />
        </attvalues>
      </node>
      <node id="kotest/kotest-extensions-arrow" label="kotest/kotest-extensions-arrow">
        <attvalues>
          <attvalue for="0" value="kotlin,functional-programming,arrow-kt" />
        </attvalues>
      </node>
      <node id="jap-company/fields" label="jap-company/fields">
        <attvalues>
          <attvalue for="0" value="library,scala,validation,macros,cats,zio,short-circuit,validation-library,functional-programming" />
        </attvalues>
      </node>
      <node id="ArgonLang/Argon" label="ArgonLang/Argon">
        <attvalues>
          <attvalue for="0" value="argon,language,programming-language,scripting-language,cpp,interpreter,argonlang,argon-programming-language" />
        </attvalues>
      </node>
      <node id="Michael2109/cobalt" label="Michael2109/cobalt">
        <attvalues>
          <attvalue for="0" value="jvm,language,programming-language,haskell" />
        </attvalues>
      </node>
      <node id="KonjacSource/ShiTT" label="KonjacSource/ShiTT">
        <attvalues>
          <attvalue for="0" value="dependent-types,programming-language,type-theory,proof-assistant" />
        </attvalues>
      </node>
      <node id="alexandregama/java8-guides-tutorials" label="alexandregama/java8-guides-tutorials">
        <attvalues>
          <attvalue for="0" value="java,java8,stream-api,functional-programming,jdk,jdk8,tutorial,guide,learn-to-code,lambda-expressions,parallel-streams,java8-guides-tutorials,learning-by-doing,java-8,java-tutorial,hackingcode,hacking-code" />
        </attvalues>
      </node>
      <node id="bow-swift/bow-openapi" label="bow-swift/bow-openapi">
        <attvalues>
          <attvalue for="0" value="functional-programming,bow,swift,effects,networking,swift-package-manager,openapi,swagger,http-client,hacktoberfest" />
        </attvalues>
      </node>
      <node id="metaclass-nl/filter-bundle" label="metaclass-nl/filter-bundle">
        <attvalues>
          <attvalue for="0" value="filter,logic,api-platform,wherefilter,doctrine,doctrine-orm" />
        </attvalues>
      </node>
      <node id="JetBrains/kotlin" label="JetBrains/kotlin">
        <attvalues>
          <attvalue for="0" value="kotlin,programming-language,compiler,gradle-plugin,maven-plugin,kotlin-library,intellij-plugin,wasm,webassembly" />
        </attvalues>
      </node>
      <node id="AlenVelocity/MeowScript" label="AlenVelocity/MeowScript">
        <attvalues>
          <attvalue for="0" value="emscripten,programming-language,rust,wasm,meowscript,interpeter,hacktoberfest" />
        </attvalues>
      </node>
      <node id="Open-Bytes/SwiftUIFormValidator" label="Open-Bytes/SwiftUIFormValidator">
        <attvalues>
          <attvalue for="0" value="swiftui,swift,macos,tvos,ios,apple,cocoapods,carthage,swiftpm,form,validation,declarative-ui,declarative-programming" />
        </attvalues>
      </node>
      <node id="stepchowfun/effects" label="stepchowfun/effects">
        <attvalues>
          <attvalue for="0" value="haskell,functional-programming,computational-effects" />
        </attvalues>
      </node>
      <node id="FormalizedFormalLogic/Arithmetization" label="FormalizedFormalLogic/Arithmetization">
        <attvalues>
          <attvalue for="0" value="lean4,logic" />
        </attvalues>
      </node>
      <node id="jdryg/dls-schematics" label="jdryg/dls-schematics">
        <attvalues>
          <attvalue for="0" value="schematic,digital,logic,dls,cpu,simulation" />
        </attvalues>
      </node>
      <node id="ThoughtWorksInc/DeepDarkFantasy" label="ThoughtWorksInc/DeepDarkFantasy">
        <attvalues>
          <attvalue for="0" value="deep-learning,dsl,functional-programming,automatic-differentiation" />
        </attvalues>
      </node>
      <node id="dmitriz/cpsfy" label="dmitriz/cpsfy">
        <attvalues>
          <attvalue for="0" value="continuation,stream,control-flow,functional-programming,asynchronous,variadic,composition,monad,functor,applicative,point-free,curried-functions,callback,callback-manager,asynchronous-programming,asynchronous-tasks,reducer,continuation-passing-style,continuation-tasks,continuation-passing" />
        </attvalues>
      </node>
      <node id="Innocentsax/DSA_IN_JAVA" label="Innocentsax/DSA_IN_JAVA">
        <attvalues>
          <attvalue for="0" value="algorithms-and-data-structures,arrays,bitwise-operators,dsa-algorithm,dynamic-programming,java,logic-programming,regression,searching-algorithms,system-design" />
        </attvalues>
      </node>
      <node id="Rohansi/Mond" label="Rohansi/Mond">
        <attvalues>
          <attvalue for="0" value="c-sharp,programming-language,mond,scripting,language,debugger,compiler,scripting-language,dotnet,dotnet-core,scripting-languages,interpreter,bytecode,nuget,repl,embedded-scripting-language,script-engine,aot-compatible,webassembly" />
        </attvalues>
      </node>
      <node id="nullobject/tetris" label="nullobject/tetris">
        <attvalues>
          <attvalue for="0" value="javascript,game,tetris,functional-programming,reactive-programming" />
        </attvalues>
      </node>
      <node id="m-ender/labyrinth" label="m-ender/labyrinth">
        <attvalues>
          <attvalue for="0" value="interpreter,programming-language,two-dimensional,esolang" />
        </attvalues>
      </node>
      <node id="alinalihassan/pyLesma" label="alinalihassan/pyLesma">
        <attvalues>
          <attvalue for="0" value="programming-language,llvm,python3,llvmlite,python,language" />
        </attvalues>
      </node>
      <node id="incetarik/fp-ts-stream" label="incetarik/fp-ts-stream">
        <attvalues>
          <attvalue for="0" value="fp-ts,functional-programming,generators,streaming" />
        </attvalues>
      </node>
      <node id="rust-lang-de/rustbook-de" label="rust-lang-de/rustbook-de">
        <attvalues>
          <attvalue for="0" value="book,programming-language,rust,rust-lang" />
        </attvalues>
      </node>
      <node id="rsms/compis" label="rsms/compis">
        <attvalues>
          <attvalue for="0" value="programming-language" />
        </attvalues>
      </node>
      <node id="mpmilano/MixT" label="mpmilano/MixT">
        <attvalues>
          <attvalue for="0" value="c-plus-plus,transactions,distributed-systems,programming-language,domain-specific-language" />
        </attvalues>
      </node>
      <node id="alexito4/slox" label="alexito4/slox">
        <attvalues>
          <attvalue for="0" value="swift,interpreter,lox-language,programming-language,lox,lox-interpreter,language" />
        </attvalues>
      </node>
      <node id="ronami/typelang" label="ronami/typelang">
        <attvalues>
          <attvalue for="0" value="typescript,functional-programming,learning,compiler,recursion,type-system" />
        </attvalues>
      </node>
      <node id="spamegg1/Math-for-CS-solutions" label="spamegg1/Math-for-CS-solutions">
        <attvalues>
          <attvalue for="0" value="calculus,counting,functions,graph,graph-theory,induction,math,probability,proofs,set-theory,solution,sets,computer-science,logic,number-theory,random-walks,rsa-cryptography" />
        </attvalues>
      </node>
      <node id="arasgungore/NandGame" label="arasgungore/NandGame">
        <attvalues>
          <attvalue for="0" value="arithmetic-logic-unit,computer,control-unit,digital-design,logic-gates,logic-programming,logic-unit,memory,nandgame,processor,switching,hardware,binary-logic,fundamentals-of-computing,solutions,arithmetic-circuits,nand-game,random-access-memory,logic-circuit,thenandgame-solutions" />
        </attvalues>
      </node>
      <node id="chkas/easylang" label="chkas/easylang">
        <attvalues>
          <attvalue for="0" value="programming-language,learn-to-code" />
        </attvalues>
      </node>
      <node id="halcat0x15a/kits" label="halcat0x15a/kits">
        <attvalues>
          <attvalue for="0" value="scala,functional-programming" />
        </attvalues>
      </node>
      <node id="Kushal997-das/Project-Guidance" label="Kushal997-das/Project-Guidance">
        <attvalues>
          <attvalue for="0" value="projects,programming-language,python,python3,java,javascript,jypyternotebook,css,php,data-science,machine-learning,artificial-intelligence,iot,hacktoberfest,open-source,gssoc22,gsoc,flutter,hacktoberfest-accepted,hacktoberfest2024-accepted" />
        </attvalues>
      </node>
      <node id="tokay-lang/tokay" label="tokay-lang/tokay">
        <attvalues>
          <attvalue for="0" value="programming-language,compiler,awk,ad-hoc,parsing,packrat,language" />
        </attvalues>
      </node>
      <node id="Sheshank-s/quark-editor" label="Sheshank-s/quark-editor">
        <attvalues>
          <attvalue for="0" value="editor,online,website,coding,programming-language,css,js,java,python,json,text,free,quark,sheshank,python3,javascript" />
        </attvalues>
      </node>
      <node id="MrinmoiHossain/Online-Courses-Learning" label="MrinmoiHossain/Online-Courses-Learning">
        <attvalues>
          <attvalue for="0" value="coursera,edx,udacity,mooc,programming-language,data-science,machine-learning,google-cloud,linux" />
        </attvalues>
      </node>
      <node id="carlfriess/eiffel-guide" label="carlfriess/eiffel-guide">
        <attvalues>
          <attvalue for="0" value="eiffel,documentation,guide,programming-language,eiffel-programming-language,language" />
        </attvalues>
      </node>
      <node id="ozekik/mathesis" label="ozekik/mathesis">
        <attvalues>
          <attvalue for="0" value="logic,philosophy,proof,semantics,prover,mathematical-logic,philosophical-logic,formal-logic,first-order-logic,propositional-logic" />
        </attvalues>
      </node>
      <node id="phunanon/Insitux" label="phunanon/Insitux">
        <attvalues>
          <attvalue for="0" value="programming-language,interpreter,language,scripting-language,repl,insitux" />
        </attvalues>
      </node>
      <node id="wipplelang/wipple" label="wipplelang/wipple">
        <attvalues>
          <attvalue for="0" value="compilers,languages,programming-language" />
        </attvalues>
      </node>
      <node id="metarhia/common" label="metarhia/common">
        <attvalues>
          <attvalue for="0" value="impress,jstp,metarhia,javascript,js,common,eventemitter,tools,utilities,server,cluster,callback,globalstorage,functional-programming,curry,nodejs,node,strings,array,date" />
        </attvalues>
      </node>
      <node id="malcolmkiano/swahili" label="malcolmkiano/swahili">
        <attvalues>
          <attvalue for="0" value="swahili,programming-language" />
        </attvalues>
      </node>
      <node id="HouariZegai/PrologExercise" label="HouariZegai/PrologExercise">
        <attvalues>
          <attvalue for="0" value="prolog,prolog-programming-language,exercise-solutions,exercise" />
        </attvalues>
      </node>
      <node id="DulLabs/bhai-lang" label="DulLabs/bhai-lang">
        <attvalues>
          <attvalue for="0" value="programming-language,typescript,parser,interpreter,javascript" />
        </attvalues>
      </node>
      <node id="lettier/lda-topic-modeling" label="lettier/lda-topic-modeling">
        <attvalues>
          <attvalue for="0" value="lda,topic-modeling,data-science,natural-language-processing,nlp,nlp-machine-learning,purescript,thermite,machine-learning,bayesian,gibbs-sampling,latent-dirichlet-allocation,functional-programming,clustering,reactive-programming,reactive,machine-learning-algorithms,bulma,bulma-css,text-mining" />
        </attvalues>
      </node>
      <node id="sspipe/sspipe" label="sspipe/sspipe">
        <attvalues>
          <attvalue for="0" value="python,pipe,data-science,readability,productivity,magrittr,dplyr,syntax-sugar,pandas,numpy,sspipe,functional-programming,rapid-data-manipulation" />
        </attvalues>
      </node>
      <node id="queso-lang/queso" label="queso-lang/queso">
        <attvalues>
          <attvalue for="0" value="programming-language,language,programming,vm,functional-programming,dynamically-typed,strongly-typed,rust,multi-paradigm-programming,interpreted-language,bytecode-interpreter" />
        </attvalues>
      </node>
      <node id="python-lapidary/lapidary" label="python-lapidary/lapidary">
        <attvalues>
          <attvalue for="0" value="api-client,openapi,openapi3,python,python3,domain-specific-language,dsl,declarative-language,declarative-library,declarative-programming" />
        </attvalues>
      </node>
      <node id="agraef/pure-lang" label="agraef/pure-lang">
        <attvalues>
          <attvalue for="0" value="functional-programming,term-rewriting,scripting-language,llvm,jit-compiler" />
        </attvalues>
      </node>
      <node id="sebinsua/ramda-debug" label="sebinsua/ramda-debug">
        <attvalues>
          <attvalue for="0" value="ramda,debug,functional-programming,signature" />
        </attvalues>
      </node>
      <node id="datadog4s/datadog4s" label="datadog4s/datadog4s">
        <attvalues>
          <attvalue for="0" value="monitoring,datadog,scala,functional-programming,cats-effect,cats,datadog-metrics,http4s" />
        </attvalues>
      </node>
      <node id="AIT-Protocol/einstein-ait-prod" label="AIT-Protocol/einstein-ait-prod">
        <attvalues>
          <attvalue for="0" value="aai,bittensor,blockchain,decentralization,llm,logic,machine-learning,mathematics" />
        </attvalues>
      </node>
      <node id="janbodnar/Java-Advanced" label="janbodnar/Java-Advanced">
        <attvalues>
          <attvalue for="0" value="programming-language,advanced-programming,course,java" />
        </attvalues>
      </node>
      <node id="triska/clpz" label="triska/clpz">
        <attvalues>
          <attvalue for="0" value="clp,constraints,integer-arithmetic,prolog,sicstus-prolog,constraint-programming" />
        </attvalues>
      </node>
      <node id="aditeyabaral/DDCO-Lab-UE18CS207" label="aditeyabaral/DDCO-Lab-UE18CS207">
        <attvalues>
          <attvalue for="0" value="verilog,icarus-verilog,digital-design,computer-organization,verilog-code,logic-programming" />
        </attvalues>
      </node>
      <node id="bszwej/scala-3-crash-course" label="bszwej/scala-3-crash-course">
        <attvalues>
          <attvalue for="0" value="scala,scala3,workshop,exercises,dotty,functional-programming,enums,intersections,union,adt" />
        </attvalues>
      </node>
      <node id="ztangent/Julog.jl" label="ztangent/Julog.jl">
        <attvalues>
          <attvalue for="0" value="julia,prolog,first-order-logic,logic,logic-programming,fol" />
        </attvalues>
      </node>
      <node id="opyapeus/purescript-emo8" label="opyapeus/purescript-emo8">
        <attvalues>
          <attvalue for="0" value="game-engine,functional-programming,emoji" />
        </attvalues>
      </node>
      <node id="PacktPublishing/Swift-Functional-Programming" label="PacktPublishing/Swift-Functional-Programming">
        <attvalues>
          <attvalue for="0" value="swift,fp,functional-programming,functional-reactive-programming,vapor-swift,object-oriented-programming,protocol-oriented-programming,oop,ios,ios-app,ios-swift,swift-language" />
        </attvalues>
      </node>
      <node id="ValeLang/Vale" label="ValeLang/Vale">
        <attvalues>
          <attvalue for="0" value="language,compiler,programming-language,systems-programming,vale" />
        </attvalues>
      </node>
      <node id="dg92/Performance-Analysis-JS" label="dg92/Performance-Analysis-JS">
        <attvalues>
          <attvalue for="0" value="javascript,perfromance,map,reduce,filter,find,javascript-functions,es6,lodash,lodash-analysis,functional-programming,ramdajs,ramda,benchmarking" />
        </attvalues>
      </node>
      <node id="santifa/pasp-mode" label="santifa/pasp-mode">
        <attvalues>
          <attvalue for="0" value="emacs,answer-set-programming,major-mode" />
        </attvalues>
      </node>
      <node id="phenax/algebraic-effects" label="phenax/algebraic-effects">
        <attvalues>
          <attvalue for="0" value="algebraic-effects,functional-programming,javascript,generators,effects,side-effects" />
        </attvalues>
      </node>
      <node id="AAAI-DISIM-UnivAQ/DALI" label="AAAI-DISIM-UnivAQ/DALI">
        <attvalues>
          <attvalue for="0" value="prolog,multi-agent-systems,event-driven,logic-programming" />
        </attvalues>
      </node>
      <node id="danyvarghese/PyGol" label="danyvarghese/PyGol">
        <attvalues>
          <attvalue for="0" value="inductive-logic-programming,machine-learning,inverse-entailment,abductive-commonsense-reasoning,abductive-learning,artificial-intelligence,automated-data-science,automated-machine-learning,automl,explainable-ai,explainable-ml,inference-engine,logic-programming,pygol" />
        </attvalues>
      </node>
      <node id="latte-central/LaTTe" label="latte-central/LaTTe">
        <attvalues>
          <attvalue for="0" value="clojure,proof-assistant,logic,mathematics" />
        </attvalues>
      </node>
      <node id="wotbrew/relic" label="wotbrew/relic">
        <attvalues>
          <attvalue for="0" value="clojure,relational-algebra,relations,logic,dataflow,sql,incremental-view-maintenance" />
        </attvalues>
      </node>
      <node id="micheleriva/CadregaLisp" label="micheleriva/CadregaLisp">
        <attvalues>
          <attvalue for="0" value="node,javascript,esoteric-language,programming-language,compiler,lisp,scheme,haskell,haskell-language" />
        </attvalues>
      </node>
      <node id="hejibo/Python-for-social-scientists" label="hejibo/Python-for-social-scientists">
        <attvalues>
          <attvalue for="0" value="python,psychologist,programming-language,eyetracking,usability,experiment,data,analysis,social-network-analysis" />
        </attvalues>
      </node>
      <node id="typelevel/cats-mtl" label="typelevel/cats-mtl">
        <attvalues>
          <attvalue for="0" value="transformer-typeclasses,cats,functional-programming,typeclasses,monad" />
        </attvalues>
      </node>
      <node id="felko/ton-lang" label="felko/ton-lang">
        <attvalues>
          <attvalue for="0" value="programming-language,visual-programming-language,visual-programming-editor,cellular-automata,esolang" />
        </attvalues>
      </node>
      <node id="TheAlgorithms/Haskell" label="TheAlgorithms/Haskell">
        <attvalues>
          <attvalue for="0" value="hacktoberfest,haskell,algorithms,data-structures,functional-programming" />
        </attvalues>
      </node>
      <node id="sharkdp/cube-composer" label="sharkdp/cube-composer">
        <attvalues>
          <attvalue for="0" value="game,puzzle,purescript,functional-programming,programming-exercise,browser-game" />
        </attvalues>
      </node>
      <node id="pointfreeco/swift-gen" label="pointfreeco/swift-gen">
        <attvalues>
          <attvalue for="0" value="randomness,functional-programming,composition,transformation,testing" />
        </attvalues>
      </node>
      <node id="CondorLang/Condor" label="CondorLang/Condor">
        <attvalues>
          <attvalue for="0" value="c-plus-plus,condor,makefile,programming-language" />
        </attvalues>
      </node>
      <node id="Lapz/tox" label="Lapz/tox">
        <attvalues>
          <attvalue for="0" value="programming-language,rust,vm" />
        </attvalues>
      </node>
      <node id="Adamnite/A1" label="Adamnite/A1">
        <attvalues>
          <attvalue for="0" value="blockchain,programming-language,smart-contracts,cpp,language,adamnite" />
        </attvalues>
      </node>
      <node id="NatsuLang/NatsuLang" label="NatsuLang/NatsuLang">
        <attvalues>
          <attvalue for="0" value="programming-language,llvm,compiler,interpreter,native,aot" />
        </attvalues>
      </node>
      <node id="snekkylang/snekky" label="snekkylang/snekky">
        <attvalues>
          <attvalue for="0" value="programming-language,haxe,snekky-programming-language" />
        </attvalues>
      </node>
      <node id="17cupsofcoffee/ein" label="17cupsofcoffee/ein">
        <attvalues>
          <attvalue for="0" value="programming-language,rust,ein" />
        </attvalues>
      </node>
      <node id="namin/metamk" label="namin/metamk">
        <attvalues>
          <attvalue for="0" value="scheme,minikanren,metaprogramming,meta,logic-programming,reflection" />
        </attvalues>
      </node>
      <node id="gtramontina/lambda" label="gtramontina/lambda">
        <attvalues>
          <attvalue for="0" value="lambda-calculus,javascript,es6-javascript,es6,lambda,functional-programming,functional" />
        </attvalues>
      </node>
      <node id="andys8/awesome-haskell-videos" label="andys8/awesome-haskell-videos">
        <attvalues>
          <attvalue for="0" value="awesome,haskell,videos,awesome-list,functional-programming,hacktoberfest" />
        </attvalues>
      </node>
      <node id="pschachte/wybe" label="pschachte/wybe">
        <attvalues>
          <attvalue for="0" value="programming-language,declarative-programming,imperative-programming" />
        </attvalues>
      </node>
      <node id="lamdu/lamdu" label="lamdu/lamdu">
        <attvalues>
          <attvalue for="0" value="integrated-development-environment,programming-language,programmer-tool,projectional-editor,structure-editor,wytiwys" />
        </attvalues>
      </node>
      <node id="ujjwal-kr/ram" label="ujjwal-kr/ram">
        <attvalues>
          <attvalue for="0" value="programming-language,rust,interpreter" />
        </attvalues>
      </node>
      <node id="cognitedata/oryx" label="cognitedata/oryx">
        <attvalues>
          <attvalue for="0" value="fsharp,dotnet-standard,dotnet,functional-programming,web-client,middleware" />
        </attvalues>
      </node>
      <node id="arkark/d-prolog" label="arkark/d-prolog">
        <attvalues>
          <attvalue for="0" value="prolog,dlang,repl,parser" />
        </attvalues>
      </node>
      <node id="thefrontside/funcadelic.js" label="thefrontside/funcadelic.js">
        <attvalues>
          <attvalue for="0" value="functional-programming,functional-js,functor,monoid,semigroup,typeclass,monad" />
        </attvalues>
      </node>
      <node id="47degrees/scalacheck-toolbox" label="47degrees/scalacheck-toolbox">
        <attvalues>
          <attvalue for="0" value="scalacheck,functional-programming,jdk8,joda,date-time,scala" />
        </attvalues>
      </node>
      <node id="viebel/klipse" label="viebel/klipse">
        <attvalues>
          <attvalue for="0" value="clojure,clojurescript,interactive-snippets,javascript,code-evaluation,ruby,scheme,prolog,react,reactjs,klipse-plugin,codemirror-editor,evaluation,python,brainfuck,lua,ocaml,reasonml,common-lisp" />
        </attvalues>
      </node>
      <node id="branchtalk-io/backend" label="branchtalk-io/backend">
        <attvalues>
          <attvalue for="0" value="scala,example-project,ddd,cqrs-es,functional-programming" />
        </attvalues>
      </node>
      <node id="Ana06/AI" label="Ana06/AI">
        <attvalues>
          <attvalue for="0" value="prolog,jess,artificial-intelligence,protege,natural-language-processing,recommender-system,ontology,ucm" />
        </attvalues>
      </node>
      <node id="logicmoo/wam_common_lisp" label="logicmoo/wam_common_lisp">
        <attvalues>
          <attvalue for="0" value="common-lisp,prolog-programming-language,object-oriented-programming,oop,swi-prolog-library,swi-prolog,yap-prolog,greenspun,lisp,prolog,lisp-compiler,lisp-interpreter,prolog-programmers,swi" />
        </attvalues>
      </node>
      <node id="myst-lang/myst" label="myst-lang/myst">
        <attvalues>
          <attvalue for="0" value="dynamic,object-oriented,language,programming-language,crystal,myst-lang" />
        </attvalues>
      </node>
      <node id="sanmai/pipeline" label="sanmai/pipeline">
        <attvalues>
          <attvalue for="0" value="php-library,collections,pipeline,functional-programming,chain,stream-processing" />
        </attvalues>
      </node>
      <node id="rntz/datafun" label="rntz/datafun">
        <attvalues>
          <attvalue for="0" value="programming-language,datalog,query,monotonicity,semilattices,type-theory,compiler" />
        </attvalues>
      </node>
      <node id="sjsyrek/maryamyriameliamurphies.js" label="sjsyrek/maryamyriameliamurphies.js">
        <attvalues>
          <attvalue for="0" value="javascript,haskell,functional-programming,es2015,monads" />
        </attvalues>
      </node>
      <node id="sartaj/pipe-me" label="sartaj/pipe-me">
        <attvalues>
          <attvalue for="0" value="pipeline-operator,callbag,reactive-programming,iterables,functional-programming" />
        </attvalues>
      </node>
      <node id="dedbox/racket-algebraic" label="dedbox/racket-algebraic">
        <attvalues>
          <attvalue for="0" value="algebraic,racket,functional-programming" />
        </attvalues>
      </node>
      <node id="pivovarit/throwing-function" label="pivovarit/throwing-function">
        <attvalues>
          <attvalue for="0" value="java-8,functional-programming,exception-handling,hacktoberfest" />
        </attvalues>
      </node>
      <node id="hacktoberfest17/programming" label="hacktoberfest17/programming">
        <attvalues>
          <attvalue for="0" value="hacktoberfest,hacktober,programming,beginner-friendly,c,javascript,java,ruby,sql,golang,erlang,python,python-3,html,nodejs,functional-programming,haskell,octave,racket,swift" />
        </attvalues>
      </node>
      <node id="dvdzkwsk/redash" label="dvdzkwsk/redash">
        <attvalues>
          <attvalue for="0" value="javascript,functional-programming,standard-library,library,es2015,composition,js-library,javascript-library" />
        </attvalues>
      </node>
      <node id="manoelcampos/padroes-projetos" label="manoelcampos/padroes-projetos">
        <attvalues>
          <attvalue for="0" value="padroes-de-projetos,design-patterns,java,gof,solid,projects,samples,oop,object-oriented-programming,fp,functional-programming" />
        </attvalues>
      </node>
      <node id="ast-al/rangeless" label="ast-al/rangeless">
        <attvalues>
          <attvalue for="0" value="cpp,cpp11,functional,functional-programming,range,linq,itertools,parallel,streaming-data,streaming-algorithms,pipeline,lazy-evaluation" />
        </attvalues>
      </node>
      <node id="goruby/goruby" label="goruby/goruby">
        <attvalues>
          <attvalue for="0" value="ruby,go,interpreter,programming-language,language,golang" />
        </attvalues>
      </node>
      <node id="AmziLS/AmziProlog" label="AmziLS/AmziProlog">
        <attvalues>
          <attvalue for="0" value="prolog,ide,eclipse-plugin,virtual-machine,logic-programming" />
        </attvalues>
      </node>
      <node id="eguatech/egua" label="eguatech/egua">
        <attvalues>
          <attvalue for="0" value="egua,portugues,javascript,linguagem-de-programacao,programacao,programming-language" />
        </attvalues>
      </node>
      <node id="artichoke/playground" label="artichoke/playground">
        <attvalues>
          <attvalue for="0" value="wasm,rust,ruby,programming-language,playground,artichoke,webassembly,rust-application" />
        </attvalues>
      </node>
      <node id="ehmicky/fast-cartesian" label="ehmicky/fast-cartesian">
        <attvalues>
          <attvalue for="0" value="cartesian,cartesian-product,performance,sets,functional-programming,functional,product,iterable,algorithm,data-structures,es6,javascript,library,nodejs,lodash,lodash-fp,cartesian-products,combinatorics,combinations,typescript" />
        </attvalues>
      </node>
      <node id="fusionlanguage/fut" label="fusionlanguage/fut">
        <attvalues>
          <attvalue for="0" value="programming-language,language,transpiler" />
        </attvalues>
      </node>
      <node id="Es1chUbJyan9/32bit_Quine-McCluskey_and_Petrick_Method_in_C" label="Es1chUbJyan9/32bit_Quine-McCluskey_and_Petrick_Method_in_C">
        <attvalues>
          <attvalue for="0" value="quine-mccluskey,quine-mccluskey-algorithm,petrick-method,c,digital-logic,logic-programming,simplification" />
        </attvalues>
      </node>
      <node id="c-cube/smbc" label="c-cube/smbc">
        <attvalues>
          <attvalue for="0" value="sat,solver,logic,computational,ocaml,model,formal-methods" />
        </attvalues>
      </node>
      <node id="pointless-lang/pointless" label="pointless-lang/pointless">
        <attvalues>
          <attvalue for="0" value="language,functional-programming,dart,interpreter,education,dynamic-programming" />
        </attvalues>
      </node>
      <node id="wurstscript/WurstScript" label="wurstscript/WurstScript">
        <attvalues>
          <attvalue for="0" value="wurstlang,warcraft,programming-language,jass,wurstscript,java,lua" />
        </attvalues>
      </node>
      <node id="MartinSnyder/http4s-chatserver" label="MartinSnyder/http4s-chatserver">
        <attvalues>
          <attvalue for="0" value="scala,http4s,fs2,websockets,functional-programming,functional-reactive-programming" />
        </attvalues>
      </node>
      <node id="billhails/PyScheme" label="billhails/PyScheme">
        <attvalues>
          <attvalue for="0" value="language,python,functional-programming,logic-programming,pycharm" />
        </attvalues>
      </node>
      <node id="osteele/functional-javascript" label="osteele/functional-javascript">
        <attvalues>
          <attvalue for="0" value="javascript-library,functional-programming" />
        </attvalues>
      </node>
      <node id="Pankaj-Str/C-Programming-Tutorial-codeswithpankaj" label="Pankaj-Str/C-Programming-Tutorial-codeswithpankaj">
        <attvalues>
          <attvalue for="0" value="c,programming-language" />
        </attvalues>
      </node>
      <node id="CarlosMChica/haskell-book-readers-exercises" label="CarlosMChica/haskell-book-readers-exercises">
        <attvalues>
          <attvalue for="0" value="haskell,functional-programming,haskellbook" />
        </attvalues>
      </node>
      <node id="lazebny/ramda-ruby" label="lazebny/ramda-ruby">
        <attvalues>
          <attvalue for="0" value="ramda,ruby,functional-programming" />
        </attvalues>
      </node>
      <node id="scalaz/scalaz-plugin" label="scalaz/scalaz-plugin">
        <attvalues>
          <attvalue for="0" value="scalaz,compiler-plugin,compiler-optimizations,functional-programming,parametricity,compilers" />
        </attvalues>
      </node>
      <node id="larsbrinkhoff/lbForth" label="larsbrinkhoff/lbForth">
        <attvalues>
          <attvalue for="0" value="forth,compiler,interpreter,metacompiler,pdp11,m68k,self-hosted,linux,arm,programming-language,x86,asmjs,risc-v,riscv,6502,msp430,avr,8051,cortex-m" />
        </attvalues>
      </node>
      <node id="roberthoenig/FirstOrderLogic.jl" label="roberthoenig/FirstOrderLogic.jl">
        <attvalues>
          <attvalue for="0" value="julia,first-order-logic,logic,satisfiability-solver" />
        </attvalues>
      </node>
      <node id="lemastero/scala_typeclassopedia" label="lemastero/scala_typeclassopedia">
        <attvalues>
          <attvalue for="0" value="scala,functional-programming,patterns,category-teory" />
        </attvalues>
      </node>
      <node id="AntChainOpenLabs/Smart-Intermediate-Representation" label="AntChainOpenLabs/Smart-Intermediate-Representation">
        <attvalues>
          <attvalue for="0" value="artificial-intelligence,blockchain,compiler,intermediate-representation,programming-language,runtime,smart-contract" />
        </attvalues>
      </node>
      <node id="VitamintK/Passant" label="VitamintK/Passant">
        <attvalues>
          <attvalue for="0" value="esoteric-language,language,programming-language,javascript-framework,chess,compiler,pgn,fen,javascript-compiler" />
        </attvalues>
      </node>
      <node id="johnphantom/Dynamic-Stateless-Computer" label="johnphantom/Dynamic-Stateless-Computer">
        <attvalues>
          <attvalue for="0" value="logic,computing,quantum-computing,quantum-mechanics,turing-machine,dynamic,connections,geometry,counter-strike,counter-strike-global-offensive,counter-strike-source,quake,quake-engine,half-life,functional-programming,dynamic-logics,connectionism,stateless,entanglement" />
        </attvalues>
      </node>
      <node id="sam-astro/Z-Sharp" label="sam-astro/Z-Sharp">
        <attvalues>
          <attvalue for="0" value="language,programming-language,coding-language,custom-language" />
        </attvalues>
      </node>
      <node id="haskell-beginners-2022/course-plan" label="haskell-beginners-2022/course-plan">
        <attvalues>
          <attvalue for="0" value="haskell,course,learning,beginner-friendly,functional-programming,hacktoberfest,hacktoberfest2022,mentorship" />
        </attvalues>
      </node>
      <node id="core-lang/core" label="core-lang/core">
        <attvalues>
          <attvalue for="0" value="compiler,garbage-collection,jit,language-design,parser,programming-language" />
        </attvalues>
      </node>
      <node id="evincarofautumn/kitten" label="evincarofautumn/kitten">
        <attvalues>
          <attvalue for="0" value="haskell,language,programming-language,concatenative,static-types,effects,forth" />
        </attvalues>
      </node>
      <node id="Laythe-lang/Laythe" label="Laythe-lang/Laythe">
        <attvalues>
          <attvalue for="0" value="virtual-machine,crafting-interpreters,programming-language,laythe,gradual-typing,interpreter" />
        </attvalues>
      </node>
      <node id="lichess-org/lila-search" label="lichess-org/lila-search">
        <attvalues>
          <attvalue for="0" value="cats-effect,chess,elasticsearch,functional-programming,lichess,scala,scala3,smithy,smithy4s,typelevel" />
        </attvalues>
      </node>
      <node id="codeinred/recursive-variant" label="codeinred/recursive-variant">
        <attvalues>
          <attvalue for="0" value="variants,variant,sum-types,recursion,recursive-types,cpp,cpp20,header-only,header-only-library,functional-programming" />
        </attvalues>
      </node>
      <node id="thi-ng/umbrella" label="thi-ng/umbrella">
        <attvalues>
          <attvalue for="0" value="dataflow,color,data-structures,dsl,functional-programming,geometry,html,parser-combinators,reactive-programming,shadergraph,streams,transducers,typescript,ui,vectors,visualization,webassembly,webgl,ziglang,monorepo" />
        </attvalues>
      </node>
      <node id="jauhararifin/magelang" label="jauhararifin/magelang">
        <attvalues>
          <attvalue for="0" value="programming-language,rust,compiler,wasm" />
        </attvalues>
      </node>
      <node id="potigol/potigol" label="potigol/potigol">
        <attvalues>
          <attvalue for="0" value="potigol,scala,programming-language,functional-programming,type-inference,portuguese,portugues,beginner-friendly,language,compiler,hacktoberfest,hacktoberfest2018,linguagem-potigol" />
        </attvalues>
      </node>
      <node id="mystborn/TaffyScript" label="mystborn/TaffyScript">
        <attvalues>
          <attvalue for="0" value="compiler,programming-language,language" />
        </attvalues>
      </node>
      <node id="newca12/awesome-rust-formalized-reasoning" label="newca12/awesome-rust-formalized-reasoning">
        <attvalues>
          <attvalue for="0" value="formal-verification,prover,automated-theorem-provers,theorem-prover,reasoning,logic,constructive-mathematics,dependent-types,theorem-proving,proof-assistants,rust" />
        </attvalues>
      </node>
      <node id="SWI-Prolog/swipl-wasm" label="SWI-Prolog/swipl-wasm">
        <attvalues>
          <attvalue for="0" value="prolog,webassembly,swi-prolog" />
        </attvalues>
      </node>
      <node id="dmadisetti/sona.js" label="dmadisetti/sona.js">
        <attvalues>
          <attvalue for="0" value="programming-language,esolang,toki-pona" />
        </attvalues>
      </node>
      <node id="sampsyo/bril" label="sampsyo/bril">
        <attvalues>
          <attvalue for="0" value="bril,compiler,programming-language" />
        </attvalues>
      </node>
      <node id="gvolpe/pfps-shopping-cart" label="gvolpe/pfps-shopping-cart">
        <attvalues>
          <attvalue for="0" value="functional-programming,fp,cats,cats-effect,http4s,fs2,skunk,refined,newtypes,tagless-final,finally-tagless,tagless,typeclass-derivation,typeclasses" />
        </attvalues>
      </node>
      <node id="munusphp/munus" label="munusphp/munus">
        <attvalues>
          <attvalue for="0" value="php,functional-programming,object-functional,immutable-objects,immutable-collections,stream,hacktoberfest" />
        </attvalues>
      </node>
      <node id="dannypsnl/write-a-programming-language" label="dannypsnl/write-a-programming-language">
        <attvalues>
          <attvalue for="0" value="programming-language,compiler,tutorial" />
        </attvalues>
      </node>
      <node id="kamel-usp/dpasp" label="kamel-usp/dpasp">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,logic-programming,probabilistic-logic-programming,probabilistic-programming,credal-sets,neurosymbolic-ai" />
        </attvalues>
      </node>
      <node id="LogtalkDotOrg/logtalk3" label="LogtalkDotOrg/logtalk3">
        <attvalues>
          <attvalue for="0" value="logtalk,logic-programming,prolog,oop,declarative-language,declarative-programming" />
        </attvalues>
      </node>
      <node id="pythological/unification" label="pythological/unification">
        <attvalues>
          <attvalue for="0" value="unification,multiple-dispatch,python,logic-programming" />
        </attvalues>
      </node>
      <node id="gramlang/gram" label="gramlang/gram">
        <attvalues>
          <attvalue for="0" value="gram,programming-language,compiler,functional-programming" />
        </attvalues>
      </node>
      <node id="2KAbhishek/polyquine" label="2KAbhishek/polyquine">
        <attvalues>
          <attvalue for="0" value="quine,art,polyquine,languages,programming-languages,python,c,javascript,perl,php,programming-language,ruby" />
        </attvalues>
      </node>
      <node id="goodlang/good" label="goodlang/good">
        <attvalues>
          <attvalue for="0" value="programming-language,golang,good,goodlang" />
        </attvalues>
      </node>
      <node id="AthenaFoundation/athena" label="AthenaFoundation/athena">
        <attvalues>
          <attvalue for="0" value="formal-verification,logic,proof-assistant,theorem-proving,natural-deduction,functional-programming,proof-language" />
        </attvalues>
      </node>
      <node id="Lax/Learn-iOS-Swift-by-Examples" label="Lax/Learn-iOS-Swift-by-Examples">
        <attvalues>
          <attvalue for="0" value="swift-language,swift-programming,apple-swift,swift,swift-library,swift-learning,swift-tutorial,ios-swift-demos,programming-language,github-swift,ios,ios-swift" />
        </attvalues>
      </node>
      <node id="ysyesilyurt/Metu-CENG" label="ysyesilyurt/Metu-CENG">
        <attvalues>
          <attvalue for="0" value="coursework,metu-ceng,metu,formal-languages,embedded-systems,networking,computer-organization,operating-systems,logic-design,c,cpp,python,java,haskell,prolog,signal-processing,computer-graphics,opengl,computer-security,programming-languages" />
        </attvalues>
      </node>
      <node id="xieyuheng/logic-db" label="xieyuheng/logic-db">
        <attvalues>
          <attvalue for="0" value="prolog,typescript,logic-programming" />
        </attvalues>
      </node>
      <node id="JohnEarnest/ok" label="JohnEarnest/ok">
        <attvalues>
          <attvalue for="0" value="interpreter,repl,programming-language,livecoding,vector" />
        </attvalues>
      </node>
      <node id="felipefialho/awesome-made-by-brazilians" label="felipefialho/awesome-made-by-brazilians">
        <attvalues>
          <attvalue for="0" value="awesome,awesomebrazil,awesome-brazil,awesome-opensource,made-by-brazilians,stars,programming-language,css,javascript" />
        </attvalues>
      </node>
      <node id="chai2010/gotlang" label="chai2010/gotlang">
        <attvalues>
          <attvalue for="0" value="programming-language,language,gotlang" />
        </attvalues>
      </node>
      <node id="kspalaiologos/malbolge-lisp" label="kspalaiologos/malbolge-lisp">
        <attvalues>
          <attvalue for="0" value="programming-language,lisp,malbolge,esoteric" />
        </attvalues>
      </node>
      <node id="pivovarit/articles" label="pivovarit/articles">
        <attvalues>
          <attvalue for="0" value="java,kotlin,scala,functional-programming" />
        </attvalues>
      </node>
      <node id="stylewarning/deprecated-coalton-prototype" label="stylewarning/deprecated-coalton-prototype">
        <attvalues>
          <attvalue for="0" value="ml,lisp,common-lisp,functional-programming,static-typing" />
        </attvalues>
      </node>
      <node id="arcadio/data-logic" label="arcadio/data-logic">
        <attvalues>
          <attvalue for="0" value="prolog,dsl,metaprogramming,nlp,logic-programming,expert-system,ontology,dcg,term-rewriting,symbolic-ai" />
        </attvalues>
      </node>
      <node id="ciao-lang/ciaopp" label="ciao-lang/ciaopp">
        <attvalues>
          <attvalue for="0" value="prolog,static-analysis,abstract-interpretation,ciao-prolog" />
        </attvalues>
      </node>
      <node id="pveyes/smartass" label="pveyes/smartass">
        <attvalues>
          <attvalue for="0" value="javascript,interview-questions,nodejs,logic,questions" />
        </attvalues>
      </node>
      <node id="utahnlp/consistency" label="utahnlp/consistency">
        <attvalues>
          <attvalue for="0" value="emnlp2019,nli,snli,mnli,consistency,pytorch,bert,mscoco,logic,first-order-logic,loss-functions,regularization" />
        </attvalues>
      </node>
      <node id="cevr/ftld" label="cevr/ftld">
        <attvalues>
          <attvalue for="0" value="functional,functional-programming,javascript,monad,typescript" />
        </attvalues>
      </node>
      <node id="paladin-t/xpl" label="paladin-t/xpl">
        <attvalues>
          <attvalue for="0" value="programming-language,scripting-language,interpreter" />
        </attvalues>
      </node>
      <node id="rvarago/absent" label="rvarago/absent">
        <attvalues>
          <attvalue for="0" value="cpp,cpp17,declarative-programming,functional-programming,monad-library,monadic-interface,optional-chaining,cpp-library,optional-type,nullable-type,modern-cpp" />
        </attvalues>
      </node>
      <node id="program-in-chinese/overview" label="program-in-chinese/overview">
        <attvalues>
          <attvalue for="0" value="chinese,programming-language,styleguide,tutorial,readability,program-in-chinese" />
        </attvalues>
      </node>
      <node id="marcobambini/gravity" label="marcobambini/gravity">
        <attvalues>
          <attvalue for="0" value="virtual-machine,interpreter,json,programming-language,scripting-language,bytecode,pratt-parser,c,objective-c,object-oriented,bridge,fibers,language,closure,portable,gravity" />
        </attvalues>
      </node>
      <node id="prismplp/prism" label="prismplp/prism">
        <attvalues>
          <attvalue for="0" value="probabilistic-models,probabilistic-programming,logic-programming,probabilistic-neural-network" />
        </attvalues>
      </node>
      <node id="pietrobarbiero/pytorch_explain" label="pietrobarbiero/pytorch_explain">
        <attvalues>
          <attvalue for="0" value="logic,pytorch,python,machine-learning,neural-network,deep-learning,explainability,explainable-ai,lens,entropy,sympy,interpretability,interpretable-ai,interpretable-deep-learning,interpretable-machine-learning" />
        </attvalues>
      </node>
      <node id="potassco/clingo" label="potassco/clingo">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,declarative-programming,logic-programming" />
        </attvalues>
      </node>
      <node id="dhruvrajvanshi/hades-lang" label="dhruvrajvanshi/hades-lang">
        <attvalues>
          <attvalue for="0" value="compiler,programming-language" />
        </attvalues>
      </node>
      <node id="CatalaLang/catala" label="CatalaLang/catala">
        <attvalues>
          <attvalue for="0" value="programming-language,legislative-texts" />
        </attvalues>
      </node>
      <node id="adrian-hintze/Snapp" label="adrian-hintze/Snapp">
        <attvalues>
          <attvalue for="0" value="snapp,snap,byob,educational,education,educational-programming-language,typescript,angular,snap-byob,programming-language,programming" />
        </attvalues>
      </node>
      <node id="ehmicky/wild-wild-utils" label="ehmicky/wild-wild-utils">
        <attvalues>
          <attvalue for="0" value="nodejs,javascript,map,json,library,algorithm,typescript,parsing,functional-programming,regex,regexp,filter,glob,regular-expression,path,recursion,data-structures,wildcard,globbing,globstar" />
        </attvalues>
      </node>
      <node id="ErgoAI/ErgoEngine" label="ErgoAI/ErgoEngine">
        <attvalues>
          <attvalue for="0" value="knowledge-reasoning,logic-programming,object-oriented-programming,knowledge-representation-reasoning,ergo-reasoner,ergo,ergoreasoner,reasoner,ergo-engine" />
        </attvalues>
      </node>
      <node id="thma/lambda-ski" label="thma/lambda-ski">
        <attvalues>
          <attvalue for="0" value="functional-programming,haskell,graph-algorithms,graph-reduction,lambda-calculus,combinator,combinatory-logic,compiler,lambda-abstractions,stref,st-monad" />
        </attvalues>
      </node>
      <node id="jogboms/declarative_reactivity_workshop" label="jogboms/declarative_reactivity_workshop">
        <attvalues>
          <attvalue for="0" value="dartlang,declarative-programming,flutter,reactive-programming,reactivity-system,state-management,functional-reactive-programming,transparent-functional-reactive-programming" />
        </attvalues>
      </node>
      <node id="HigherOrderCO/Kind" label="HigherOrderCO/Kind">
        <attvalues>
          <attvalue for="0" value="formality,lambda-calculus,type-theory,proof-language,functional-programming,dependent-types,moonad,proof-languages,theorem-prover" />
        </attvalues>
      </node>
      <node id="yhara/ppap-lang" label="yhara/ppap-lang">
        <attvalues>
          <attvalue for="0" value="ppap,programming-language,esolang,esoteric-language" />
        </attvalues>
      </node>
      <node id="DoctorWkt/CSCv2" label="DoctorWkt/CSCv2">
        <attvalues>
          <attvalue for="0" value="cpu,7400,logic,alu" />
        </attvalues>
      </node>
      <node id="ai4reason/Prover9" label="ai4reason/Prover9">
        <attvalues>
          <attvalue for="0" value="theorem-prover,theorem-proving,logic,model-checking,mathematics,computer-science,first-order-logic" />
        </attvalues>
      </node>
      <node id="cara-lang/compiler" label="cara-lang/compiler">
        <attvalues>
          <attvalue for="0" value="functional-programming,programming-language" />
        </attvalues>
      </node>
      <node id="mthadley/thenews" label="mthadley/thenews">
        <attvalues>
          <attvalue for="0" value="elm,elm-demos,functional-programming,hacker-news-reader" />
        </attvalues>
      </node>
      <node id="alumina-lang/alumina" label="alumina-lang/alumina">
        <attvalues>
          <attvalue for="0" value="compiler,programming-language" />
        </attvalues>
      </node>
      <node id="MathisBullinger/froebel" label="MathisBullinger/froebel">
        <attvalues>
          <attvalue for="0" value="typescript,utility-library,deno,javascript,functional-programming" />
        </attvalues>
      </node>
      <node id="mistupv/SWIPrologZ3" label="mistupv/SWIPrologZ3">
        <attvalues>
          <attvalue for="0" value="api,z3,z3-smt-solver,swi,prolog,c" />
        </attvalues>
      </node>
      <node id="michaelbull/kotlin-coroutines-jdbc" label="michaelbull/kotlin-coroutines-jdbc">
        <attvalues>
          <attvalue for="0" value="kotlin,coroutines,java,jdbc,sql,suspend,transaction,connection,functional,functional-programming,higher-order-functions" />
        </attvalues>
      </node>
      <node id="azur1s/holymer" label="azur1s/holymer">
        <attvalues>
          <attvalue for="0" value="compiler,programming-language,transpiler,rust,proglangs-discord" />
        </attvalues>
      </node>
      <node id="sabertazimi/awesome-notes" label="sabertazimi/awesome-notes">
        <attvalues>
          <attvalue for="0" value="computer-science,notes,css,javascript,html,nodejs,haskell,functional-programming,network,database,algorithm,operating-system,compiler" />
        </attvalues>
      </node>
      <node id="pine-vm/pine" label="pine-vm/pine">
        <attvalues>
          <attvalue for="0" value="elm,full-stack,backend,functional-programming,virtual-machine,event-sourcing,runtime,database,dbms,declarative-programming" />
        </attvalues>
      </node>
      <node id="delonnewman/invokable" label="delonnewman/invokable">
        <attvalues>
          <attvalue for="0" value="ruby,ruby-gem,hash,array,set,functional-programming,functions,objects,ruby-proc,ruby-lambda,currying,memoization,memoize,composition,curry" />
        </attvalues>
      </node>
      <node id="panayi/calculator" label="panayi/calculator">
        <attvalues>
          <attvalue for="0" value="react,redux,ramda,functional-programming,calculator" />
        </attvalues>
      </node>
      <node id="linkdd/lispers" label="linkdd/lispers">
        <attvalues>
          <attvalue for="0" value="interpreter,lisp,lisp-interpreter,programming-language,rust" />
        </attvalues>
      </node>
      <node id="OpenLyl/Water" label="OpenLyl/Water">
        <attvalues>
          <attvalue for="0" value="composable,composable-architecture,redux,state-management,swiftui,undirectional-data-flow,composition,observation,swift,architecture,functional-components,functional-programming" />
        </attvalues>
      </node>
      <node id="MostlyAdequate/mostly-adequate-guide" label="MostlyAdequate/mostly-adequate-guide">
        <attvalues>
          <attvalue for="0" value="javascript,functional-programming,tutorial,reactive-programming" />
        </attvalues>
      </node>
      <node id="newca12/scala-atp" label="newca12/scala-atp">
        <attvalues>
          <attvalue for="0" value="scala,scala-port,logic" />
        </attvalues>
      </node>
      <node id="ipavlic/apex-fp" label="ipavlic/apex-fp">
        <attvalues>
          <attvalue for="0" value="salesforce,apex,functional-programming,forcedotcom,salesforce-developers,salesforcedx,salesforce-api" />
        </attvalues>
      </node>
      <node id="agustingianni/Utilities" label="agustingianni/Utilities">
        <attvalues>
          <attvalue for="0" value="ida,idapython,scripts,arm,prolog,vulndev,research,exploiting" />
        </attvalues>
      </node>
      <node id="wasp-lang/wasp" label="wasp-lang/wasp">
        <attvalues>
          <attvalue for="0" value="wasp,web-app,programming-language,compiler,react,node,prisma,hacktoberfest,javascript,haskell,open-source" />
        </attvalues>
      </node>
      <node id="thelang-io/the" label="thelang-io/the">
        <attvalues>
          <attvalue for="0" value="programming-language,language,linux,macos,the,windows" />
        </attvalues>
      </node>
      <node id="TechnoTanuki/Python_BMP" label="TechnoTanuki/Python_BMP">
        <attvalues>
          <attvalue for="0" value="bmp,graphics,image-processing,maths,nodependence,bitfont,fractals,3d-solids,3d-surface,pure-python,2d-graphics,3d-graphics,gradient-colors,bitblt,esoteric,platonic-solids,functional-programming,xy-charts,vector-math,strange-attractors" />
        </attvalues>
      </node>
      <node id="destel/rill" label="destel/rill">
        <attvalues>
          <attvalue for="0" value="concurrency,functional-programming,goroutines,channels,generics,go,golang,pipeline,streaming" />
        </attvalues>
      </node>
      <node id="life4/genesis" label="life4/genesis">
        <attvalues>
          <attvalue for="0" value="golang,generics,generic-programming,functional-programming,elixir,go,slice,goroutine,generic,enum,erlang,fp,map,maps,slices" />
        </attvalues>
      </node>
      <node id="shootismoke/mobile-app" label="shootismoke/mobile-app">
        <attvalues>
          <attvalue for="0" value="cigarettes,pollution,expo,functional-programming,climate-change,sustainability,global-warming,aqi,air-pollution,react-native,hacktoberfest" />
        </attvalues>
      </node>
      <node id="octree/MarkRight" label="octree/MarkRight">
        <attvalues>
          <attvalue for="0" value="markdown,parser,swift,parsec,functional-programming,macos,ios" />
        </attvalues>
      </node>
      <node id="AIRTucha/amonad" label="AIRTucha/amonad">
        <attvalues>
          <attvalue for="0" value="typescript,maybe,option,monad,fp,functional-programming,await,async-await,javascript,ts,js,error-handling" />
        </attvalues>
      </node>
      <node id="serradura/request_via" label="serradura/request_via">
        <attvalues>
          <attvalue for="0" value="ruby,http,http-client,functional,functional-programming,nethttp,uri" />
        </attvalues>
      </node>
      <node id="Farfi55/CookedUp" label="Farfi55/CookedUp">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,game,overcooked,unical,unity,unity3d" />
        </attvalues>
      </node>
      <node id="sharkdp/numbat" label="sharkdp/numbat">
        <attvalues>
          <attvalue for="0" value="calculator,physics,programming-language,statically-typed,terminal-based,units,web-app" />
        </attvalues>
      </node>
      <node id="morrow1nd/luax" label="morrow1nd/luax">
        <attvalues>
          <attvalue for="0" value="lua,programming-language,interpreter,luax-programming-language" />
        </attvalues>
      </node>
      <node id="spamegg1/Epp-Discrete-Math-5th-solutions" label="spamegg1/Epp-Discrete-Math-5th-solutions">
        <attvalues>
          <attvalue for="0" value="algorithmic-complexity,big-o,circuits,computer-science,counting,discrete-mathematics,finite-state-automata,functions,graphs,logic,number-theory,probability,proofs,regular-expressions,relations,sets,trees" />
        </attvalues>
      </node>
      <node id="python-effect/effect" label="python-effect/effect">
        <attvalues>
          <attvalue for="0" value="functional-programming,python,effects,free-monad" />
        </attvalues>
      </node>
      <node id="neko-kai/fp-dictionary" label="neko-kai/fp-dictionary">
        <attvalues>
          <attvalue for="0" value="fp,category-theory,functional-programming" />
        </attvalues>
      </node>
      <node id="b-data/jupyterlab-python-docker-stack" label="b-data/jupyterlab-python-docker-stack">
        <attvalues>
          <attvalue for="0" value="docker,data-science,jupyterlab,multi-arch,python,cuda,gpu,nvidia,code-oss,ai,ml,language,programming-language,container,ide,vscode,podman,amd64,arm64,machine-learning" />
        </attvalues>
      </node>
      <node id="dragonteros/chaltteok" label="dragonteros/chaltteok">
        <attvalues>
          <attvalue for="0" value="korean,programming-language" />
        </attvalues>
      </node>
      <node id="Leocardoso94/Free-Courses" label="Leocardoso94/Free-Courses">
        <attvalues>
          <attvalue for="0" value="free,course,free-courses,learning,programming-language,programming-courses,learn-to-code,learn,courses,education,study,react,hacktoberfest" />
        </attvalues>
      </node>
      <node id="lab-v2/pyreason" label="lab-v2/pyreason">
        <attvalues>
          <attvalue for="0" value="logic,logic-programming,machine-learning,neurosymbolic,python,temporal-logic" />
        </attvalues>
      </node>
      <node id="fermarsan/aixt" label="fermarsan/aixt">
        <attvalues>
          <attvalue for="0" value="compiled-language,microcontrollers,programming-language,transcompiler,transpiler,v-like,v-programming-language,vlang" />
        </attvalues>
      </node>
      <node id="Darksecond/lox" label="Darksecond/lox">
        <attvalues>
          <attvalue for="0" value="lox,rust,programming-language,lox-language" />
        </attvalues>
      </node>
      <node id="vkhorikov/CSharpFunctionalExtensions" label="vkhorikov/CSharpFunctionalExtensions">
        <attvalues>
          <attvalue for="0" value="csharp,entity,functional-programming,maybe-monad,result,value-object" />
        </attvalues>
      </node>
      <node id="FrancisBFTC/KiddieOS_Development" label="FrancisBFTC/KiddieOS_Development">
        <attvalues>
          <attvalue for="0" value="assembly-x86,kernel,operating-system,operating-system-kernel,osdev,osdev-projects,programming-language,programs,kiddieos" />
        </attvalues>
      </node>
      <node id="crossroad0201/ddd-on-scala" label="crossroad0201/ddd-on-scala">
        <attvalues>
          <attvalue for="0" value="scala,ddd,onion-architecture,hexagonal-architecture,object-oriented,functional-programming,clean-architecture" />
        </attvalues>
      </node>
      <node id="hauxir/haskell-tetris" label="hauxir/haskell-tetris">
        <attvalues>
          <attvalue for="0" value="haskell,tetris,ncurses,haskell-ncurses,functional-programming" />
        </attvalues>
      </node>
      <node id="kudos-dude/react-best-practices" label="kudos-dude/react-best-practices">
        <attvalues>
          <attvalue for="0" value="javascirpt,reactjs,functional-programming,architecture,patterns,best-practices,starter-project,beginner,advanced,redux,libraries,articles,react" />
        </attvalues>
      </node>
      <node id="shrugs/fauxgaux" label="shrugs/fauxgaux">
        <attvalues>
          <attvalue for="0" value="go,functional-programming" />
        </attvalues>
      </node>
      <node id="eazybytes/java" label="eazybytes/java">
        <attvalues>
          <attvalue for="0" value="collections-framework,functional-programming,java,java-8,java21,lambda-expressions,multithreading,streams-api" />
        </attvalues>
      </node>
      <node id="RodrigoDornelles/3bc-lang" label="RodrigoDornelles/3bc-lang">
        <attvalues>
          <attvalue for="0" value="virtual-machine,language,arduino,compiler,microcontrollers,programming-language,esoteric-language,interpreter,punchcard,3bc-lang" />
        </attvalues>
      </node>
      <node id="ELLIOTTCABLE/Pratchett.js" label="ELLIOTTCABLE/Pratchett.js">
        <attvalues>
          <attvalue for="0" value="programming-language,distributed-systems,parallel-computing,javascript" />
        </attvalues>
      </node>
      <node id="rla/simple-template" label="rla/simple-template">
        <attvalues>
          <attvalue for="0" value="template-engine,swi-prolog" />
        </attvalues>
      </node>
      <node id="ThetaLang/Theta" label="ThetaLang/Theta">
        <attvalues>
          <attvalue for="0" value="compilers,languages,functional-programming,parsers,type-safe,wasm,webassembly,hacktoberfest" />
        </attvalues>
      </node>
      <node id="LaMatemaga/CF-Matematicas" label="LaMatemaga/CF-Matematicas">
        <attvalues>
          <attvalue for="0" value="discrete-mathematics,spanish,programming-exercises,logic,set-theory,fundamentals-of-programming,graph-theory,mathematics,codigo-facilito" />
        </attvalues>
      </node>
      <node id="danielnixon/eslint-plugin-total-functions" label="danielnixon/eslint-plugin-total-functions">
        <attvalues>
          <attvalue for="0" value="typescript,eslint,eslint-plugin,functional-programming,type-safety,partial-functions" />
        </attvalues>
      </node>
      <node id="rhysd/wain" label="rhysd/wain">
        <attvalues>
          <attvalue for="0" value="webassembly,wasm,wat,interpreter,programming-language" />
        </attvalues>
      </node>
      <node id="dewey92/typed-fp-good-reads" label="dewey92/typed-fp-good-reads">
        <attvalues>
          <attvalue for="0" value="functional-programming,haskell,purescript,types" />
        </attvalues>
      </node>
      <node id="jondot/awesome-aha" label="jondot/awesome-aha">
        <attvalues>
          <attvalue for="0" value="software,tips,academic-paper,programming-language,engineering,awesome-list" />
        </attvalues>
      </node>
      <node id="hmemcpy/milewski-ctfp-pdf" label="hmemcpy/milewski-ctfp-pdf">
        <attvalues>
          <attvalue for="0" value="haskell,category-theory,functional-programming,pdf,latex,cpp,scala,ocaml" />
        </attvalues>
      </node>
      <node id="bulwarkjs/safedom" label="bulwarkjs/safedom">
        <attvalues>
          <attvalue for="0" value="functional-programming,side-effects,dom-manipulation" />
        </attvalues>
      </node>
      <node id="functionaljava/functionaljava" label="functionaljava/functionaljava">
        <attvalues>
          <attvalue for="0" value="algebra,algebraic-data-types,effects,functional-programming,java,monad,monoid,optics,persistent-data-structure,property-based-testing" />
        </attvalues>
      </node>
      <node id="leek-wars/leekscript-next" label="leek-wars/leekscript-next">
        <attvalues>
          <attvalue for="0" value="leek-wars,jit,langage,cpp,llvm,programming-language,leekwars,compiler" />
        </attvalues>
      </node>
      <node id="ColemanGariety/derivation-machine" label="ColemanGariety/derivation-machine">
        <attvalues>
          <attvalue for="0" value="logic,calculus,premise,homework,conclusion" />
        </attvalues>
      </node>
      <node id="tu-lang/tu" label="tu-lang/tu">
        <attvalues>
          <attvalue for="0" value="linux,programming-language,amd64,asmer,linker,assembly,dynamic-programming,native,static-programming,asynchronous,asyncio,coroutines" />
        </attvalues>
      </node>
      <node id="abuseofnotation/vanilla-fp" label="abuseofnotation/vanilla-fp">
        <attvalues>
          <attvalue for="0" value="functional-components,functional-programming,functional-react,functional-reactive-programming" />
        </attvalues>
      </node>
      <node id="janit/spedescript" label="janit/spedescript">
        <attvalues>
          <attvalue for="0" value="spede,spedescript,quantum-computing,programming-language,q-sharp,cpp" />
        </attvalues>
      </node>
      <node id="louthy/language-ext" label="louthy/language-ext">
        <attvalues>
          <attvalue for="0" value="c-sharp,functional-languages,monads,monad-transformers,immutable-collections,higher-kinded-types,language-ext,f-sharp,immutable-types,monad,bcl,ad-hoc-polymorphism,functional-programming,lenses,records,structural-equality,functor,applicative,semigroup,monoid" />
        </attvalues>
      </node>
      <node id="grame-cncm/faust" label="grame-cncm/faust">
        <attvalues>
          <attvalue for="0" value="faust,dsp,audio,compiler,wasm,c,cpp,llvm,functional-programming,rust,dlang,c-plus-plus,csharp,julia,julia-language,jax,cmajor,jsfx,rnbo" />
        </attvalues>
      </node>
      <node id="esoterra/claw-lang" label="esoterra/claw-lang">
        <attvalues>
          <attvalue for="0" value="compiler,programming-language,webassembly" />
        </attvalues>
      </node>
      <node id="Narasimha1997/boson-lang" label="Narasimha1997/boson-lang">
        <attvalues>
          <attvalue for="0" value="compiler,interpreter,programming-language,rust,cpp,dynamic-typing,scripting-language" />
        </attvalues>
      </node>
      <node id="astrolang/astro" label="astrolang/astro">
        <attvalues>
          <attvalue for="0" value="astro,programming-language,wasm,webassembly,javascript,language-features,python,numerical-computation" />
        </attvalues>
      </node>
      <node id="DSLsofMath/DSLsofMath" label="DSLsofMath/DSLsofMath">
        <attvalues>
          <attvalue for="0" value="mathematics,language,functional-programming,computer-science,course" />
        </attvalues>
      </node>
      <node id="zio/zio-telemetry" label="zio/zio-telemetry">
        <attvalues>
          <attvalue for="0" value="zio,scala,functional-programming,opencensus,opentelemetry,opentracing" />
        </attvalues>
      </node>
      <node id="artagnon/rhine-ml" label="artagnon/rhine-ml">
        <attvalues>
          <attvalue for="0" value="programming-language,ocaml,llvm,compiler" />
        </attvalues>
      </node>
      <node id="kyclark/command-line-rust" label="kyclark/command-line-rust">
        <attvalues>
          <attvalue for="0" value="rust,cli,command-line,programming-language" />
        </attvalues>
      </node>
      <node id="mndrix/func" label="mndrix/func">
        <attvalues>
          <attvalue for="0" value="prolog,functions" />
        </attvalues>
      </node>
      <node id="artichoke/artichoke" label="artichoke/artichoke">
        <attvalues>
          <attvalue for="0" value="artichoke,ruby,language,programming-language,rust,rust-application,ruby-language,rust-crate,webassembly,wasm" />
        </attvalues>
      </node>
      <node id="MQuy/mlang" label="MQuy/mlang">
        <attvalues>
          <attvalue for="0" value="haskell,typescript,programming-language,cpp,compiler,c99,interpreter" />
        </attvalues>
      </node>
      <node id="mieszkosabo/tartak" label="mieszkosabo/tartak">
        <attvalues>
          <attvalue for="0" value="functional-programming,programing-language,type-level,type-level-programming,types,typescript" />
        </attvalues>
      </node>
      <node id="gooofy/zamia-prolog" label="gooofy/zamia-prolog">
        <attvalues>
          <attvalue for="0" value="prolog,prolog-dialect,python,logic-programming,declarative-language,embeddable" />
        </attvalues>
      </node>
      <node id="MaximovInk/NodeLogic" label="MaximovInk/NodeLogic">
        <attvalues>
          <attvalue for="0" value="logic-gates,logic-programming,unity,unity2d,unity2d-game" />
        </attvalues>
      </node>
      <node id="rametta/pratica" label="rametta/pratica">
        <attvalues>
          <attvalue for="0" value="functional-programming,monads,monoids,utilities,fp,typescript" />
        </attvalues>
      </node>
      <node id="mani-language/Mani" label="mani-language/Mani">
        <attvalues>
          <attvalue for="0" value="language,parser,lexer,programming-language,new,standard-library,hacktoberfest,interpreted-programming-language,interpreter,general-purpose,general-programming,help-wanted" />
        </attvalues>
      </node>
      <node id="viktor-shepel/frunzik" label="viktor-shepel/frunzik">
        <attvalues>
          <attvalue for="0" value="c,library,functional-programming,primitives" />
        </attvalues>
      </node>
      <node id="p-org/P" label="p-org/P">
        <attvalues>
          <attvalue for="0" value="asynchronous,programming-language,systematic-testing,event-driven,robotics,p,distributed-systems,state-machine,model-checking,formal-methods,formal-verification" />
        </attvalues>
      </node>
      <node id="aaronjanse/asciidots" label="aaronjanse/asciidots">
        <attvalues>
          <attvalue for="0" value="esoteric-language,ascii-art,esolang,python3,python,programming-language,asciidots" />
        </attvalues>
      </node>
      <node id="krzysztofsroga/solang" label="krzysztofsroga/solang">
        <attvalues>
          <attvalue for="0" value="programming-language,kotlin,kotlindsl,esoteric,codegolf,programming,compiler,stackoverflow,example-centric,esolang,snippets" />
        </attvalues>
      </node>
      <node id="xebia-functional/macroid" label="xebia-functional/macroid">
        <attvalues>
          <attvalue for="0" value="functional-programming,android,scala-macros,user-interface,gui,dsl,abstraction,composability" />
        </attvalues>
      </node>
      <node id="samchon/shopping-backend" label="samchon/shopping-backend">
        <attvalues>
          <attvalue for="0" value="commerce,functional-programming,nestia,nestjs,shopping,educational-project,prisma,typia,tdd,e2e,fp,fp-ts" />
        </attvalues>
      </node>
      <node id="charlax/professional-programming" label="charlax/professional-programming">
        <attvalues>
          <attvalue for="0" value="read-articles,programmer,professional,scalability,concepts,documentation,lessons-learned,engineer,programming-language,learning,architecture,computer-science,software-engineering" />
        </attvalues>
      </node>
      <node id="tlaceby/guide-to-interpreters-series" label="tlaceby/guide-to-interpreters-series">
        <attvalues>
          <attvalue for="0" value="ast,ast-parser,javascript,lexer,programming-language,tokenizer,typescript" />
        </attvalues>
      </node>
      <node id="HussainAther/awesome-philosophy" label="HussainAther/awesome-philosophy">
        <attvalues>
          <attvalue for="0" value="awesome-list,philosophy,ethics,aesthetics,logic,epistemology,history-of-philosophy,philosophy-of-science,philosophy-of-mind" />
        </attvalues>
      </node>
      <node id="MatrixFun/AutoXL" label="MatrixFun/AutoXL">
        <attvalues>
          <attvalue for="0" value="excel,excel-formula,excel-formulas,excel-vba,formulas,microsoft-excel,spreadsheets,lambda,lambda-functions,office,office-addin,functional-programming,functional-programming-examples,functional-programming-language" />
        </attvalues>
      </node>
      <node id="voltbras/ts-ocpp" label="voltbras/ts-ocpp">
        <attvalues>
          <attvalue for="0" value="ocpp,chargepoint,typescript,electric-vehicles,functional-programming" />
        </attvalues>
      </node>
      <node id="paulopez78/awesome-books" label="paulopez78/awesome-books">
        <attvalues>
          <attvalue for="0" value="ddd,microservices,event-driven,event-sourcing,cqrs,functional-programming" />
        </attvalues>
      </node>
      <node id="rsms/wlang" label="rsms/wlang">
        <attvalues>
          <attvalue for="0" value="compiler,programming-language,assembler" />
        </attvalues>
      </node>
      <node id="ehmicky/test-each" label="ehmicky/test-each">
        <attvalues>
          <attvalue for="0" value="testing,test,test-automation,data-driven,data-driven-tests,data-driven-testing,fuzzing,fuzz-testing,fuzz,cartesian,snapshot-testing,code-quality,es6,javascript,nodejs,library,iterable,foreach,functional-programming,typescript" />
        </attvalues>
      </node>
      <node id="whitemech/flloat" label="whitemech/flloat">
        <attvalues>
          <attvalue for="0" value="logic,linear-temporal-logic,propositional-logic,automata,ltlf,ldlf" />
        </attvalues>
      </node>
      <node id="techgaun/awesome-programming-presentations" label="techgaun/awesome-programming-presentations">
        <attvalues>
          <attvalue for="0" value="awesome,talks,programming-language,elixir,javascript,watch,python,cloud-computing,paradigm,video,conference-talk,awesome-list,hacktoberfest,erlang,programming-languages,database-systems,microservices" />
        </attvalues>
      </node>
      <node id="zio-archive/zio-akka-cluster" label="zio-archive/zio-akka-cluster">
        <attvalues>
          <attvalue for="0" value="scala,akka,zio,functional-programming" />
        </attvalues>
      </node>
      <node id="respawn-app/ApiResult" label="respawn-app/ApiResult">
        <attvalues>
          <attvalue for="0" value="android,arrow,arrow-kt,error-handling,functional-programming,kmm,kmp,kotlin,monad,result,validation" />
        </attvalues>
      </node>
      <node id="alexanderskulikov/discrete-math-python-scripts" label="alexanderskulikov/discrete-math-python-scripts">
        <attvalues>
          <attvalue for="0" value="python,mathematics,discrete-mathematics,combinatorics,recursion,induction,algorithms,bayes,logic,probability,python3,dynamic-programming,combinatorics-and-probability,cryptography,number-theory,enumeration,graph-algorithms,graphs" />
        </attvalues>
      </node>
      <node id="utahnlp/structured_tuning_srl" label="utahnlp/structured_tuning_srl">
        <attvalues>
          <attvalue for="0" value="semantic-role-labeling,srl,logic,loss-functions,structured,regularization,roberta,pytorch,finetuning" />
        </attvalues>
      </node>
      <node id="sger/RustBooks" label="sger/RustBooks">
        <attvalues>
          <attvalue for="0" value="rust-language,rust-book,programming-rust,programming-language" />
        </attvalues>
      </node>
      <node id="pakoito/RxTuples" label="pakoito/RxTuples">
        <attvalues>
          <attvalue for="0" value="android,functional-programming,java" />
        </attvalues>
      </node>
      <node id="nlsynth/karuta" label="nlsynth/karuta">
        <attvalues>
          <attvalue for="0" value="verilog,iroha,fpga,programming-language" />
        </attvalues>
      </node>
      <node id="jcouyang/jujiu" label="jcouyang/jujiu">
        <attvalues>
          <attvalue for="0" value="scala,functional-programming,cache,caffeine,birds" />
        </attvalues>
      </node>
      <node id="mclintprojects/ideabag2" label="mclintprojects/ideabag2">
        <attvalues>
          <attvalue for="0" value="xamarin-android,xamarin,csharp,mobile-app,kotlin-android,kotlin,vuejs2,vue,room-persistence-library,databinding,android,programming-language,ideas" />
        </attvalues>
      </node>
      <node id="HKUNLP/SymGen" label="HKUNLP/SymGen">
        <attvalues>
          <attvalue for="0" value="bash,codex,data-generation,mtop,prolog,python,sql,symbolic-language" />
        </attvalues>
      </node>
      <node id="barn-lang/barn" label="barn-lang/barn">
        <attvalues>
          <attvalue for="0" value="programming,programming-language,compilator,compilator-development,programming-language-development" />
        </attvalues>
      </node>
      <node id="mazeppa-dev/mazeppa" label="mazeppa-dev/mazeppa">
        <attvalues>
          <attvalue for="0" value="compiler,functional,functional-programming,language,optimization,performance,programming-language,supercompiler,intermediate-representation,symbolic-execution,program-analysis,static-analysis" />
        </attvalues>
      </node>
      <node id="mcsoto/cosmos" label="mcsoto/cosmos">
        <attvalues>
          <attvalue for="0" value="interpreter,prolog,cosmos,language,functors,logic-programming,composite-types,cosmos-language" />
        </attvalues>
      </node>
      <node id="KamchatkaLtd/okasaki" label="KamchatkaLtd/okasaki">
        <attvalues>
          <attvalue for="0" value="functional-programming,okasaki,deque,scala,trie,data-structures,purely-functional-data-structures" />
        </attvalues>
      </node>
      <node id="kitech/cygo" label="kitech/cygo">
        <attvalues>
          <attvalue for="0" value="programming-language,golang,coroutine,mini-golang-binary-size" />
        </attvalues>
      </node>
      <node id="SimonBuxx/Linkuit-Studio" label="SimonBuxx/Linkuit-Studio">
        <attvalues>
          <attvalue for="0" value="logic,simulator,simulation,cpu-design,logic-simulator,logic-simulation,logic-gates,logic-circuit,logic-circuit-simulator,logiccircuit" />
        </attvalues>
      </node>
      <node id="ssledz/bash-fun" label="ssledz/bash-fun">
        <attvalues>
          <attvalue for="0" value="bash,functional-programming" />
        </attvalues>
      </node>
      <node id="AlDanial/cloc" label="AlDanial/cloc">
        <attvalues>
          <attvalue for="0" value="cloc,count-lines,programming-language" />
        </attvalues>
      </node>
      <node id="evoldoers/biomake" label="evoldoers/biomake">
        <attvalues>
          <attvalue for="0" value="workflows,makefiles,gnu-make,swi-prolog,prolog,bioinformatics" />
        </attvalues>
      </node>
      <node id="Chymyst/curryhoward" label="Chymyst/curryhoward">
        <attvalues>
          <attvalue for="0" value="curry-howard-isomorphism,intuitionistic-logic,theorem-prover,scala,functional-programming,code-generation,scala-macros,lambda-terms,lambda-calculus,automated-theorem-provers" />
        </attvalues>
      </node>
      <node id="Wonder-Technology/Wonder-Editor" label="Wonder-Technology/Wonder-Editor">
        <attvalues>
          <attvalue for="0" value="wonder,editor,webgl,reasonml,3d,functional-programming" />
        </attvalues>
      </node>
      <node id="neugram/ng" label="neugram/ng">
        <attvalues>
          <attvalue for="0" value="programming-language,golang,scripting-language" />
        </attvalues>
      </node>
      <node id="logsem/clutch" label="logsem/clutch">
        <attvalues>
          <attvalue for="0" value="coq,couplings,iris,probabilistic,relational,asynchronous,higher-order,logic,separation-logic" />
        </attvalues>
      </node>
      <node id="c-villain/StoriesTutorual" label="c-villain/StoriesTutorual">
        <attvalues>
          <attvalue for="0" value="mvvm,blueprint,opencombine,instagram,instagram-stories,declarative-ui,declarative-programming,instagram-story,ios,ipados" />
        </attvalues>
      </node>
      <node id="nikolaydubina/go-hackers-delight" label="nikolaydubina/go-hackers-delight">
        <attvalues>
          <attvalue for="0" value="binary,book,c,logic,assembly,showcase,risc,bits" />
        </attvalues>
      </node>
      <node id="neogeodev/NeoGeoFPGA-sim" label="neogeodev/NeoGeoFPGA-sim">
        <attvalues>
          <attvalue for="0" value="neogeo,fpga,verilog,logic,snk,arcade,mvs,chip,simulation,neo-geo" />
        </attvalues>
      </node>
      <node id="ali77gh/Chap" label="ali77gh/Chap">
        <attvalues>
          <attvalue for="0" value="interpreter,programming-language,wasm" />
        </attvalues>
      </node>
      <node id="namin/clpset-miniKanren" label="namin/clpset-miniKanren">
        <attvalues>
          <attvalue for="0" value="scheme,minikanren,prolog,logic-programming,constraints,paper-implementations" />
        </attvalues>
      </node>
      <node id="stanfordhaskell/cs43" label="stanfordhaskell/cs43">
        <attvalues>
          <attvalue for="0" value="haskell,functional-programming,course-materials,category-theory" />
        </attvalues>
      </node>
      <node id="dubesar/Ultimate-Java-Resources" label="dubesar/Ultimate-Java-Resources">
        <attvalues>
          <attvalue for="0" value="hacktoberfest2019,data-structures,algorithms,java,hacktoberfest2020,computer-science,wikipedia,programming-language,dynamic,search-algorithm,dynamic-programming,android,android-development,hacktoberfest,learn,tutorial,java-programming,hacktoberfest2021,hacktoberfest-starter" />
        </attvalues>
      </node>
      <node id="clarkzjw/one-two-three...infinity" label="clarkzjw/one-two-three...infinity">
        <attvalues>
          <attvalue for="0" value="language,programming-language" />
        </attvalues>
      </node>
      <node id="ixjf/logic-rs" label="ixjf/logic-rs">
        <attvalues>
          <attvalue for="0" value="logic,rust,parser,formulas,relational,predicate,first,order,first-order,truth-tree,consistency,formal-validity,validity,contingency,contradiction,tautology,pest,wasm" />
        </attvalues>
      </node>
      <node id="chermehdi/comet" label="chermehdi/comet">
        <attvalues>
          <attvalue for="0" value="interpreter,golang,programming-language,educational" />
        </attvalues>
      </node>
      <node id="rafbcampos/naive_functional_programming" label="rafbcampos/naive_functional_programming">
        <attvalues>
          <attvalue for="0" value="functional-programming,category-theory,typescript" />
        </attvalues>
      </node>
      <node id="ParhamP/Natural_Logic_Interpreter" label="ParhamP/Natural_Logic_Interpreter">
        <attvalues>
          <attvalue for="0" value="logic-programming,natural-language,logical-knowledge-inference,logical-knowledge-representation,logic-design" />
        </attvalues>
      </node>
      <node id="gluon-lang/gluon" label="gluon-lang/gluon">
        <attvalues>
          <attvalue for="0" value="rust,repl,programming-language,type-inference,functional,embeddable,gluon,compiler,language" />
        </attvalues>
      </node>
      <node id="claytonsilva/nodejs-hexagonal-boilerplate" label="claytonsilva/nodejs-hexagonal-boilerplate">
        <attvalues>
          <attvalue for="0" value="functional-programming,nodejs,hexagonal-architecture,aws-lambda,terraform,localstack" />
        </attvalues>
      </node>
      <node id="pipe01/LogicScript" label="pipe01/LogicScript">
        <attvalues>
          <attvalue for="0" value="dsl,logic-programming,verilog" />
        </attvalues>
      </node>
      <node id="quickstrom/ltl-visualizer" label="quickstrom/ltl-visualizer">
        <attvalues>
          <attvalue for="0" value="logic,temporal-operators,visualization" />
        </attvalues>
      </node>
      <node id="bigby-the-wolf/WebApiTest" label="bigby-the-wolf/WebApiTest">
        <attvalues>
          <attvalue for="0" value="functional-programming,dependency-rejection,type-providers,f-sharp" />
        </attvalues>
      </node>
      <node id="program-spiritual/KongFuOfArchitect" label="program-spiritual/KongFuOfArchitect">
        <attvalues>
          <attvalue for="0" value="architect,architecture-guidelines,java,javascript,nodejs,perl,golang,go,python,erlang,rust,c,csharp,object-c,scala,swift,c-sharp,prolog,lisp" />
        </attvalues>
      </node>
      <node id="fenwii/LibraryBookSearchEngine" label="fenwii/LibraryBookSearchEngine">
        <attvalues>
          <attvalue for="0" value="library,lib,book,books,search-engine,197countries,students,student,university,college,academic,research,science,learning,teaching,thinking,logic,bookengine,librarysearchengine" />
        </attvalues>
      </node>
      <node id="benjamn/immutable-tuple" label="benjamn/immutable-tuple">
        <attvalues>
          <attvalue for="0" value="immutable,immutability,tuple,tuples,persistent,persistent-data-structure,functional,functional-programming,internalization,memoization,equality,garbage-collection,equality-test,memory-leak" />
        </attvalues>
      </node>
      <node id="mybatis/mybatis-dynamic-sql" label="mybatis/mybatis-dynamic-sql">
        <attvalues>
          <attvalue for="0" value="mybatis,mybatis3,spring-jdbctemplate,sql-generation,functional-programming,kotlin,kotlin-dsl,java-8,sql-dsl,sql-generator" />
        </attvalues>
      </node>
      <node id="rush-rs/rush" label="rush-rs/rush">
        <attvalues>
          <attvalue for="0" value="compiler,compiler-construction,language,programming-language,research-paper,research-project" />
        </attvalues>
      </node>
      <node id="ilaspltd/ILASP-releases" label="ilaspltd/ILASP-releases">
        <attvalues>
          <attvalue for="0" value="logic-based-learning,inductive-logic-programming,artificial-intelligence,machine-learning,explainable-ml,answer-set-programming,logic-programming,ilasp" />
        </attvalues>
      </node>
      <node id="mikeroyal/NixOS-Guide" label="mikeroyal/NixOS-Guide">
        <attvalues>
          <attvalue for="0" value="nix,nixos,nixos-module,nix-flake,nixops,nixos-expression,nixpkgs,nix-darwin,nix-shell,nixos-config,nix-packages,declarative-language,functional-programming,sre,nixos-service,self-hosting,apple-silicon,wsl2,libadwaita,home-manager" />
        </attvalues>
      </node>
      <node id="agentjido/jido" label="agentjido/jido">
        <attvalues>
          <attvalue for="0" value="agent,elixir,functional-programming,workflow,ai,artificial-intelligence,event-driven-architecture,orchestration" />
        </attvalues>
      </node>
      <node id="miniBloq/v0.83" label="miniBloq/v0.83">
        <attvalues>
          <attvalue for="0" value="programming-language,robotics,arduino" />
        </attvalues>
      </node>
      <node id="JiachenRen/Kelvin" label="JiachenRen/Kelvin">
        <attvalues>
          <attvalue for="0" value="computer-algebra-system,programming-language,calculator,ide,symbolic-computation,cli-calculator,cas,kelvin-cas" />
        </attvalues>
      </node>
      <node id="The-NextGen-Project/jet" label="The-NextGen-Project/jet">
        <attvalues>
          <attvalue for="0" value="compilers,open-source-project,open-source,programming-language,nextgen,programming-languages,latest,fastest,turbo,software,jet,linux,contribute-repository,contribute,compiler,compiler-design,compiler-optimization" />
        </attvalues>
      </node>
      <node id="michaelbull/kotlin-retry" label="michaelbull/kotlin-retry">
        <attvalues>
          <attvalue for="0" value="kotlin,retry,io,high-order-function,functional-programming,backoff,jitter,kotlin-multiplatform" />
        </attvalues>
      </node>
      <node id="lettier/purescript-pop" label="lettier/purescript-pop">
        <attvalues>
          <attvalue for="0" value="frp,functional-reactive-programming,purescript,javascript,functional-programming,purescript-demo,web-development,front-end,purescript-behaviors,interactive,reactive,reactive-programming,haskell,react,functional-programming-examples,front-end-development,front-end-framework,javascript-framework,demo-app,demo" />
        </attvalues>
      </node>
      <node id="AmrSaber/async-short-circuit" label="AmrSaber/async-short-circuit">
        <attvalues>
          <attvalue for="0" value="js,javascript,async,promise,promises,and,or,logic,short,circuit" />
        </attvalues>
      </node>
      <node id="TimTeaFan/loopurrr" label="TimTeaFan/loopurrr">
        <attvalues>
          <attvalue for="0" value="r,purrr,functional-programming" />
        </attvalues>
      </node>
      <node id="getify/FPO" label="getify/FPO">
        <attvalues>
          <attvalue for="0" value="library,functional-programming,functional-js,javascript" />
        </attvalues>
      </node>
      <node id="philbooth/tryer" label="philbooth/tryer">
        <attvalues>
          <attvalue for="0" value="functional-programming,iteration,retry-intervals" />
        </attvalues>
      </node>
      <node id="yoohaemin/decrel" label="yoohaemin/decrel">
        <attvalues>
          <attvalue for="0" value="caliban-graphql,cats,functional-programming,property-based-testing,relations,scala,scalacheck,zio,zio-test,caliban" />
        </attvalues>
      </node>
      <node id="madlambda/nash" label="madlambda/nash">
        <attvalues>
          <attvalue for="0" value="nash,shell,programming-language,nash-scripts" />
        </attvalues>
      </node>
      <node id="gopl-zh/gopl-zh.github.com" label="gopl-zh/gopl-zh.github.com">
        <attvalues>
          <attvalue for="0" value="programming-language" />
        </attvalues>
      </node>
      <node id="VirenMohindra/Fratboi" label="VirenMohindra/Fratboi">
        <attvalues>
          <attvalue for="0" value="programming-language,millennials" />
        </attvalues>
      </node>
      <node id="movsb/taolang" label="movsb/taolang">
        <attvalues>
          <attvalue for="0" value="tao,taolang,programming-language,javascript" />
        </attvalues>
      </node>
      <node id="aNNiMON/Own-Programming-Language-Tutorial" label="aNNiMON/Own-Programming-Language-Tutorial">
        <attvalues>
          <attvalue for="0" value="tutorial,java,parser,lexer,interpreted-programming-language,interpreter,programming-language" />
        </attvalues>
      </node>
      <node id="ice1000/learn" label="ice1000/learn">
        <attvalues>
          <attvalue for="0" value="learning,java,kotlin,haskell,c,go,cpp,clojure,csharp,dart,groovy,android,jni,prolog,python" />
        </attvalues>
      </node>
      <node id="laserdisc-io/tamer" label="laserdisc-io/tamer">
        <attvalues>
          <attvalue for="0" value="zio-streams,kafka,jdbc,scala,fp,functional-programming,zio,doobie,fs2,avro,schema-registry,s3" />
        </attvalues>
      </node>
      <node id="grain-lang/grain" label="grain-lang/grain">
        <attvalues>
          <attvalue for="0" value="wasm,grain,language,compiler,webassembly,functional-programming" />
        </attvalues>
      </node>
      <node id="syntek-lang/syntek" label="syntek-lang/syntek">
        <attvalues>
          <attvalue for="0" value="programming-language,syntek,compiler,language" />
        </attvalues>
      </node>
      <node id="Anniepoo/prolog-examples" label="Anniepoo/prolog-examples">
        <attvalues>
          <attvalue for="0" value="prolog,family-tree" />
        </attvalues>
      </node>
      <node id="tectijuana/logifun.archived" label="tectijuana/logifun.archived">
        <attvalues>
          <attvalue for="0" value="erlang,prolog-programming-language" />
        </attvalues>
      </node>
      <node id="hulang1024/Scheme" label="hulang1024/Scheme">
        <attvalues>
          <attvalue for="0" value="language,scheme,lisp,c,interpreter,compiler,functional,functional-programming" />
        </attvalues>
      </node>
      <node id="LensPlaysGames/LensorCompilerCollection" label="LensPlaysGames/LensorCompilerCollection">
        <attvalues>
          <attvalue for="0" value="first-class-functions,programming-language,static-typed,compiler,compiler-design,compiler-optimization" />
        </attvalues>
      </node>
      <node id="grafana/thema" label="grafana/thema">
        <attvalues>
          <attvalue for="0" value="openapi,openapi3,cue,cuelang,grafana,schema,versioning,packaging,logic-programming,config" />
        </attvalues>
      </node>
      <node id="mfaisalkhatri/awesome-learning" label="mfaisalkhatri/awesome-learning">
        <attvalues>
          <attvalue for="0" value="learning,learning-path,programming-language,software-testing,test-automation,awesome-list,cicd,devops,unicorns,continuous-delivery,continuous-integration,docker,github,tdd,javascript,python,testautomation,hacktoberfest,awesome" />
        </attvalues>
      </node>
      <node id="kousen/java_upgrade" label="kousen/java_upgrade">
        <attvalues>
          <attvalue for="0" value="functional-programming,java" />
        </attvalues>
      </node>
      <node id="typelead/sbt-eta" label="typelead/sbt-eta">
        <attvalues>
          <attvalue for="0" value="eta,scala,sbt,sbt-plugin,functional-programming" />
        </attvalues>
      </node>
      <node id="higherkindness/droste" label="higherkindness/droste">
        <attvalues>
          <attvalue for="0" value="scala,recursion-schemes,functional-programming" />
        </attvalues>
      </node>
      <node id="Dobiasd/articles" label="Dobiasd/articles">
        <attvalues>
          <attvalue for="0" value="functional-programming,articles,blog" />
        </attvalues>
      </node>
      <node id="hwan809/MungLang" label="hwan809/MungLang">
        <attvalues>
          <attvalue for="0" value="esoteric-language,esolang,programming-language" />
        </attvalues>
      </node>
      <node id="ronanyeah/elm-phoenix-example" label="ronanyeah/elm-phoenix-example">
        <attvalues>
          <attvalue for="0" value="elm,phoenix,functional-programming,webpack,elixir,postgresql" />
        </attvalues>
      </node>
      <node id="fthomas/fs2-cron" label="fthomas/fs2-cron">
        <attvalues>
          <attvalue for="0" value="scala,fs2,cron,cron4s,functional-programming" />
        </attvalues>
      </node>
      <node id="Pater999/UNITN-linguaggi-programmazione-SML" label="Pater999/UNITN-linguaggi-programmazione-SML">
        <attvalues>
          <attvalue for="0" value="unitn,sml,polyml,exam,exercises,exam-practice,programming-language,functional-programming,programmazione-funzionale" />
        </attvalues>
      </node>
      <node id="pure-c/purec" label="pure-c/purec">
        <attvalues>
          <attvalue for="0" value="purescript,c,clang,native,functional-programming,programming-language,backends" />
        </attvalues>
      </node>
      <node id="funfix/funland.js" label="funfix/funland.js">
        <attvalues>
          <attvalue for="0" value="javascript,typescript,flowtype,type-classes,functional-programming,fp,fantasy-land" />
        </attvalues>
      </node>
      <node id="daidr/truth-table" label="daidr/truth-table">
        <attvalues>
          <attvalue for="0" value="truth-table,truth-table-generator,math,logic" />
        </attvalues>
      </node>
      <node id="RichardMoot/LinearOne" label="RichardMoot/LinearOne">
        <attvalues>
          <attvalue for="0" value="linear-logic,first-order-logic,theorem-proving,proof-net,displacement-calculus-grammars,swi-prolog,logic-programming,latex" />
        </attvalues>
      </node>
      <node id="never-lang/never" label="never-lang/never">
        <attvalues>
          <attvalue for="0" value="programming-language,functional-programming,compilers,virtual-machine,language,functional-language,scripting-language,compiler" />
        </attvalues>
      </node>
      <node id="Spacial/csstuff" label="Spacial/csstuff">
        <attvalues>
          <attvalue for="0" value="computer-science,awesome,awesome-list,algorithms,data-science,science,open-science,machine-learning,programming-language" />
        </attvalues>
      </node>
      <node id="mimiMonads/vixeny" label="mimiMonads/vixeny">
        <attvalues>
          <attvalue for="0" value="bun,deno,functional-programming,typescript,javascript,javascript-library,node" />
        </attvalues>
      </node>
      <node id="jeremykross/ulmus" label="jeremykross/ulmus">
        <attvalues>
          <attvalue for="0" value="functional-reactive-programming,functional-programming,frp,clojure,clojurescript" />
        </attvalues>
      </node>
      <node id="reljicd/spring-boot-web-scraper" label="reljicd/spring-boot-web-scraper">
        <attvalues>
          <attvalue for="0" value="spring,spring-boot,spring-mvc,spring-data-jpa,thymeleaf,java,java-8,lambda,stream,spring-security,jsoup,h2-database,h2,functional-programming,java-streams,java-lambda,web-scraping,scraper,docker,docker-compose" />
        </attvalues>
      </node>
      <node id="erg-lang/erg" label="erg-lang/erg">
        <attvalues>
          <attvalue for="0" value="compiler,programming-language,python,rust,language,erg,transpiler" />
        </attvalues>
      </node>
      <node id="til-lang/til" label="til-lang/til">
        <attvalues>
          <attvalue for="0" value="dlang,tcl,programming-language" />
        </attvalues>
      </node>
      <node id="jasonnyberg/j2" label="jasonnyberg/j2">
        <attvalues>
          <attvalue for="0" value="interpreter,programming-language,c,stack-based,concatenative,reflection,graphviz,graph-algorithms,extension-language,dwarf" />
        </attvalues>
      </node>
      <node id="kin-lang/kin" label="kin-lang/kin">
        <attvalues>
          <attvalue for="0" value="kinyarwanda,kin,kin-lang,programming-language,languages,typescript" />
        </attvalues>
      </node>
      <node id="hamler-lang/hamler" label="hamler-lang/hamler">
        <attvalues>
          <attvalue for="0" value="hamler,compiler,programming-language" />
        </attvalues>
      </node>
      <node id="davekch/pycurry" label="davekch/pycurry">
        <attvalues>
          <attvalue for="0" value="python3,currying,functional-programming" />
        </attvalues>
      </node>
      <node id="PlayQ/d4s" label="PlayQ/d4s">
        <attvalues>
          <attvalue for="0" value="scala,functional-programming,izumi,fp,dynamodb,metrics" />
        </attvalues>
      </node>
      <node id="nbittich/adana" label="nbittich/adana">
        <attvalues>
          <attvalue for="0" value="programming-language,repl,rust,alias-management,interpreter,language,namespacing,scripting,wasm" />
        </attvalues>
      </node>
      <node id="Eventuria/demonstration-gsd" label="Eventuria/demonstration-gsd">
        <attvalues>
          <attvalue for="0" value="haskell,haskell-application,cqrs-application,frp,architecture,gsd,functional-programming,functional-reactive-programming,remote-work" />
        </attvalues>
      </node>
      <node id="neotypes/neotypes" label="neotypes/neotypes">
        <attvalues>
          <attvalue for="0" value="scala,neo4j,database,functional-programming,streaming,graph" />
        </attvalues>
      </node>
      <node id="pc2/sus-compiler" label="pc2/sus-compiler">
        <attvalues>
          <attvalue for="0" value="fpga,fpga-programming,hardware-description-language,hdl,programming-language,tree-sitter" />
        </attvalues>
      </node>
      <node id="derive4j/derive4j" label="derive4j/derive4j">
        <attvalues>
          <attvalue for="0" value="algebraic-data-types,optics,functional-programming,algebra,visitor-pattern,annotation-processor,java-8,derive4j,catamorphisms,visitor,laziness,java,sum-types,tagged-unions,discriminated-unions,exhaustiveness-checking,fold" />
        </attvalues>
      </node>
      <node id="twolodzko/prolog-rs" label="twolodzko/prolog-rs">
        <attvalues>
          <attvalue for="0" value="prolog,prolog-implementation,prolog-interpreter,rust,rust-lang" />
        </attvalues>
      </node>
      <node id="char0n/ramda-adjunct" label="char0n/ramda-adjunct">
        <attvalues>
          <attvalue for="0" value="ramda,addons,adjunct,cookbook,extensions,functional-programming,utils,utilities,toolkit,recipes,extras,hacktoberfest" />
        </attvalues>
      </node>
      <node id="matteobaglini/functional-structures-refactoring-kata" label="matteobaglini/functional-structures-refactoring-kata">
        <attvalues>
          <attvalue for="0" value="functional-programming,kata,deliberate-practice,category-theory,composition,refactor,functional,functor,applicative,monad" />
        </attvalues>
      </node>
      <node id="StrykerKKD/Logical" label="StrykerKKD/Logical">
        <attvalues>
          <attvalue for="0" value="ocaml,logic-programming,microkanren" />
        </attvalues>
      </node>
      <node id="ljos/ob-prolog" label="ljos/ob-prolog">
        <attvalues>
          <attvalue for="0" value="emacs-lisp,org-mode,literate-programming,prolog" />
        </attvalues>
      </node>
      <node id="Scrounger/ioBroker.linkeddevices" label="Scrounger/ioBroker.linkeddevices">
        <attvalues>
          <attvalue for="0" value="iobroker,iobroker-adapter,logic" />
        </attvalues>
      </node>
      <node id="VincentJouanne/flutter-bloc-clean-architecture" label="VincentJouanne/flutter-bloc-clean-architecture">
        <attvalues>
          <attvalue for="0" value="flutter,clean-architecture,dartz,tdd,tests,bloc,ui,firebase,emulator,functional-programming,port-adapter" />
        </attvalues>
      </node>
      <node id="OctoD/tiinvo" label="OctoD/tiinvo">
        <attvalues>
          <attvalue for="0" value="typescript,es6,functional-programming,functional-js,monad,either,result,option,javascript,primitives-functions,predicates" />
        </attvalues>
      </node>
      <node id="malgo-lang/malgo" label="malgo-lang/malgo">
        <attvalues>
          <attvalue for="0" value="programming-language,functional-language,compiler,malgo,llvm,functional-programming" />
        </attvalues>
      </node>
      <node id="witheve/Eve" label="witheve/Eve">
        <attvalues>
          <attvalue for="0" value="programming-language,language,ide,database,eve" />
        </attvalues>
      </node>
      <node id="SodiumFRP/sodium-typescript" label="SodiumFRP/sodium-typescript">
        <attvalues>
          <attvalue for="0" value="typescript,frp,lambda,sodium,javascript,reactive,functional-programming,functional-reactive-programming" />
        </attvalues>
      </node>
      <node id="marcoturi/fastify-boilerplate" label="marcoturi/fastify-boilerplate">
        <attvalues>
          <attvalue for="0" value="backend,clean-architecture,cqrs,ddd,fastify,graphql,hexagonal-architecture,mercurius,nodejs,onion-architecture,typescript,bdd,cucumber,vitest,functional-programming" />
        </attvalues>
      </node>
      <node id="gfngfn/SATySFi" label="gfngfn/SATySFi">
        <attvalues>
          <attvalue for="0" value="ocaml,markup-language,latex,functional-programming,pdf-generation,opentype,satysfi,opam,pdf,typesetting-system,programming-language" />
        </attvalues>
      </node>
      <node id="aceto/aceto" label="aceto/aceto">
        <attvalues>
          <attvalue for="0" value="programming-language,hilbert-curve,esoteric-programming-language,interpreter,stack,grid" />
        </attvalues>
      </node>
      <node id="dloscutoff/pip" label="dloscutoff/pip">
        <attvalues>
          <attvalue for="0" value="golfing-language,interpreter,python,imperative,code-golf,programming-language,interpreted-language" />
        </attvalues>
      </node>
      <node id="DanielBrito/ufc" label="DanielBrito/ufc">
        <attvalues>
          <attvalue for="0" value="compiler,computer-graphics,mobile-development,data-structures,database,logic,number-theory,linear-algebra,software-engineering,web-development,competitive-programming,ui-ux,functional-programming,operating-system,mathematics" />
        </attvalues>
      </node>
      <node id="cevatbarisyilmaz/lolz" label="cevatbarisyilmaz/lolz">
        <attvalues>
          <attvalue for="0" value="programming-language,esoteric-language,language,go,golang,lolz" />
        </attvalues>
      </node>
      <node id="italankin/15Puzzle" label="italankin/15Puzzle">
        <attvalues>
          <attvalue for="0" value="java,android,puzzle,game,15,fifteen,logic,15puzzle" />
        </attvalues>
      </node>
      <node id="zhangchiqing/bluebird-promisell" label="zhangchiqing/bluebird-promisell">
        <attvalues>
          <attvalue for="0" value="promise,async-programming,functional-programming,javascript-callback-hell-solution" />
        </attvalues>
      </node>
      <node id="danieljharvey/horses" label="danieljharvey/horses">
        <attvalues>
          <attvalue for="0" value="functional,programming,programming-language,content-addressed-storage" />
        </attvalues>
      </node>
      <node id="namin/logically" label="namin/logically">
        <attvalues>
          <attvalue for="0" value="clojure,prolog,abstract-interpretation,metaprogramming,logic-programming,paper-implementations,binders" />
        </attvalues>
      </node>
      <node id="evilthreads669966/EvadeMe" label="evilthreads669966/EvadeMe">
        <attvalues>
          <attvalue for="0" value="android-library,heuristic-evasion,kotlin-android,kotlin-library,android-security,functional-programming,android-rat,android-malware-detection,android-malware,android-spy-application,android-coroutines,asynchronous-programming" />
        </attvalues>
      </node>
      <node id="makenowjust/quine" label="makenowjust/quine">
        <attvalues>
          <attvalue for="0" value="quine,language,programming-language,hacking" />
        </attvalues>
      </node>
      <node id="gvolpe/trading" label="gvolpe/trading">
        <attvalues>
          <attvalue for="0" value="event-driven-architecture,functional-programming,fp,eda,fs2,cats-effect,apache-pulsar,apache-kafka,elm-lang,elm-architecture,elm,web-sockets,websockets,grafana,prometheus,open-tracing,scala,scala3" />
        </attvalues>
      </node>
      <node id="MostlyAdequate/mostly-adequate-guide-ru" label="MostlyAdequate/mostly-adequate-guide-ru">
        <attvalues>
          <attvalue for="0" value="javascript,functional-programming,tutorial,reactive-programming" />
        </attvalues>
      </node>
      <node id="missingfaktor/akar" label="missingfaktor/akar">
        <attvalues>
          <attvalue for="0" value="clojure,pattern-matching,functional-programming" />
        </attvalues>
      </node>
      <node id="php-slang/php-slang" label="php-slang/php-slang">
        <attvalues>
          <attvalue for="0" value="monad,php,fp,functional-programming,either-monad,optional,future-monad,parallelism,parallel-computing,immutability,immutable-php" />
        </attvalues>
      </node>
      <node id="ahnafyy/mama-lang" label="ahnafyy/mama-lang">
        <attvalues>
          <attvalue for="0" value="bengali,interpreter,javascript,programming-language" />
        </attvalues>
      </node>
      <node id="Simingchen/Functional-Light-JS" label="Simingchen/Functional-Light-JS">
        <attvalues>
          <attvalue for="0" value="functional-js,functional-programming,functional,functional-light-js,translation" />
        </attvalues>
      </node>
      <node id="racuna1/cse240-public" label="racuna1/cse240-public">
        <attvalues>
          <attvalue for="0" value="cse240,arizona-state-university,c,cpp,scheme,prolog,magic" />
        </attvalues>
      </node>
      <node id="dmcoles/EVO" label="dmcoles/EVO">
        <attvalues>
          <attvalue for="0" value="amiga,programming-language,amiga-e,amigaos,m68k" />
        </attvalues>
      </node>
      <node id="bow-swift/bow-lite" label="bow-swift/bow-lite">
        <attvalues>
          <attvalue for="0" value="swift,fp,functional-programming,category-theory,swift-package,spm,composition,optics,side-effects,hacktoberfest" />
        </attvalues>
      </node>
      <node id="locutusjs/locutus" label="locutusjs/locutus">
        <attvalues>
          <attvalue for="0" value="javascript,ports,programming-language" />
        </attvalues>
      </node>
      <node id="aardvark-platform/aardvark.rendering" label="aardvark-platform/aardvark.rendering">
        <attvalues>
          <attvalue for="0" value="aardvark-rendering-engine,aardvark-platform,visualization,shader,gpu,gpgpu,rendering,functional-programming,dsl,fsharp" />
        </attvalues>
      </node>
      <node id="kuroko-lang/kuroko" label="kuroko-lang/kuroko">
        <attvalues>
          <attvalue for="0" value="programming-language,bytecode,vm,interpreter,kuroko,repl,unicode-strings,python,bytecode-vm,bytecode-compiler" />
        </attvalues>
      </node>
      <node id="NICUP14/MiniLang" label="NICUP14/MiniLang">
        <attvalues>
          <attvalue for="0" value="compiler,programming-language,python3,c,function-overloading,hygienic-macros,memory-safe,portable,turing-tarpit,type-safe,ufcs,x86-64,transpiled-language,compiler-backend,compiler-from-scratch,compiler-frontend,c-successor,foss,open-source" />
        </attvalues>
      </node>
      <node id="StaticScript/StaticScript" label="StaticScript/StaticScript">
        <attvalues>
          <attvalue for="0" value="staticscript,typescript,language,static-typing,programming-language,compiler,llvm" />
        </attvalues>
      </node>
      <node id="sebdumancic/pylo2" label="sebdumancic/pylo2">
        <attvalues>
          <attvalue for="0" value="prolog,logic-programming,artificial-intelligence" />
        </attvalues>
      </node>
      <node id="leobenkel/ZparkIO" label="leobenkel/ZparkIO">
        <attvalues>
          <attvalue for="0" value="spark,zio,scala,functional-programming,boiler-plate,helpers,template" />
        </attvalues>
      </node>
      <node id="apimorphism/telegramium" label="apimorphism/telegramium">
        <attvalues>
          <attvalue for="0" value="telegram,telegram-bot-api,scala,functional-programming,cats,cats-effect" />
        </attvalues>
      </node>
      <node id="polyvariant/doobie-quill" label="polyvariant/doobie-quill">
        <attvalues>
          <attvalue for="0" value="doobie,quill,scala,pure-fp,functional-programming,jdbc,cats,cats-effect" />
        </attvalues>
      </node>
      <node id="tpolecat/cofree" label="tpolecat/cofree">
        <attvalues>
          <attvalue for="0" value="scala,recursion-schemes,fp,functional-programming" />
        </attvalues>
      </node>
      <node id="spartanz/parserz" label="spartanz/parserz">
        <attvalues>
          <attvalue for="0" value="scala,invertible,parser-combinators,functional-programming" />
        </attvalues>
      </node>
      <node id="ideos/gloe" label="ideos/gloe">
        <attvalues>
          <attvalue for="0" value="clean-code,data-science,flow,functional-programming,machine-learning,python,typing" />
        </attvalues>
      </node>
      <node id="1Hibiki1/locks-py" label="1Hibiki1/locks-py">
        <attvalues>
          <attvalue for="0" value="lox,interpreter,programming-language,compiler,locks" />
        </attvalues>
      </node>
      <node id="jondot/hypermatch" label="jondot/hypermatch">
        <attvalues>
          <attvalue for="0" value="nodejs,javascript,logic,rule-engine,matching" />
        </attvalues>
      </node>
      <node id="akheron/optics-ts" label="akheron/optics-ts">
        <attvalues>
          <attvalue for="0" value="optics,lens,prism,isomorphism,immutable,functional-programming,typescript,traversal" />
        </attvalues>
      </node>
      <node id="nevalang/neva" label="nevalang/neva">
        <attvalues>
          <attvalue for="0" value="compiler,flow-based-programming,golang,visual-programming,nevalang,concurrent-programing,dataflow-compiler,dataflow-programming,fbp,fbp-compiler,fbp-runtime,flow-based,functional-programming,go,neva,programming-language,reactive-programming,visual-programming-editor,visual-programming-language,dataflow-runtime" />
        </attvalues>
      </node>
      <node id="Nimaoth/Nev" label="Nimaoth/Nev">
        <attvalues>
          <attvalue for="0" value="editor,programming-language,nim,text-editor,projection-editor,projectional-editor" />
        </attvalues>
      </node>
      <node id="angrysky56/mcp-logic" label="angrysky56/mcp-logic">
        <attvalues>
          <attvalue for="0" value="llm,logic,tool,ai,claude-3-5-sonnet,server,mcp-server" />
        </attvalues>
      </node>
      <node id="0xekez/lisp" label="0xekez/lisp">
        <attvalues>
          <attvalue for="0" value="programming-language,lisp-interpreter,rust,interpreter,lisp,cranelift" />
        </attvalues>
      </node>
      <node id="nullobject/fkit" label="nullobject/fkit">
        <attvalues>
          <attvalue for="0" value="javascript,functional,functional-programming,library,fp" />
        </attvalues>
      </node>
      <node id="armcn/maybe" label="armcn/maybe">
        <attvalues>
          <attvalue for="0" value="functional-programming,rstats,r" />
        </attvalues>
      </node>
      <node id="Corsaair/redtamarin" label="Corsaair/redtamarin">
        <attvalues>
          <attvalue for="0" value="actionscript,avm2,avmplus,language,programming-language,sdk,actionscript3,as3,redtamarin,as3lang,virtual-machine,runtime,vm,windows,win,macos,mac,linux,32-bit,64-bit" />
        </attvalues>
      </node>
      <node id="freand76/digsim" label="freand76/digsim">
        <attvalues>
          <attvalue for="0" value="logic,python,simulation,simulator,vcd,verilog,yosys,rtl" />
        </attvalues>
      </node>
      <node id="dafny-lang/dafny" label="dafny-lang/dafny">
        <attvalues>
          <attvalue for="0" value="programming-language,verification" />
        </attvalues>
      </node>
      <node id="xebia-functional/nine-cards-v2" label="xebia-functional/nine-cards-v2">
        <attvalues>
          <attvalue for="0" value="scala,android,functional-programming,launcher,monix,cats" />
        </attvalues>
      </node>
      <node id="functionalland/functional" label="functionalland/functional">
        <attvalues>
          <attvalue for="0" value="deno,functional,functional-programming,denoland,functor,monoid,catamorphism,fold,maybe,either,maybe-monad,either-monad,browser,io-monad,algebraic-data-types,task,task-monad,category-theory" />
        </attvalues>
      </node>
      <node id="chessai/hsdatalog" label="chessai/hsdatalog">
        <attvalues>
          <attvalue for="0" value="compiler,bdd,relational-algebra,relational-databases,datalog,logic-programming" />
        </attvalues>
      </node>
      <node id="lenguyenthedat/raptor" label="lenguyenthedat/raptor">
        <attvalues>
          <attvalue for="0" value="jaccard-distance,haskell,zalora,collaborative-filtering,recommendation-system,recommendation-engine,ecommerce,functional-programming" />
        </attvalues>
      </node>
      <node id="Blazify/blazex" label="Blazify/blazex">
        <attvalues>
          <attvalue for="0" value="programming-language,parser,rust,oop,llvm,language,compiler,lexers" />
        </attvalues>
      </node>
      <node id="ProvableHQ/leo" label="ProvableHQ/leo">
        <attvalues>
          <attvalue for="0" value="programming-language,zero-knowledge,compiler,zksnarks,leo" />
        </attvalues>
      </node>
      <node id="DirectToSwift/SwiftUIRules" label="DirectToSwift/SwiftUIRules">
        <attvalues>
          <attvalue for="0" value="swiftui,swiftui-rules,declarative-programming" />
        </attvalues>
      </node>
      <node id="lettier/parsing-with-haskell-parser-combinators" label="lettier/parsing-with-haskell-parser-combinators">
        <attvalues>
          <attvalue for="0" value="haskell,parser,parser-combinators,parsing,functional-programming,parsec,parser-combinator,haskell-learning,haskell-exercises,haskell-tutorial,srt,srt-subtitles,srt-parser,srt-format,functional-programming-examples,programming-exercises,learning-by-doing,learn-to-code,parsers,subtitles" />
        </attvalues>
      </node>
      <node id="typemeta/funcj" label="typemeta/funcj">
        <attvalues>
          <attvalue for="0" value="java,functional-programming,applicative,monads,codec,parser-combinators,json" />
        </attvalues>
      </node>
      <node id="vitaliihonta/zio-temporal" label="vitaliihonta/zio-temporal">
        <attvalues>
          <attvalue for="0" value="scala,temporal-workflow,workflow-management,zio,functional-programming,scala3" />
        </attvalues>
      </node>
      <node id="gurugio/lowlevelprogramming-university" label="gurugio/lowlevelprogramming-university">
        <attvalues>
          <attvalue for="0" value="linux-kernel-hacking,c-programming,hardware,embedded-systems,programming-language,low-level-programming,assembly-language-programming,linux-kernel,low-level,assembly,arduino,system-programming,firmware,rust-lang,operating-system" />
        </attvalues>
      </node>
      <node id="kagsa/kagsa" label="kagsa/kagsa">
        <attvalues>
          <attvalue for="0" value="compile,compiler,compiler-frontend,console,console-application,kg,lang,language,languages,open-source,programming,programming-language,programming-languages,python,kagsa,interpreter" />
        </attvalues>
      </node>
      <node id="formancehq/numscript" label="formancehq/numscript">
        <attvalues>
          <attvalue for="0" value="dsl,fintech,programming-language" />
        </attvalues>
      </node>
      <node id="ApiLogicServer/ApiLogicServer-src" label="ApiLogicServer/ApiLogicServer-src">
        <attvalues>
          <attvalue for="0" value="api,flask,kafka,python,rules,sqlalchemy,web-app,automation,declarative-programming,ai-ml,angular2,business-rules,business-rules-engine,database,genai,json-api,microservice,microservice-framework,open-api,react" />
        </attvalues>
      </node>
      <node id="kovvalsky/LangPro" label="kovvalsky/LangPro">
        <attvalues>
          <attvalue for="0" value="nli,natural-language-inference,semantic-tableau,theorem-prover,theorem-proving,natural-logic,natural-tableau,lambda-logical-form,natural-language-processing,formal-semantics,prolog" />
        </attvalues>
      </node>
      <node id="pirapira/bamboo" label="pirapira/bamboo">
        <attvalues>
          <attvalue for="0" value="bamboo,programming-language,language,evm,ethereum,ethereum-contract" />
        </attvalues>
      </node>
      <node id="fika-lang/fika" label="fika-lang/fika">
        <attvalues>
          <attvalue for="0" value="statically-typed,functional-programming,programming-language,erlang,elixir" />
        </attvalues>
      </node>
      <node id="killme2008/aviatorscript" label="killme2008/aviatorscript">
        <attvalues>
          <attvalue for="0" value="java,scripting-language,jvm-languages,aviatorscript,expression-evaluator,programming-language" />
        </attvalues>
      </node>
      <node id="ditto/ditto" label="ditto/ditto">
        <attvalues>
          <attvalue for="0" value="dependent-types,programming-language,proof-assistant,type-theory" />
        </attvalues>
      </node>
      <node id="dzikoysk/expressible" label="dzikoysk/expressible">
        <attvalues>
          <attvalue for="0" value="panda,panda-lang,functional-programming,result,option,utility,java,kotlin,kotlin-coroutines,hacktoberfest,coroutines" />
        </attvalues>
      </node>
      <node id="trekhleb/learn-python" label="trekhleb/learn-python">
        <attvalues>
          <attvalue for="0" value="python,python3,learning,programming-language,learning-python,learning-by-doing" />
        </attvalues>
      </node>
      <node id="rsms/colang" label="rsms/colang">
        <attvalues>
          <attvalue for="0" value="compiler,programming-language" />
        </attvalues>
      </node>
      <node id="selfrefactor/rambda" label="selfrefactor/rambda">
        <attvalues>
          <attvalue for="0" value="fp,ramda,lodash,utils,functional-programming,typescript,functions,functional,utility" />
        </attvalues>
      </node>
      <node id="mohamedSabry0/functional_programming_examples" label="mohamedSabry0/functional_programming_examples">
        <attvalues>
          <attvalue for="0" value="functional-programming" />
        </attvalues>
      </node>
      <node id="ffwff/hana" label="ffwff/hana">
        <attvalues>
          <attvalue for="0" value="programming-language,scripting-language,bytecode-interpreter" />
        </attvalues>
      </node>
      <node id="sjsyrek/haskell-study-startup" label="sjsyrek/haskell-study-startup">
        <attvalues>
          <attvalue for="0" value="haskell,functional-programming,education,study,study-group" />
        </attvalues>
      </node>
      <node id="Dobiasd/FunctionalPlus" label="Dobiasd/FunctionalPlus">
        <attvalues>
          <attvalue for="0" value="range,composition,stl,functional-programming,algorithms,header-only,c-plus-plus,c-plus-plus-14,c-plus-plus-17,library,cpp,cpp14" />
        </attvalues>
      </node>
      <node id="true-myth/true-myth" label="true-myth/true-myth">
        <attvalues>
          <attvalue for="0" value="typescript,typescript-library,typescript-definitions,functional-programming,javascript,monads,functors,applicatives" />
        </attvalues>
      </node>
      <node id="alanrsoares/prelude-js" label="alanrsoares/prelude-js">
        <attvalues>
          <attvalue for="0" value="functional-programming" />
        </attvalues>
      </node>
      <node id="onchere/whack" label="onchere/whack">
        <attvalues>
          <attvalue for="0" value="llvm,programming-language" />
        </attvalues>
      </node>
      <node id="vedic-lang/vedic-lang.github.io" label="vedic-lang/vedic-lang.github.io">
        <attvalues>
          <attvalue for="0" value="vedic,programming-language,sanskrit-programming-language" />
        </attvalues>
      </node>
      <node id="Tractables/LogicCircuits.jl" label="Tractables/LogicCircuits.jl">
        <attvalues>
          <attvalue for="0" value="logic,logic-circuits,logical-reasoning,automated-reasoning,julia" />
        </attvalues>
      </node>
      <node id="NicoNex/tau" label="NicoNex/tau">
        <attvalues>
          <attvalue for="0" value="programming-language,go,functional-programming,language,interpreter,scripting-language,compiler,golang" />
        </attvalues>
      </node>
      <node id="WaldoJeffers/conductor" label="WaldoJeffers/conductor">
        <attvalues>
          <attvalue for="0" value="javascript,asynchronous,async,functional-programming,utility-library" />
        </attvalues>
      </node>
      <node id="DavidArno/SuccincT" label="DavidArno/SuccincT">
        <attvalues>
          <attvalue for="0" value="c-sharp,discriminated-unions,functional-programming,maybe,dotnet,stable" />
        </attvalues>
      </node>
      <node id="pthom/cleantype" label="pthom/cleantype">
        <attvalues>
          <attvalue for="0" value="cpp,header-only,cpp14,library,c-plus-plus,c-plus-plus-14,functional-programming,reflection,types,type" />
        </attvalues>
      </node>
      <node id="hendisantika/List-All-Programming-Telegram-Group" label="hendisantika/List-All-Programming-Telegram-Group">
        <attvalues>
          <attvalue for="0" value="telegram-group,programming-language,kotlin,android,java,user,groups,python,intellij,group,indonesia,hacktoberfest2021,hacktoberfest" />
        </attvalues>
      </node>
      <node id="gcanti/fp-ts" label="gcanti/fp-ts">
        <attvalues>
          <attvalue for="0" value="typescript,functional-programming,algebraic-data-types" />
        </attvalues>
      </node>
      <node id="KindaSloth/Haskell4Noobs" label="KindaSloth/Haskell4Noobs">
        <attvalues>
          <attvalue for="0" value="tutorial,functional-programming,haskell,brasil,portuguese,portugues" />
        </attvalues>
      </node>
      <node id="d5/tengo" label="d5/tengo">
        <attvalues>
          <attvalue for="0" value="golang,go,script,embedded-language,compiler,vm,programming-language,tengo" />
        </attvalues>
      </node>
      <node id="ostis-ai/scl-machine" label="ostis-ai/scl-machine">
        <attvalues>
          <attvalue for="0" value="logic,logic-programming,ostis,logic-inference" />
        </attvalues>
      </node>
      <node id="jariazavalverde/fasill" label="jariazavalverde/fasill">
        <attvalues>
          <attvalue for="0" value="logic-language,logic-programming,fuzzy-logic,fuzzy-connectives,prolog,language-design" />
        </attvalues>
      </node>
      <node id="kocircuit/kocircuit" label="kocircuit/kocircuit">
        <attvalues>
          <attvalue for="0" value="protobuf,grpc,golang,functional-programming" />
        </attvalues>
      </node>
      <node id="pedropark99/zig-book" label="pedropark99/zig-book">
        <attvalues>
          <attvalue for="0" value="book,programming,programming-language,zig,ziglang,course,tutorial,tutorial-course" />
        </attvalues>
      </node>
      <node id="geirolz/advxml" label="geirolz/advxml">
        <attvalues>
          <attvalue for="0" value="scala,xml,scala-xml,lightweight,functional,scala-library,library,functional-programming,cats,dsl" />
        </attvalues>
      </node>
      <node id="zio/zio-ftp" label="zio/zio-ftp">
        <attvalues>
          <attvalue for="0" value="zio,ftp,sftp,functional-programming,scala,zio-streams,streams,streaming,connector" />
        </attvalues>
      </node>
      <node id="Spirit-of-Oberon/wirth-personal" label="Spirit-of-Oberon/wirth-personal">
        <attvalues>
          <attvalue for="0" value="oberon-07,oberon,programming-language,compiler-design" />
        </attvalues>
      </node>
      <node id="aardvark-platform/aardvark.media" label="aardvark-platform/aardvark.media">
        <attvalues>
          <attvalue for="0" value="aardvark,aardvark-platform,elm,rendering-engine,graphics,3d-renderings,visualization,mvu,gpu,functional-programming" />
        </attvalues>
      </node>
      <node id="min-lang/min" label="min-lang/min">
        <attvalues>
          <attvalue for="0" value="programming-language,compiler,blockchain" />
        </attvalues>
      </node>
      <node id="scala-exercises/scala-exercises" label="scala-exercises/scala-exercises">
        <attvalues>
          <attvalue for="0" value="scala,learning,cats,shapeless,functional-programming,postgresql" />
        </attvalues>
      </node>
      <node id="mthom/scryer-prolog" label="mthom/scryer-prolog">
        <attvalues>
          <attvalue for="0" value="rust,prolog,prolog-interpreter,prolog-implementation,iso-prolog-standard,prolog-programming-language" />
        </attvalues>
      </node>
      <node id="sine-fdn/garble-lang" label="sine-fdn/garble-lang">
        <attvalues>
          <attvalue for="0" value="multi-party-computation,garbled-circuits,programming-language,secure-computation,circuit-description" />
        </attvalues>
      </node>
      <node id="CBerJun/AcaciaMC" label="CBerJun/AcaciaMC">
        <attvalues>
          <attvalue for="0" value="minecraft,minecraft-command,programming-language,minecraft-bedrock,command-block" />
        </attvalues>
      </node>
      <node id="bnidia/libft" label="bnidia/libft">
        <attvalues>
          <attvalue for="0" value="algorithms,c,logic,rigor,unix" />
        </attvalues>
      </node>
      <node id="nadobando/pydiction" label="nadobando/pydiction">
        <attvalues>
          <attvalue for="0" value="assert,assertions,declarative,declarative-programming,dict,dictionaries,list,python,comparison,comparison-tool,comparisons" />
        </attvalues>
      </node>
      <node id="RoyalIcing/react-organism" label="RoyalIcing/react-organism">
        <attvalues>
          <attvalue for="0" value="react,state,state-management,promise,async,functional-programming" />
        </attvalues>
      </node>
      <node id="oleg-py/meow-mtl" label="oleg-py/meow-mtl">
        <attvalues>
          <attvalue for="0" value="cats,scala,functional-programming,mtl" />
        </attvalues>
      </node>
      <node id="openmole/mgo" label="openmole/mgo">
        <attvalues>
          <attvalue for="0" value="genetic-algorithm,scala,optimisation,functional-programming,parameter-tuning,hyperparameter-optimization,hyperparameters,hyperparameter-tuning" />
        </attvalues>
      </node>
      <node id="JanWielemaker/swi-prolog-wasm" label="JanWielemaker/swi-prolog-wasm">
        <attvalues>
          <attvalue for="0" value="prolog,webassembly" />
        </attvalues>
      </node>
      <node id="christianscott/curry.py" label="christianscott/curry.py">
        <attvalues>
          <attvalue for="0" value="python3,functional-programming,just-for-fun" />
        </attvalues>
      </node>
      <node id="daniel-shimon/rpp" label="daniel-shimon/rpp">
        <attvalues>
          <attvalue for="0" value="interpreter,cpp,programming-language,programming,hebrew,untyped,interpreted-programming-language,object-oriented-programming" />
        </attvalues>
      </node>
      <node id="921kiyo/symbolic-rl" label="921kiyo/symbolic-rl">
        <attvalues>
          <attvalue for="0" value="reinforcement-learning,answer-set-programming,ilp,inductive-logic-programming,symbolic-reinforcement-learning,artificial-intelligence" />
        </attvalues>
      </node>
      <node id="luapp-org/luapp" label="luapp-org/luapp">
        <attvalues>
          <attvalue for="0" value="compiler,language,lua,programming-language,c" />
        </attvalues>
      </node>
      <node id="PureEval/PureEval" label="PureEval/PureEval">
        <attvalues>
          <attvalue for="0" value="functional-programming,javascript,js,monad,npm" />
        </attvalues>
      </node>
      <node id="oleg-py/better-monadic-for" label="oleg-py/better-monadic-for">
        <attvalues>
          <attvalue for="0" value="desugar,scala,for-comprehension,compiler-plugin,functional-programming,optimization" />
        </attvalues>
      </node>
      <node id="kun-song/learning-fpinscala" label="kun-song/learning-fpinscala">
        <attvalues>
          <attvalue for="0" value="scala,functional-programming" />
        </attvalues>
      </node>
      <node id="Blog-Core/blog-core" label="Blog-Core/blog-core">
        <attvalues>
          <attvalue for="0" value="blog-engine,swi-prolog,prolog,cms,blog-core" />
        </attvalues>
      </node>
      <node id="linkml/linkml-datalog" label="linkml/linkml-datalog">
        <attvalues>
          <attvalue for="0" value="linkml,logic-programming,validation,souffle-datalog-language,datalog,reasoning,rdf,semantic-web,rules,rule-language,semantics,constraints" />
        </attvalues>
      </node>
      <node id="picrin-scheme/libpicrin" label="picrin-scheme/libpicrin">
        <attvalues>
          <attvalue for="0" value="scheme,programming-language,embedded,gc" />
        </attvalues>
      </node>
      <node id="cmungall/sparqlprog" label="cmungall/sparqlprog">
        <attvalues>
          <attvalue for="0" value="semantic-web,sparql,datalog,rdf,swi-prolog,prolog,bioinformatics,ontology" />
        </attvalues>
      </node>
      <node id="Jamesbarford/holyc-lang" label="Jamesbarford/holyc-lang">
        <attvalues>
          <attvalue for="0" value="c,compiler,holyc,templeos,programming,programming-language,programming-languages,transpiler" />
        </attvalues>
      </node>
      <node id="briantrice/slate-language" label="briantrice/slate-language">
        <attvalues>
          <attvalue for="0" value="multimethods,prototypes,smalltalk,language,programming-language,environment,lisp,macros" />
        </attvalues>
      </node>
      <node id="uraimo/Swift-Playgrounds" label="uraimo/Swift-Playgrounds">
        <attvalues>
          <attvalue for="0" value="swift-playgrounds,swift,concurrency,bitwise-operators,functional-programming,unowned,concurrency-patterns" />
        </attvalues>
      </node>
      <node id="mlang-dev/m" label="mlang-dev/m">
        <attvalues>
          <attvalue for="0" value="compiler,programming-language,game-development,c,llvm,webassembly,wasm,webgpu" />
        </attvalues>
      </node>
      <node id="engboris/stellogen" label="engboris/stellogen">
        <attvalues>
          <attvalue for="0" value="logic,logic-programming,transcendental-syntax,formal-methods,proof-assistant,verification,type-theory" />
        </attvalues>
      </node>
      <node id="geiltonxavier/aprenda-go" label="geiltonxavier/aprenda-go">
        <attvalues>
          <attvalue for="0" value="golang,cursos,go,course,programming-language" />
        </attvalues>
      </node>
      <node id="joshburgess/redux-most" label="joshburgess/redux-most">
        <attvalues>
          <attvalue for="0" value="redux,middleware,async,observable,mostjs,epics,rxjs,monadic-streams,streams,reactive,functional,reactive-programming,functional-programming,redux-thunk,redux-observable,redux-saga,sagas,the-saga-pattern,most,asynchronous-programming" />
        </attvalues>
      </node>
      <node id="YBogomolov/fp-teapot" label="YBogomolov/fp-teapot">
        <attvalues>
          <attvalue for="0" value="fp,functional-programming,fp-ts,newbiefriendly" />
        </attvalues>
      </node>
      <node id="SLiV9/penne" label="SLiV9/penne">
        <attvalues>
          <attvalue for="0" value="language-development,penne,programming-language,compiler,language" />
        </attvalues>
      </node>
      <node id="nythrox/effects.js" label="nythrox/effects.js">
        <attvalues>
          <attvalue for="0" value="algebraic-effects,effects,javascript,functional-programming" />
        </attvalues>
      </node>
      <node id="robsimmons/dusa" label="robsimmons/dusa">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,datalog,forward-chaining,logic-programming" />
        </attvalues>
      </node>
      <node id="FrankKair/polyglot-euler" label="FrankKair/polyglot-euler">
        <attvalues>
          <attvalue for="0" value="project-euler,euler-solutions,rust,ruby,elixir,swift,crystal,erlang,javascript,python,golang,scala,haskell,lua,java,dlang,euler,programming-language,typescript,ocaml" />
        </attvalues>
      </node>
      <node id="cagataycali/awesome-brainfuck" label="cagataycali/awesome-brainfuck">
        <attvalues>
          <attvalue for="0" value="brainfuck,esoteric-language,esoteric,programming-language" />
        </attvalues>
      </node>
      <node id="sno2/bf" label="sno2/bf">
        <attvalues>
          <attvalue for="0" value="interpreter,programming-language,typescript,typescript-types" />
        </attvalues>
      </node>
      <node id="factor/factor" label="factor/factor">
        <attvalues>
          <attvalue for="0" value="programming-language,factor,stack,concatenative,language" />
        </attvalues>
      </node>
      <node id="Effect-TS/match" label="Effect-TS/match">
        <attvalues>
          <attvalue for="0" value="functional-programming,pattern-matching,typescript" />
        </attvalues>
      </node>
      <node id="anthonydugois/polynomic" label="anthonydugois/polynomic">
        <attvalues>
          <attvalue for="0" value="svg,paths,functional-programming,javascript,library,functional,fp,linear-algebra" />
        </attvalues>
      </node>
      <node id="pcyin/NL2code" label="pcyin/NL2code">
        <attvalues>
          <attvalue for="0" value="programming-language,deep-learning" />
        </attvalues>
      </node>
      <node id="alpha-asp/Alpha" label="alpha-asp/Alpha">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,solver,lazy-grounding,logic-programming" />
        </attvalues>
      </node>
      <node id="lambduli/minilog" label="lambduli/minilog">
        <attvalues>
          <attvalue for="0" value="language,logic-programming,programming-language,prolog,prolog-implementation,repl,unification" />
        </attvalues>
      </node>
      <node id="fuse-open/uno" label="fuse-open/uno">
        <attvalues>
          <attvalue for="0" value="uno,programming-language,fuse,cross-platform,c-sharp" />
        </attvalues>
      </node>
      <node id="isovector/certainty-by-construction" label="isovector/certainty-by-construction">
        <attvalues>
          <attvalue for="0" value="agda,book,functional-programming,math" />
        </attvalues>
      </node>
      <node id="tommmyy/ramda-extension" label="tommmyy/ramda-extension">
        <attvalues>
          <attvalue for="0" value="ramda,ramda-functions,utils,utilities,tools,toolset,extensions,ramda-extension,functional-programming,pointfree" />
        </attvalues>
      </node>
      <node id="richpl/PyBasic" label="richpl/PyBasic">
        <attvalues>
          <attvalue for="0" value="interpreter,basic,programming-language,basic-programming-language,python" />
        </attvalues>
      </node>
      <node id="sCrypt-Inc/specification" label="sCrypt-Inc/specification">
        <attvalues>
          <attvalue for="0" value="programming-language,bitcoin,bitcoin-script" />
        </attvalues>
      </node>
      <node id="SerenityOS/jakt" label="SerenityOS/jakt">
        <attvalues>
          <attvalue for="0" value="programming-language,jakt,serenityos" />
        </attvalues>
      </node>
      <node id="japgolly/clear-config" label="japgolly/clear-config">
        <attvalues>
          <attvalue for="0" value="scala,fp,functional-programming,configuration,config,scalajs,scala-js" />
        </attvalues>
      </node>
      <node id="logicmoo/programk" label="logicmoo/programk">
        <attvalues>
          <attvalue for="0" value="aiml,aiml-interpreter,aiml2,chatbot,prolog" />
        </attvalues>
      </node>
      <node id="Glistix/glistix" label="Glistix/glistix">
        <attvalues>
          <attvalue for="0" value="compiler,gleam,nix,programming-language" />
        </attvalues>
      </node>
      <node id="mech-lang/mech" label="mech-lang/mech">
        <attvalues>
          <attvalue for="0" value="programming-environment,programming-language,compiler,data-processing,reactive-programming,live-programming,robotics,embedded,game-programming,iot" />
        </attvalues>
      </node>
      <node id="SandroMaglione/flutter-supabase-template" label="SandroMaglione/flutter-supabase-template">
        <attvalues>
          <attvalue for="0" value="dart,flutter,flutter-app,flutter-examples,supabase,supabase-auth,supabase-db,supabase-flutter,fpdart,functional-programming" />
        </attvalues>
      </node>
      <node id="derive4j/hkt" label="derive4j/hkt">
        <attvalues>
          <attvalue for="0" value="hk-encoding,hkt,annotation-processor,typechecker,java-8,functional-programming" />
        </attvalues>
      </node>
      <node id="alugili/CSharp8CheatSheet" label="alugili/CSharp8CheatSheet">
        <attvalues>
          <attvalue for="0" value="csharp8,csharp,cheatsheets,cheat-sheet,cheat,programming-language" />
        </attvalues>
      </node>
      <node id="actonlang/acton" label="actonlang/acton">
        <attvalues>
          <attvalue for="0" value="programming-language,language,hacktoberfest,compiler,actor-model,distributed-computing" />
        </attvalues>
      </node>
      <node id="sys27/xFunc" label="sys27/xFunc">
        <attvalues>
          <attvalue for="0" value="lexer,parse,c-sharp,math,mathematics,logic,analyzer,derivative,differentiation,complex-numbers,parser,simplification,expression,dotnet,units,units-of-measure,math-parser,evaluate-expressions" />
        </attvalues>
      </node>
      <node id="saeiddrv/PythonPersianTutorial" label="saeiddrv/PythonPersianTutorial">
        <attvalues>
          <attvalue for="0" value="python-book,persian-language,tutorial,programming-language,python,sphinx,book,coderz" />
        </attvalues>
      </node>
      <node id="chai2010/go-ast-book" label="chai2010/go-ast-book">
        <attvalues>
          <attvalue for="0" value="go,golang,ast,book,yacc,goyacc,bison,flex,lex,llvm,llir,wa,programming-language" />
        </attvalues>
      </node>
      <node id="evhub/coconut" label="evhub/coconut">
        <attvalues>
          <attvalue for="0" value="python,functional,language,functional-programming,functional-language,programming-language,coconut,xonsh,xontrib,compiler" />
        </attvalues>
      </node>
      <node id="gooofy/zamia-ai" label="gooofy/zamia-ai">
        <attvalues>
          <attvalue for="0" value="python,tensorflow,artificial-intelligence,natural-language-processing,prolog,knowledgebase,semantic-web" />
        </attvalues>
      </node>
      <node id="jason-lang/jason" label="jason-lang/jason">
        <attvalues>
          <attvalue for="0" value="agent,programming-language,agent-oriented-programming,bdi,agentspeak" />
        </attvalues>
      </node>
      <node id="l1mey112/stas" label="l1mey112/stas">
        <attvalues>
          <attvalue for="0" value="vlang,compiler,programming-language,stackbased,assembly,fasm,forth,nasm,x86-64,stas,freebsd,linux" />
        </attvalues>
      </node>
      <node id="seq-lang/seq" label="seq-lang/seq">
        <attvalues>
          <attvalue for="0" value="bioinformatics,computational-biology,genomics,programming-language,domain-specific-language,compiler,python" />
        </attvalues>
      </node>
      <node id="aarroyoc/scryer-playground" label="aarroyoc/scryer-playground">
        <attvalues>
          <attvalue for="0" value="prolog,webassembly" />
        </attvalues>
      </node>
      <node id="joshburgess/functional-typescript-playground" label="joshburgess/functional-typescript-playground">
        <attvalues>
          <attvalue for="0" value="typescript,fp,functional-programming" />
        </attvalues>
      </node>
      <node id="complexdb/zincbase" label="complexdb/zincbase">
        <attvalues>
          <attvalue for="0" value="knowledge-base,knowledge-graph,graph-embedding,prolog" />
        </attvalues>
      </node>
      <node id="pandeykartikey/goto" label="pandeykartikey/goto">
        <attvalues>
          <attvalue for="0" value="interpreter,golang,programming-language,scripting,repl" />
        </attvalues>
      </node>
      <node id="xingdl2007/gopl-solutions" label="xingdl2007/gopl-solutions">
        <attvalues>
          <attvalue for="0" value="programming-language,golang" />
        </attvalues>
      </node>
      <node id="abranhe/programming-languages-logos" label="abranhe/programming-languages-logos">
        <attvalues>
          <attvalue for="0" value="logos,svg,png,design,programming-language,programming-languages,programming-languages-logos" />
        </attvalues>
      </node>
      <node id="presidentbeef/brat" label="presidentbeef/brat">
        <attvalues>
          <attvalue for="0" value="lua,brat,luajit,programming-language,language" />
        </attvalues>
      </node>
      <node id="serkanyersen/underscore.py" label="serkanyersen/underscore.py">
        <attvalues>
          <attvalue for="0" value="underscorejs,underscore-library,python,pip,pypi,functools,functional-programming,javascript-port" />
        </attvalues>
      </node>
      <node id="mattn/anko" label="mattn/anko">
        <attvalues>
          <attvalue for="0" value="go,programming-language" />
        </attvalues>
      </node>
      <node id="carbon-language/carbon-lang" label="carbon-language/carbon-lang">
        <attvalues>
          <attvalue for="0" value="programming-language,carbon-lang,compiler,cpp,language,experimental,experimental-language" />
        </attvalues>
      </node>
      <node id="niqdev/scala-fp" label="niqdev/scala-fp">
        <attvalues>
          <attvalue for="0" value="scala,functional-programming" />
        </attvalues>
      </node>
      <node id="itsyourbedtime/orca" label="itsyourbedtime/orca">
        <attvalues>
          <attvalue for="0" value="livecoding,monome,norns,midi,programming-language,esoteric-language" />
        </attvalues>
      </node>
      <node id="syphon-lang/syphon" label="syphon-lang/syphon">
        <attvalues>
          <attvalue for="0" value="interpreter,programming-language,virtual-machine" />
        </attvalues>
      </node>
      <node id="tc39/proposal-function-helpers" label="tc39/proposal-function-helpers">
        <attvalues>
          <attvalue for="0" value="tc39,functional-programming,callback,function,javascript" />
        </attvalues>
      </node>
      <node id="cpc6128/LangageLinotte" label="cpc6128/LangageLinotte">
        <attvalues>
          <attvalue for="0" value="programming-language,french-language,french-education,francais,gplv3,editor,java,learn-to-code,natural-language-processing,natural-language,french,langage-de-programmation,panoramic-language" />
        </attvalues>
      </node>
      <node id="andrew-johnson-4/LSTS" label="andrew-johnson-4/LSTS">
        <attvalues>
          <attvalue for="0" value="ast,type-checking,theorem-prover,rust,category-theory,error-reporting,lexer,lint,parser,lambda-calculus,lambda-calculus-interpreter,assisted-reasoning,proof-assistant,dependent-types,refinement-types,compiler,lsts,programming-language" />
        </attvalues>
      </node>
      <node id="devsisters/shardcake" label="devsisters/shardcake">
        <attvalues>
          <attvalue for="0" value="functional-programming,messaging,scala,sharding,actor-model" />
        </attvalues>
      </node>
      <node id="Jfaler/Philosophy" label="Jfaler/Philosophy">
        <attvalues>
          <attvalue for="0" value="books,philosophy,logic,metaphysics,aesthetics,epistemology,politics,ethics,symbols,wisdom,mathematics,list,philosopher,nothing,thinking,truth,good,evil,morals,dialectic" />
        </attvalues>
      </node>
      <node id="FStarLang/FStar" label="FStarLang/FStar">
        <attvalues>
          <attvalue for="0" value="programming-language,verification,dependent-types,smt,theorem-proving,proof-assistant,ocaml,f-sharp,c-language,fstar" />
        </attvalues>
      </node>
      <node id="travisjungroth/trinary" label="travisjungroth/trinary">
        <attvalues>
          <attvalue for="0" value="logic,python,trinary" />
        </attvalues>
      </node>
      <node id="clojerl/clojerl" label="clojerl/clojerl">
        <attvalues>
          <attvalue for="0" value="clojure,erlang,programming-language,beam,erlang-vm" />
        </attvalues>
      </node>
      <node id="imba/imba" label="imba/imba">
        <attvalues>
          <attvalue for="0" value="programming-language,javascript,imba,dom,frontend,declarative,framework,ui" />
        </attvalues>
      </node>
      <node id="mateeeeeee/Ola" label="mateeeeeee/Ola">
        <attvalues>
          <attvalue for="0" value="compiler,lexer,llvm,llvm-backend,llvm-ir,parser,programming-language,recursive-descent-parser,semantic-analysis,toy-compiler,toy-programming-language,ast,object-oriented" />
        </attvalues>
      </node>
      <node id="Hitomis/FunGameRefresh" label="Hitomis/FunGameRefresh">
        <attvalues>
          <attvalue for="0" value="android,pull-to-refresh,functional-programming" />
        </attvalues>
      </node>
      <node id="Merlin04/truthtabl.es" label="Merlin04/truthtabl.es">
        <attvalues>
          <attvalue for="0" value="logic,truth-table,truth-table-generator,truth-tables,nextjs,ohm,proof-assistant,proof,symbolic-logic" />
        </attvalues>
      </node>
      <node id="wenyan-lang/book" label="wenyan-lang/book">
        <attvalues>
          <attvalue for="0" value="wenyan-lang,book,tutorial,programming-language,documentation,chinese,classical-chinese" />
        </attvalues>
      </node>
      <node id="AnswerDotAI/fastcore" label="AnswerDotAI/fastcore">
        <attvalues>
          <attvalue for="0" value="python,fastai,languages,developer-tools,data-structures,functional-programming,parallel-processing,dispatch,documentation-generator" />
        </attvalues>
      </node>
      <node id="Stevertus/mcscript" label="Stevertus/mcscript">
        <attvalues>
          <attvalue for="0" value="minecraft-script,programming-language,programming,minecraft,vanilla,node,cli,compiler" />
        </attvalues>
      </node>
      <node id="diatom-lang/diatom" label="diatom-lang/diatom">
        <attvalues>
          <attvalue for="0" value="programming-language,rust" />
        </attvalues>
      </node>
      <node id="NishanthSpShetty/crust" label="NishanthSpShetty/crust">
        <attvalues>
          <attvalue for="0" value="rust,rust-transpiler,programming-language" />
        </attvalues>
      </node>
      <node id="fnogatz/plammar" label="fnogatz/plammar">
        <attvalues>
          <attvalue for="0" value="swi-prolog,prolog,definite-clause-grammar,parser,serializer" />
        </attvalues>
      </node>
      <node id="wmannis/cl-gambol" label="wmannis/cl-gambol">
        <attvalues>
          <attvalue for="0" value="common-lisp,prolog" />
        </attvalues>
      </node>
      <node id="benweidig/a-functional-approach-to-java" label="benweidig/a-functional-approach-to-java">
        <attvalues>
          <attvalue for="0" value="book,functional-programming,java,object-oriented,oreilly" />
        </attvalues>
      </node>
      <node id="loredanacirstea/taylor" label="loredanacirstea/taylor">
        <attvalues>
          <attvalue for="0" value="ethereum,blockchain,lisp,functional-programming,types,specifications,computable-knowledge" />
        </attvalues>
      </node>
      <node id="virejdasani/pythOwO" label="virejdasani/pythOwO">
        <attvalues>
          <attvalue for="0" value="owo,python,uwu,virej,pythowo,pythuwu,programming-language,hacktoberfest,youtube,uwulang,hacktoberfest2022" />
        </attvalues>
      </node>
      <node id="baetheus/fun" label="baetheus/fun">
        <attvalues>
          <attvalue for="0" value="monad,typescript,deno,algebraic-data-types,higher-kinded-types,functor,option,either,task,effects,functional-programming" />
        </attvalues>
      </node>
      <node id="SystemFw/eidos" label="SystemFw/eidos">
        <attvalues>
          <attvalue for="0" value="scala,functional-programming,identifiers,type-safe,id,fp" />
        </attvalues>
      </node>
      <node id="doofin/differentiable-idris" label="doofin/differentiable-idris">
        <attvalues>
          <attvalue for="0" value="functional-programming,deep-learning,dependent-types,idris,pytorch" />
        </attvalues>
      </node>
      <node id="marvinborner/bruijn" label="marvinborner/bruijn">
        <attvalues>
          <attvalue for="0" value="balanced-ternary,de-bruijn,lambda-calculus,programming-language,abstract-machine,call-by-need,church-encoding,combinatory-logic" />
        </attvalues>
      </node>
      <node id="typelevel/spotted-leopards" label="typelevel/spotted-leopards">
        <attvalues>
          <attvalue for="0" value="scala,functional-programming,typelevel" />
        </attvalues>
      </node>
      <node id="fanx-dev/fanx" label="fanx-dev/fanx">
        <attvalues>
          <attvalue for="0" value="programming-language,language,fantom,compiler,virtual-machine,llvm,full-stack" />
        </attvalues>
      </node>
      <node id="LAMDASZ-ML/Awesome-Neuro-Symbolic-Learning-with-LLM" label="LAMDASZ-ML/Awesome-Neuro-Symbolic-Learning-with-LLM">
        <attvalues>
          <attvalue for="0" value="artificial-intelligence,large-language-models,machine-learning,neuro-symbolic,awesome,embodied-ai,first-order-logic,gpt-4o,knowledge-graph,llm-agent,logic-programming,neuro-network,papers,planning,reasoning,visual-reasoning,reinforcement-learning" />
        </attvalues>
      </node>
      <node id="jazz-lang/Jazz" label="jazz-lang/Jazz">
        <attvalues>
          <attvalue for="0" value="programming-language,jazz,systems-language,compiler,llvm,compile-time" />
        </attvalues>
      </node>
      <node id="amakukha/tmg" label="amakukha/tmg">
        <attvalues>
          <attvalue for="0" value="tmg,compiler-compiler,translation,programming-language,top-down-parser,software-archaeology,syntax-analysis,recursive-descent-parser,transmogrifier,bell-labs,mcilroy" />
        </attvalues>
      </node>
      <node id="rhysd/Dachs" label="rhysd/Dachs">
        <attvalues>
          <attvalue for="0" value="dog,compiler,programming-language,llvm,language,inu,go,cpp" />
        </attvalues>
      </node>
      <node id="Shen-Language/shen-sources" label="Shen-Language/shen-sources">
        <attvalues>
          <attvalue for="0" value="programming-language,shen,lisp,prolog,functional-programming,logic-programming,static-typing" />
        </attvalues>
      </node>
      <node id="zeroflag/punyforth" label="zeroflag/punyforth">
        <attvalues>
          <attvalue for="0" value="programming-language,forth,esp8266,microcontroller,raspberry-pi,concatenative-language,embedded-devices,iot" />
        </attvalues>
      </node>
      <node id="augustjune/canoe" label="augustjune/canoe">
        <attvalues>
          <attvalue for="0" value="scala,telegram,bot,functional-programming,fs2,cats-effect,cats" />
        </attvalues>
      </node>
      <node id="danlkv/tgflow" label="danlkv/tgflow">
        <attvalues>
          <attvalue for="0" value="bot,telegram,declarative-programming,functional-programming,framework" />
        </attvalues>
      </node>
      <node id="briancavalier/fx-ts" label="briancavalier/fx-ts">
        <attvalues>
          <attvalue for="0" value="algebraic-effects,functional-programming,effects,typescript" />
        </attvalues>
      </node>
      <node id="robotroutine/scriptum" label="robotroutine/scriptum">
        <attvalues>
          <attvalue for="0" value="functional-programming,polymorphism,algebraic-data-types,sum-types,tagged-unions,pure-function,monad,recursion,javascript,composition,function-composition,point-free,folding,transducers,purity,corecursion,catamorphism,anamorphism,monad-transformers,lazyness" />
        </attvalues>
      </node>
      <node id="0xGeorgii/SharpLogic" label="0xGeorgii/SharpLogic">
        <attvalues>
          <attvalue for="0" value="fsharp,mathematics,logic,dotnet,formula,propositional-logic,automate-inference,automate-reasoning,automate-teorem-proofs,intuitionistic-logic" />
        </attvalues>
      </node>
      <node id="hzhou/MyDef" label="hzhou/MyDef">
        <attvalues>
          <attvalue for="0" value="mydef,perl,refactor,paradigm,programming-language,metaprogramming" />
        </attvalues>
      </node>
      <node id="SandroMaglione/fpdart" label="SandroMaglione/fpdart">
        <attvalues>
          <attvalue for="0" value="dart,functional-programming,functional,dartlang,dart-package,flutter,flutter-package,dart-functional-programming,dart-functional,flutter-functional,fp-ts,cats,functional-programming-examples,functional-language,fpdart,flutter-favorite" />
        </attvalues>
      </node>
      <node id="slviajero/tinybasic" label="slviajero/tinybasic">
        <attvalues>
          <attvalue for="0" value="arduino,interpreter,c,programming-language,basic,embedded,arduino-library,basic-programming-language,esp32,esp8266,hardware,microcontroller,rp2040,iot,xmc,infineon,lgt8f328p,raspberry-pi-pico,seeeduino-xiao,stm32" />
        </attvalues>
      </node>
      <node id="Gwion/Gwion" label="Gwion/Gwion">
        <attvalues>
          <attvalue for="0" value="language,composition,programming-language,synthesis,sound,real-time,realtime-audio,compiler,music,audio,lang,chuck,synth,hacktoberfest,interpreter" />
        </attvalues>
      </node>
      <node id="sami2020pro/vile" label="sami2020pro/vile">
        <attvalues>
          <attvalue for="0" value="vile,lisp-dialect,virtual-machine,bytecode,lisp,interpreter,programming-language" />
        </attvalues>
      </node>
      <node id="vavr-io/vavr" label="vavr-io/vavr">
        <attvalues>
          <attvalue for="0" value="javaslang,java,functional-programming,object-functional,immutable-collections,persistent-collections,hacktoberfest" />
        </attvalues>
      </node>
      <node id="thosakwe/bullseye" label="thosakwe/bullseye">
        <attvalues>
          <attvalue for="0" value="dart,programming-language,functional-programming,compiler" />
        </attvalues>
      </node>
      <node id="fogfish/datalog" label="fogfish/datalog">
        <attvalues>
          <attvalue for="0" value="datalog,logic-programming,knowledge,erlang,semantic-web" />
        </attvalues>
      </node>
      <node id="matchilling/brexit" label="matchilling/brexit">
        <attvalues>
          <attvalue for="0" value="brexit,adventure-game,prolog" />
        </attvalues>
      </node>
      <node id="cbyad/either_option" label="cbyad/either_option">
        <attvalues>
          <attvalue for="0" value="dart,either-monad,option-monad,functional-programming,flutter,either,option,maybe,result" />
        </attvalues>
      </node>
      <node id="sharkdp/shell-functools" label="sharkdp/shell-functools">
        <attvalues>
          <attvalue for="0" value="shell,functional-programming,filesystem,string-manipulation,command-line" />
        </attvalues>
      </node>
      <node id="Jozty/Fae" label="Jozty/Fae">
        <attvalues>
          <attvalue for="0" value="functional-programming,javascript,typescript,deno,deno-module,denoland,functional-js,functional,krow,jozty,ramda,ramdajs,fae" />
        </attvalues>
      </node>
      <node id="pythological/kanren" label="pythological/kanren">
        <attvalues>
          <attvalue for="0" value="relational-programming,minikanren,logic-programming,symbolic-computation,constraint-logic-programming,clp" />
        </attvalues>
      </node>
      <node id="evertheylen/logicpy" label="evertheylen/logicpy">
        <attvalues>
          <attvalue for="0" value="prolog-implementation,python3,logic-programming" />
        </attvalues>
      </node>
      <node id="whistle-lang/whistle" label="whistle-lang/whistle">
        <attvalues>
          <attvalue for="0" value="whistle,programming-language,parser,compiler,wasm,hacktoberfest" />
        </attvalues>
      </node>
      <node id="malikpiara/logicola" label="malikpiara/logicola">
        <attvalues>
          <attvalue for="0" value="education,elearning,formal-logic,learning,logic,quizapp,logicola" />
        </attvalues>
      </node>
      <node id="baweaver/xf" label="baweaver/xf">
        <attvalues>
          <attvalue for="0" value="ruby,functional-programming" />
        </attvalues>
      </node>
      <node id="exekube/exekube" label="exekube/exekube">
        <attvalues>
          <attvalue for="0" value="docker,kubernetes-cluster,terraform,google-cloud,google-kubernetes-engine,infrastructure-as-code,declarative-programming,kubernetes,exekube,gitops" />
        </attvalues>
      </node>
      <node id="shfshanyue/fp-jargon-zh" label="shfshanyue/fp-jargon-zh">
        <attvalues>
          <attvalue for="0" value="fp,functional-programming" />
        </attvalues>
      </node>
      <node id="LambdaAlpha/airlang_rs" label="LambdaAlpha/airlang_rs">
        <attvalues>
          <attvalue for="0" value="programming-language,programming-languages,artificial-intelligence,formal-specification,logic-programming,logical-programming,proof-of-concept,specification-language,solver" />
        </attvalues>
      </node>
      <node id="tau-prolog/draw-derivation-trees" label="tau-prolog/draw-derivation-trees">
        <attvalues>
          <attvalue for="0" value="prolog,prolog-programming-language,prolog-application,derivation-tree,canvas,tau-prolog" />
        </attvalues>
      </node>
      <node id="yutopp/rill" label="yutopp/rill">
        <attvalues>
          <attvalue for="0" value="programming-language" />
        </attvalues>
      </node>
      <node id="InKnowWorks/IKW-GraphEngine" label="InKnowWorks/IKW-GraphEngine">
        <attvalues>
          <attvalue for="0" value="ontology,semantic-reasoning,knowledge-base,knowledge-graph,logic,logic-solver" />
        </attvalues>
      </node>
      <node id="Asabeneh/JavaScript-for-Everyone" label="Asabeneh/JavaScript-for-Everyone">
        <attvalues>
          <attvalue for="0" value="javascript,es5,es6,es7,dom,javascript-for-everyone,localstorage,cookies,functional-programming,arrow-functions,arrays,webdesign,js-questions,js-quiz,js-challenges,30daysofjavascript,30daysofreact" />
        </attvalues>
      </node>
      <node id="kubukoz/flawless" label="kubukoz/flawless">
        <attvalues>
          <attvalue for="0" value="testing,scala,cats-effect,fp,functional-programming,pure-fp" />
        </attvalues>
      </node>
      <node id="philzook58/egglog0" label="philzook58/egglog0">
        <attvalues>
          <attvalue for="0" value="rust,prolog,theorem-prover" />
        </attvalues>
      </node>
      <node id="inato/fp-ts-cheatsheet" label="inato/fp-ts-cheatsheet">
        <attvalues>
          <attvalue for="0" value="typescript,functional-programming,immutable,fp-ts,monads" />
        </attvalues>
      </node>
      <node id="fastify/fastify-funky" label="fastify/fastify-funky">
        <attvalues>
          <attvalue for="0" value="fastify,fastify-plugin,functional-programming" />
        </attvalues>
      </node>
      <node id="stevedonovan/gentle-intro" label="stevedonovan/gentle-intro">
        <attvalues>
          <attvalue for="0" value="rust,programming-language,tutorial" />
        </attvalues>
      </node>
      <node id="noprompt/meander" label="noprompt/meander">
        <attvalues>
          <attvalue for="0" value="term-rewriting,logic-programming,unification,pattern-matching,substitution,program-transformation" />
        </attvalues>
      </node>
      <node id="HowProgrammingWorks/Function" label="HowProgrammingWorks/Function">
        <attvalues>
          <attvalue for="0" value="iife,function,closure,functional-programming,abstraction,programming,university,code,learning,study,kpi,kiev,functor,engineering,example" />
        </attvalues>
      </node>
      <node id="tominated/system_f_omega" label="tominated/system_f_omega">
        <attvalues>
          <attvalue for="0" value="lambda-calculus,functional-programming,ocaml,system-f,system-f-omega,row-polymorphism" />
        </attvalues>
      </node>
      <node id="RadostinaIvanova/Expert-system-in-Prolog" label="RadostinaIvanova/Expert-system-in-Prolog">
        <attvalues>
          <attvalue for="0" value="prolog,prolog-programming-language,expert-system,goal-driven,backward-chaining,rule-based,expert-system-diagnosis,backward-chaining-prolog,expert-systems,artificial-intelligence" />
        </attvalues>
      </node>
      <node id="AmrDeveloper/Amun" label="AmrDeveloper/Amun">
        <attvalues>
          <attvalue for="0" value="compiler,cpp,llvm,programming-language,static-type-system,low-level-programming,type-inference,system-programming,language" />
        </attvalues>
      </node>
      <node id="devopshobbies/bash-script-templates" label="devopshobbies/bash-script-templates">
        <attvalues>
          <attvalue for="0" value="bash-script,bash,linux,terminal,tutorial,programming-language" />
        </attvalues>
      </node>
      <node id="jaalonso/Lecturas_GLC" label="jaalonso/Lecturas_GLC">
        <attvalues>
          <attvalue for="0" value="haskell,functional-programming,itp,isabelle-hol,coq,leanprover,prolog,logic,logic-programming" />
        </attvalues>
      </node>
      <node id="triska/simsttab" label="triska/simsttab">
        <attvalues>
          <attvalue for="0" value="timetable,timetabling-engine,school,prolog,clp,constraint-programming" />
        </attvalues>
      </node>
      <node id="Wafelack/orion" label="Wafelack/orion">
        <attvalues>
          <attvalue for="0" value="language,orion,programming-language,lisp" />
        </attvalues>
      </node>
      <node id="xmonader/prolog-rands" label="xmonader/prolog-rands">
        <attvalues>
          <attvalue for="0" value="prolog,puzzles,riddles,constraint-satisfaction-problem" />
        </attvalues>
      </node>
      <node id="unisonweb/unison" label="unisonweb/unison">
        <attvalues>
          <attvalue for="0" value="haskell,programming-language,unison,unison-language,hacktoberfest" />
        </attvalues>
      </node>
      <node id="mattwparas/steel" label="mattwparas/steel">
        <attvalues>
          <attvalue for="0" value="rust,racket,transducers,scripting-language,contracts,programming-language,lisp,scheme" />
        </attvalues>
      </node>
      <node id="stylewarning/cl-algebraic-data-type" label="stylewarning/cl-algebraic-data-type">
        <attvalues>
          <attvalue for="0" value="common-lisp,algebraic-data-types,functional-programming" />
        </attvalues>
      </node>
      <node id="47degrees/helios" label="47degrees/helios">
        <attvalues>
          <attvalue for="0" value="json,json-parser,functional,functional-programming,kotlin,kotlin-library,kotlin-dsl" />
        </attvalues>
      </node>
      <node id="neohaskell/NeoHaskell" label="neohaskell/NeoHaskell">
        <attvalues>
          <attvalue for="0" value="ai,beginner-friendly,command-line,concurrency,developer-experience,domain-driven-design,event-sourcing,functional-programming,haskell,mobile,programming-language,python,neohaskell" />
        </attvalues>
      </node>
      <node id="jiezhoucs/must-read" label="jiezhoucs/must-read">
        <attvalues>
          <attvalue for="0" value="security,memory-safety,program-analysis,programming-language,compiler,c,rust,isolation" />
        </attvalues>
      </node>
      <node id="benji6/virtual-audio-graph" label="benji6/virtual-audio-graph">
        <attvalues>
          <attvalue for="0" value="audio,functional-programming,declarative,audiocontext,audiograph,audionode,audioparam,webaudio,webaudioapi,webaudio-api,audioworklet,audio-worklet,react" />
        </attvalues>
      </node>
      <node id="Comcast/ip4s" label="Comcast/ip4s">
        <attvalues>
          <attvalue for="0" value="scala,scalajs,functional-programming" />
        </attvalues>
      </node>
      <node id="c3d/xl" label="c3d/xl">
        <attvalues>
          <attvalue for="0" value="compiler,compilers-design,compiler-design,programming-language,functional-languages,dialects,extensible-language,domain-specific-language,metaprogramming,homoiconic,extension-language,programming-languages,xl-parse-tree,xl-language,rewrites" />
        </attvalues>
      </node>
      <node id="JakkuSakura/SHLL" label="JakkuSakura/SHLL">
        <attvalues>
          <attvalue for="0" value="compiler,programming-language" />
        </attvalues>
      </node>
      <node id="HackerFoo/poprc" label="HackerFoo/poprc">
        <attvalues>
          <attvalue for="0" value="language,popr,popr-compiler,compiler,concatenative,functional,logic-programming,non-deterministic,partial-evaluators,dependent-types,supercompiler,linear-logic,verilog,high-level-synthesis" />
        </attvalues>
      </node>
      <node id="baweaver/mf" label="baweaver/mf">
        <attvalues>
          <attvalue for="0" value="ruby,functional-programming" />
        </attvalues>
      </node>
      <node id="mit-plv/timl" label="mit-plv/timl">
        <attvalues>
          <attvalue for="0" value="functional-programming,time-complexity,standard-ml,sml,mlton" />
        </attvalues>
      </node>
      <node id="abuseofnotation/category-theory-illustrated" label="abuseofnotation/category-theory-illustrated">
        <attvalues>
          <attvalue for="0" value="book,category-theory,functional-programming,math,mathematics,books" />
        </attvalues>
      </node>
      <node id="CSML-by-Clevy/csml-engine" label="CSML-by-Clevy/csml-engine">
        <attvalues>
          <attvalue for="0" value="rust,interpreter,language,chatbot,csml,programming-language" />
        </attvalues>
      </node>
      <node id="ehmicky/wild-wild-path" label="ehmicky/wild-wild-path">
        <attvalues>
          <attvalue for="0" value="nodejs,javascript,map,json,library,algorithm,typescript,parsing,functional-programming,regex,regexp,filter,glob,regular-expression,path,recursion,data-structures,wildcard,globbing,globstar" />
        </attvalues>
      </node>
      <node id="typeofweb-org/schema" label="typeofweb-org/schema">
        <attvalues>
          <attvalue for="0" value="typescript,validation,validation-library,schema,jsonschema,ts,validations,functional-programming,hacktoberfest" />
        </attvalues>
      </node>
      <node id="ekaf/wordnet-prolog" label="ekaf/wordnet-prolog">
        <attvalues>
          <attvalue for="0" value="princeton-wordnet,prolog,wordnet,relational-databases" />
        </attvalues>
      </node>
      <node id="8451/labrea" label="8451/labrea">
        <attvalues>
          <attvalue for="0" value="declarative-programming,functional-programming,python" />
        </attvalues>
      </node>
      <node id="xxllexx/babel-plugin-pattern-matching" label="xxllexx/babel-plugin-pattern-matching">
        <attvalues>
          <attvalue for="0" value="babel,babel-plugin,transform,pattern-matching,functional-programming" />
        </attvalues>
      </node>
      <node id="CGCL-codes/naturalcc" label="CGCL-codes/naturalcc">
        <attvalues>
          <attvalue for="0" value="natural-language-processing,programming-language,deep-learning,toolkit" />
        </attvalues>
      </node>
      <node id="White-Green/kirl-lang" label="White-Green/kirl-lang">
        <attvalues>
          <attvalue for="0" value="programming-language,language,scripting-language,statically-typed" />
        </attvalues>
      </node>
      <node id="rvikmanis/redux-fp" label="rvikmanis/redux-fp">
        <attvalues>
          <attvalue for="0" value="redux,functional-programming,reducer,utility-library,helpers,point-free" />
        </attvalues>
      </node>
      <node id="oxidizing/sihl" label="oxidizing/sihl">
        <attvalues>
          <attvalue for="0" value="web,framework,functional-programming,web-framework,ocaml,functional-web-development,modular" />
        </attvalues>
      </node>
      <node id="merrymercy/awesome-tensor-compilers" label="merrymercy/awesome-tensor-compilers">
        <attvalues>
          <attvalue for="0" value="compiler,tensor,deep-learning,machine-learning,high-performance-computing,code-generation,programming-language" />
        </attvalues>
      </node>
      <node id="metaopt/torchopt" label="metaopt/torchopt">
        <attvalues>
          <attvalue for="0" value="functional-programming,optimizer,pytorch,meta-reinforcement-learning,deep-learning,meta-learning,meta-rl,bilevel-optimization,differentiable-optimization,implicit-differentiation,optimization,differentiable-programming,automatic-differentiation" />
        </attvalues>
      </node>
      <node id="voltrevo/ValueScript" label="voltrevo/ValueScript">
        <attvalues>
          <attvalue for="0" value="functional-programming,javascript,rust,typescript" />
        </attvalues>
      </node>
      <node id="fosskers/cl-transducers" label="fosskers/cl-transducers">
        <attvalues>
          <attvalue for="0" value="functional-programming,lisp,transducers" />
        </attvalues>
      </node>
      <node id="yashbonde/rasp" label="yashbonde/rasp">
        <attvalues>
          <attvalue for="0" value="transformers,programming-language" />
        </attvalues>
      </node>
      <node id="VladKopanev/cats-saga" label="VladKopanev/cats-saga">
        <attvalues>
          <attvalue for="0" value="fp,functional-programming,scala,saga,saga-pattern,sagas,cats,cats-effect,concurrency,distributed-systems" />
        </attvalues>
      </node>
      <node id="owo-lang/minitt-rs" label="owo-lang/minitt-rs">
        <attvalues>
          <attvalue for="0" value="type-theory,dependent-types,programming-language" />
        </attvalues>
      </node>
      <node id="higherkindness/mu-scala" label="higherkindness/mu-scala">
        <attvalues>
          <attvalue for="0" value="scala,functional-programming,monads,rpc,algebra,protocol,tagless-final,mu" />
        </attvalues>
      </node>
      <node id="tomhea/flip-jump" label="tomhea/flip-jump">
        <attvalues>
          <attvalue for="0" value="esoteric-programming-language,programming-language,oisc,esolang,macro-assembler,compiler" />
        </attvalues>
      </node>
      <node id="SaptakBhoumik/Peregrine" label="SaptakBhoumik/Peregrine">
        <attvalues>
          <attvalue for="0" value="programming-language,language,compiler,peregrine,peregrine-lang" />
        </attvalues>
      </node>
      <node id="eshelyaron/debug_adapter" label="eshelyaron/debug_adapter">
        <attvalues>
          <attvalue for="0" value="debugger,emacs,prolog,logic-programming,swipl,swi-prolog" />
        </attvalues>
      </node>
      <node id="dschmenk/PLASMA" label="dschmenk/PLASMA">
        <attvalues>
          <attvalue for="0" value="retrocomputing,programming-language,apple2,6502" />
        </attvalues>
      </node>
      <node id="hkust-taco/mlstruct" label="hkust-taco/mlstruct">
        <attvalues>
          <attvalue for="0" value="functional-programming,type-inference" />
        </attvalues>
      </node>
      <node id="Kushal997-das/C-PROGRAM" label="Kushal997-das/C-PROGRAM">
        <attvalues>
          <attvalue for="0" value="cprogramming-language,programming,logic" />
        </attvalues>
      </node>
      <node id="pedrotcaraujo/wobbuffetch" label="pedrotcaraujo/wobbuffetch">
        <attvalues>
          <attvalue for="0" value="reactive-programming,fetch-api,functional-programming,async,http-client" />
        </attvalues>
      </node>
      <node id="iostreamer-X/FuncShell" label="iostreamer-X/FuncShell">
        <attvalues>
          <attvalue for="0" value="functional-programming,haskell,shell" />
        </attvalues>
      </node>
      <node id="lawndoc/jaws" label="lawndoc/jaws">
        <attvalues>
          <attvalue for="0" value="programming-language,flex-bison,compiler,virtual-machine,security-research,malware-research,interpreter,interpreted-programming-language,polyglot,c-programming" />
        </attvalues>
      </node>
      <node id="sunjay/brain" label="sunjay/brain">
        <attvalues>
          <attvalue for="0" value="brainfuck-interpreter,brain,rust,brainfuck-programs,brainfuck,esoteric-programming-language,language,programming-language" />
        </attvalues>
      </node>
      <node id="acquitelol/elle" label="acquitelol/elle">
        <attvalues>
          <attvalue for="0" value="c-style-lang,compiler,educational,language,rust,elle,lexer,lexical-analysis,qbe,procedural,parser,programming-language" />
        </attvalues>
      </node>
      <node id="EricZinda/InductorHtn" label="EricZinda/InductorHtn">
        <attvalues>
          <attvalue for="0" value="ai,htn,cpp,python,python3,python-3,python-library,hierarchical-task-network,c-plus-plus,cplusplus,cpp-library,prolog-implementation" />
        </attvalues>
      </node>
      <node id="gcanti/fp-ts-local-storage" label="gcanti/fp-ts-local-storage">
        <attvalues>
          <attvalue for="0" value="fp-ts,localstorage,functional-programming,typescript" />
        </attvalues>
      </node>
      <node id="ps0305/Javascript-Algorithms-And-Data-Structures" label="ps0305/Javascript-Algorithms-And-Data-Structures">
        <attvalues>
          <attvalue for="0" value="javascript,es6,object-oriented-programming,basic-algorithm,debugging,functional-programming,datastructures-algorithms,scripting-language,javascript-algorithms,hacktoberfest2020,hacktoberfest,algorithm-scripting,algorithms,data-structures,hactoberfest2023,hactoberfest2024" />
        </attvalues>
      </node>
      <node id="cicada-lang/cicada-solo" label="cicada-lang/cicada-solo">
        <attvalues>
          <attvalue for="0" value="programming-language,dependent-type-theory,language,repl,dependent-types,dependent-record-types,theorem-prover,prover,interactive-theorem-proving,type-theory,type-system,cicada" />
        </attvalues>
      </node>
      <node id="wyvernSemi/vproc" label="wyvernSemi/vproc">
        <attvalues>
          <attvalue for="0" value="processor,verilog,verification,pli,simulation-element,c,vhdl,asic-verification,codesign,cosimulation,cpp,dpi,dpi-c,fpga,logic,logic-simulation,python,systemverilog,vhpidirect,vpi" />
        </attvalues>
      </node>
      <node id="timkindberg/egghead-recompose" label="timkindberg/egghead-recompose">
        <attvalues>
          <attvalue for="0" value="eggheadio,react,recompose,functional-programming,higher-order-component,lesson,course" />
        </attvalues>
      </node>
      <node id="smpoulsen/terp" label="smpoulsen/terp">
        <attvalues>
          <attvalue for="0" value="lisp,programming-language,interpreter,ml,hindley-milner,higher-kinded-types" />
        </attvalues>
      </node>
      <node id="pyx/hymn" label="pyx/hymn">
        <attvalues>
          <attvalue for="0" value="monad,lisp,python,functional-programming,macros,hy" />
        </attvalues>
      </node>
      <node id="racketscript/racketscript" label="racketscript/racketscript">
        <attvalues>
          <attvalue for="0" value="racket,compiler,javascript,programming-language" />
        </attvalues>
      </node>
      <node id="kubukoz/sup" label="kubukoz/sup">
        <attvalues>
          <attvalue for="0" value="scala,cats,cats-effect,healthcheck,health,functional,fp,functional-programming,typelevel" />
        </attvalues>
      </node>
      <node id="advent-of-craft/2023" label="advent-of-craft/2023">
        <attvalues>
          <attvalue for="0" value="craft,tdd,approval-testing,architecture,clean-code,design,example-mapping,functional-programming,legacy-code,property-based-testing,refactoring,solid,unit-testing,xp,clean-testing" />
        </attvalues>
      </node>
      <node id="gioblu/BIPLAN" label="gioblu/BIPLAN">
        <attvalues>
          <attvalue for="0" value="esoteric-language,esolang,programming-language,interpreter,compiler,arduino,linux" />
        </attvalues>
      </node>
      <node id="geekyayush/bend-lang" label="geekyayush/bend-lang">
        <attvalues>
          <attvalue for="0" value="bend,programming-language,bend-lang,bend-language,parallel-programming-language" />
        </attvalues>
      </node>
      <node id="01mf02/kontroli-rs" label="01mf02/kontroli-rs">
        <attvalues>
          <attvalue for="0" value="logic,rust,dependent-types,typechecker,dedukti" />
        </attvalues>
      </node>
      <node id="pyos/dg" label="pyos/dg">
        <attvalues>
          <attvalue for="0" value="language,python,programming-language" />
        </attvalues>
      </node>
      <node id="triska/clpb" label="triska/clpb">
        <attvalues>
          <attvalue for="0" value="clp,prolog,constraints,bdd,constraint-programming,independent-sets,matchsticks-puzzle,satisfiability,sat" />
        </attvalues>
      </node>
      <node id="ren-lang/compiler" label="ren-lang/compiler">
        <attvalues>
          <attvalue for="0" value="functional-programming,compiler,javascript,programming-language,elm,transpiler,compile-to-js" />
        </attvalues>
      </node>
      <node id="Attempto/APE" label="Attempto/APE">
        <attvalues>
          <attvalue for="0" value="swi-prolog,ace,attempto,cnl,nlp" />
        </attvalues>
      </node>
      <node id="UniversalPython/UniversalPython" label="UniversalPython/UniversalPython">
        <attvalues>
          <attvalue for="0" value="python,programming-language,localization,multilingual,python3,transpiler" />
        </attvalues>
      </node>
      <node id="jegutierrez/functional_patterns_go" label="jegutierrez/functional_patterns_go">
        <attvalues>
          <attvalue for="0" value="golang,go,functional-programming,meetup" />
        </attvalues>
      </node>
      <node id="undefinedschool/notes" label="undefinedschool/notes">
        <attvalues>
          <attvalue for="0" value="javascript,nodejs,react,redux,fullstack,fullstack-javascript,es6,express,postgresql,oop,functional-programming,api,dom,tailwindcss,sql,tips-and-tricks,job-search" />
        </attvalues>
      </node>
      <node id="nunchaku-inria/nunchaku" label="nunchaku-inria/nunchaku">
        <attvalues>
          <attvalue for="0" value="model-finding,sat,cvc4,higher-order,logic,proof-assistant,isabelle,hol" />
        </attvalues>
      </node>
      <node id="gergoerdi/alef" label="gergoerdi/alef">
        <attvalues>
          <attvalue for="0" value="common-lisp,functional-programming,lazy-evaluation,graph-reduction" />
        </attvalues>
      </node>
      <node id="reddy-lab-code-research/PPOCoder" label="reddy-lab-code-research/PPOCoder">
        <attvalues>
          <attvalue for="0" value="code-generation,deep-reinforcement-learning,language-model,programming-language" />
        </attvalues>
      </node>
      <node id="Spydr06/logicrs" label="Spydr06/logicrs">
        <attvalues>
          <attvalue for="0" value="boolean-algebra,boolean-logic,circuit,gates,gtk,gtk4,hacktoberfest,hacktoberfest2023,libadwaita,libadwaita-rs,logic,logic-gates,rust,simulation,simulator,logicrs" />
        </attvalues>
      </node>
      <node id="SamirPaulb/Java" label="SamirPaulb/Java">
        <attvalues>
          <attvalue for="0" value="java,java8,programming-language,code,java9,tutorials,java-programming,project-template" />
        </attvalues>
      </node>
      <node id="v0idzdev/bb-bot" label="v0idzdev/bb-bot">
        <attvalues>
          <attvalue for="0" value="discord,bot,discord-bot,discord-py,discord-music-bot,discord-admin-bot,24-7-music-bot,24-7,24-7-hosting,discord-mod,discord-moderation-bot,discord-api,python-3,procedural,procedural-programming,functional-programming,google-cloud,gcp,gcp-compute,gcp-compute-engine" />
        </attvalues>
      </node>
      <node id="dbrattli/aioreactive" label="dbrattli/aioreactive">
        <attvalues>
          <attvalue for="0" value="rxpy,async,asyncio,streams,asynciterator,expression,functional,functional-programming" />
        </attvalues>
      </node>
      <node id="buntec/ff4s" label="buntec/ff4s">
        <attvalues>
          <attvalue for="0" value="scalajs,scala,frontend,functional-programming,cats-effect" />
        </attvalues>
      </node>
      <node id="rubycocos/cocos" label="rubycocos/cocos">
        <attvalues>
          <attvalue for="0" value="ruby,gems,cocos,commons,prelude,prolog" />
        </attvalues>
      </node>
      <node id="BedirT/ACM-ICPC-Preparation" label="BedirT/ACM-ICPC-Preparation">
        <attvalues>
          <attvalue for="0" value="algorithm,curriculum,programming-language,acm-icpc,competitive-programming" />
        </attvalues>
      </node>
      <node id="jblang/bbcbasic-z80" label="jblang/bbcbasic-z80">
        <attvalues>
          <attvalue for="0" value="bbc-basic,basic,programming-language,z80,rc2014,cpm,tms9918a,tms9918" />
        </attvalues>
      </node>
      <node id="yeslogic/fathom" label="yeslogic/fathom">
        <attvalues>
          <attvalue for="0" value="data-description-language,binary-format,language,statically-typed,declarative,parser,rust,dsl,binary-data,type-system,type-checker,dependent-types,dependent-record-types,compiler,programming-language" />
        </attvalues>
      </node>
      <node id="Asiatik/codezilla" label="Asiatik/codezilla">
        <attvalues>
          <attvalue for="0" value="algorithm,data-structures,java,javascript,c-plus-plus,c,programming,hacktoberfest2018,hacktoberfest,functional-programming,python,python3" />
        </attvalues>
      </node>
      <node id="NucleoidAI/Nucleoid" label="NucleoidAI/Nucleoid">
        <attvalues>
          <attvalue for="0" value="node,javascript,neuro-symbolic-ai,neuro-symbolic,reasoning,semantic-reasoning,symbolic,reasoning-engine,semantic-reasoner,logic,logic-programming,expert-system,knowledge-base,knowledge,rag,knowledge-graph,graph-rag,neuro-symbolic-learning" />
        </attvalues>
      </node>
      <node id="covscript/covscript" label="covscript/covscript">
        <attvalues>
          <attvalue for="0" value="programming-language,cross-platform,covscript,interpreter,cni,compiler" />
        </attvalues>
      </node>
      <node id="paradigmxyz/solar" label="paradigmxyz/solar">
        <attvalues>
          <attvalue for="0" value="ethereum,evm,solc,solidity,compiler,yul,programming-language" />
        </attvalues>
      </node>
      <node id="bkkothari2255/Programming_In_Java_NPTEL" label="bkkothari2255/Programming_In_Java_NPTEL">
        <attvalues>
          <attvalue for="0" value="java,java-8,jdk8,programming-language,nptel,solutions,jdbc,calculator,java-nptel" />
        </attvalues>
      </node>
      <node id="RauliL/plorth" label="RauliL/plorth">
        <attvalues>
          <attvalue for="0" value="programming-language,forth,c-plus-plus,interpreter,scripting-language,plorth" />
        </attvalues>
      </node>
      <node id="c-cube/datalog" label="c-cube/datalog">
        <attvalues>
          <attvalue for="0" value="datalog,prolog,ocaml,logic-programming,memoization" />
        </attvalues>
      </node>
      <node id="cyclejs/cyclejs" label="cyclejs/cyclejs">
        <attvalues>
          <attvalue for="0" value="framework,javascript,typescript,reactive-programming,rxjs,cyclejs,functional-programming,hacktoberfest" />
        </attvalues>
      </node>
      <node id="TarsLab/mostly-adequate-guide-video-zh" label="TarsLab/mostly-adequate-guide-video-zh">
        <attvalues>
          <attvalue for="0" value="functional-programming,javascript,tutorial,youtube,mostly-adequate-guide" />
        </attvalues>
      </node>
      <node id="consultoria-sap/ABAP" label="consultoria-sap/ABAP">
        <attvalues>
          <attvalue for="0" value="abap,sap,consulting,programming-language" />
        </attvalues>
      </node>
      <node id="linkml/owlstar" label="linkml/owlstar">
        <attvalues>
          <attvalue for="0" value="rdf,semweb,owl,rdfstar,fol,knowledge-graph,probabilistic-models,logic,semantics" />
        </attvalues>
      </node>
      <node id="neysofu/tyche" label="neysofu/tyche">
        <attvalues>
          <attvalue for="0" value="statistics,probability-distribution,probability-calculator,functional-programming" />
        </attvalues>
      </node>
      <node id="luxe/unilang" label="luxe/unilang">
        <attvalues>
          <attvalue for="0" value="programming-language,programming-concepts,language,ide,unilang,markup-language,natural-language,unifying-language,nosyntax,transcompiler,treeview,tree-editor" />
        </attvalues>
      </node>
      <node id="explosion/thinc" label="explosion/thinc">
        <attvalues>
          <attvalue for="0" value="machine-learning,deep-learning,artificial-intelligence,ai,python,nlp,natural-language-processing,spacy,machine-learning-library,type-checking,functional-programming,pytorch,tensorflow,mxnet,jax" />
        </attvalues>
      </node>
      <node id="jmcardon/tsec" label="jmcardon/tsec">
        <attvalues>
          <attvalue for="0" value="scala,cryptography,functional-programming,jca" />
        </attvalues>
      </node>
      <node id="javadev/underscore-java" label="javadev/underscore-java">
        <attvalues>
          <attvalue for="0" value="java,underscore,javascript,functional-programming,xml,json,xml-to-json,json-to-xml,java-xmlbuilder,xmlbuilder,json-to-xml-java,xml-to-json-java,json-to-xml-converter" />
        </attvalues>
      </node>
      <node id="EntilZha/PyFunctional" label="EntilZha/PyFunctional">
        <attvalues>
          <attvalue for="0" value="python,datascience,pipeline,data,functional-programming" />
        </attvalues>
      </node>
      <node id="stdgregwar/elve" label="stdgregwar/elve">
        <attvalues>
          <attvalue for="0" value="visualisation,circuit,logic,logic-design,logic-circuit,graph,nodes,plugin,extensible,extendable,qmake" />
        </attvalues>
      </node>
      <node id="RyanMarcus/vulcan" label="RyanMarcus/vulcan">
        <attvalues>
          <attvalue for="0" value="javascript,proof,proof-assistant,logic" />
        </attvalues>
      </node>
      <node id="dafengzhen/bootstrap-react-logic" label="dafengzhen/bootstrap-react-logic">
        <attvalues>
          <attvalue for="0" value="bootstrap,logic,react,typescript" />
        </attvalues>
      </node>
      <node id="ptarau/pypro" label="ptarau/pypro">
        <attvalues>
          <attvalue for="0" value="nested-tuples,tuple-mining,unification,python3,prolog,interpreter" />
        </attvalues>
      </node>
      <node id="VanHakobyan/SWI-Prolog" label="VanHakobyan/SWI-Prolog">
        <attvalues>
          <attvalue for="0" value="prolog,prolog-programming-language,swi-prolog,logical-programming" />
        </attvalues>
      </node>
      <node id="newspeaklanguage/newspeak" label="newspeaklanguage/newspeak">
        <attvalues>
          <attvalue for="0" value="newspeak,programming-language,live-programming,capabilities,actors,mirrors,modularity" />
        </attvalues>
      </node>
      <node id="dibyendumajumdar/ravi" label="dibyendumajumdar/ravi">
        <attvalues>
          <attvalue for="0" value="lua,jit,programming-language,mirjit,c" />
        </attvalues>
      </node>
      <node id="patoline/patoline" label="patoline/patoline">
        <attvalues>
          <attvalue for="0" value="typesetting-system,functional-programming,document-generation,multiple-targets" />
        </attvalues>
      </node>
      <node id="lambdaclass/cairo-vm" label="lambdaclass/cairo-vm">
        <attvalues>
          <attvalue for="0" value="blockchain,compiler,programming-language,cryptography,rust,zkp,stark" />
        </attvalues>
      </node>
      <node id="mint-lang/mint" label="mint-lang/mint">
        <attvalues>
          <attvalue for="0" value="mint-lang,language,compiler,programming-language,compile-to-js" />
        </attvalues>
      </node>
      <node id="dmstocking/support-optional" label="dmstocking/support-optional">
        <attvalues>
          <attvalue for="0" value="backports,functional-programming,android,java,optional" />
        </attvalues>
      </node>
      <node id="yuce/pyswip" label="yuce/pyswip">
        <attvalues>
          <attvalue for="0" value="python,prolog,swi-prolog,artificial-intelligence,expert-systems,natural-language-processing,robotics,logic-programming" />
        </attvalues>
      </node>
      <node id="Utkarsh1504/DSA-Java" label="Utkarsh1504/DSA-Java">
        <attvalues>
          <attvalue for="0" value="java,data-structures,algorithms,coding-challenge,interview-preparation,dsa,competitiveprogramming,hacktoberfest,good-first-issue,hacktoberfest-accepted,begginer-friendly,first-time,programming,programming-language,hacktoberfest-starter,hacktoberfest2023" />
        </attvalues>
      </node>
      <node id="rzese/trill" label="rzese/trill">
        <attvalues>
          <attvalue for="0" value="probabilistic-knowledge-bases,tableau-reasoner,prolog,description-logics,axiom-pinpointing,probabilistic-description-logics,trill" />
        </attvalues>
      </node>
      <node id="Kaljurand/owl-verbalizer" label="Kaljurand/owl-verbalizer">
        <attvalues>
          <attvalue for="0" value="owl,swi-prolog,ace,web-ontology-language" />
        </attvalues>
      </node>
      <node id="zero-one-group/fxl" label="zero-one-group/fxl">
        <attvalues>
          <attvalue for="0" value="spreadsheet,clojure-library,excel,xlsx,data-oriented,functional-programming,data" />
        </attvalues>
      </node>
      <node id="baik-lang/baik-next" label="baik-lang/baik-next">
        <attvalues>
          <attvalue for="0" value="programming-language,indonesian-language,lexical-analyzer,rust-lang" />
        </attvalues>
      </node>
      <node id="Herb-AI/HerbSWIPL.jl" label="Herb-AI/HerbSWIPL.jl">
        <attvalues>
          <attvalue for="0" value="logic-programming,prolog,artificial-intelligence,automated-reasoning,julia,logic" />
        </attvalues>
      </node>
      <node id="eBay/oja" label="eBay/oja">
        <attvalues>
          <attvalue for="0" value="nodejs,dependency-injection,structure,logic,javascript,middleware,discovery-service" />
        </attvalues>
      </node>
      <node id="goplus/c2go" label="goplus/c2go">
        <attvalues>
          <attvalue for="0" value="c,c2go,go,golang,goplus,gop,programming-language" />
        </attvalues>
      </node>
      <node id="felixangell/kpd" label="felixangell/kpd">
        <attvalues>
          <attvalue for="0" value="programming-language,compiler" />
        </attvalues>
      </node>
      <node id="owo-lang/voile-rs" label="owo-lang/voile-rs">
        <attvalues>
          <attvalue for="0" value="dependent-types,extensible,programming-language,type-theory" />
        </attvalues>
      </node>
      <node id="lechatthecat/marie" label="lechatthecat/marie">
        <attvalues>
          <attvalue for="0" value="rust,programming-language,scripting-language,cranelift,cranelift-jit,craneliftjit" />
        </attvalues>
      </node>
      <node id="xebia-functional/second-bridge" label="xebia-functional/second-bridge">
        <attvalues>
          <attvalue for="0" value="swift,framework,functional-programming,data-types,functions,operators,swiftz,cocoapods" />
        </attvalues>
      </node>
      <node id="DevTeam/Immutype" label="DevTeam/Immutype">
        <attvalues>
          <attvalue for="0" value="immutability,csharp-sourcegenerator,dotnet,functional,functional-programming" />
        </attvalues>
      </node>
      <node id="vain0x/milone-lang" label="vain0x/milone-lang">
        <attvalues>
          <attvalue for="0" value="language,programming-language,compiler,compile-to-c,fsharp,hobby" />
        </attvalues>
      </node>
      <node id="Grisshink/scrap" label="Grisshink/scrap">
        <attvalues>
          <attvalue for="0" value="c,programming-language,raylib,scrap,scratch" />
        </attvalues>
      </node>
      <node id="khoi-backyard/SwiftlyExt" label="khoi-backyard/SwiftlyExt">
        <attvalues>
          <attvalue for="0" value="swift,carthage,cocoapods,xcode,cocoadocs,extension,extensions,functional-programming,functional,swift-3,swift-library,swift-package-manager,swift-framework,swift3" />
        </attvalues>
      </node>
      <node id="nicbarker/river" label="nicbarker/river">
        <attvalues>
          <attvalue for="0" value="structure-editor,projectional-editor,experimental,assembly,assembly-language,programming-language" />
        </attvalues>
      </node>
      <node id="CoNarrative/precept" label="CoNarrative/precept">
        <attvalues>
          <attvalue for="0" value="rules,clojure,clojurescript,functional-relational-programming,declarative-programming,functional-reactive-programming,logic-programming" />
        </attvalues>
      </node>
      <node id="cdiggins/heron-language" label="cdiggins/heron-language">
        <attvalues>
          <attvalue for="0" value="language,programming-language,typed-language,javascript,3d,3d-graphics,webgl,heron,type-inference" />
        </attvalues>
      </node>
      <node id="OpenCircuits/OpenCircuits" label="OpenCircuits/OpenCircuits">
        <attvalues>
          <attvalue for="0" value="circuits,typescript,designer,circuit-simulator,simulator,logic,logic-gates,digital-circuits,education,digital-circuit-design,hacktoberfest,circuit" />
        </attvalues>
      </node>
      <node id="IBM/ULKB" label="IBM/ULKB">
        <attvalues>
          <attvalue for="0" value="knowledge-graph,logic,prover" />
        </attvalues>
      </node>
      <node id="ETHproductions/japt" label="ETHproductions/japt">
        <attvalues>
          <attvalue for="0" value="javascript,esolang,golfing-language,programming-language" />
        </attvalues>
      </node>
      <node id="tidyverse/purrr" label="tidyverse/purrr">
        <attvalues>
          <attvalue for="0" value="r,functional-programming" />
        </attvalues>
      </node>
      <node id="gleam-lang/gleam" label="gleam-lang/gleam">
        <attvalues>
          <attvalue for="0" value="gleam,programming-language,compiler,erlang,statically-typed" />
        </attvalues>
      </node>
      <node id="The-Young-Programmer/C-CPP-Programming" label="The-Young-Programmer/C-CPP-Programming">
        <attvalues>
          <attvalue for="0" value="c,c-programming-project,cplusplus,cprogramming,cpp-programming-project,c-course,c-tutorials,cpp,cpp-course,cpp-tutorials,cpp-gui,gui-application,nemonet,programming-language,tutorial,nemonet-typ,nemonet-cpp,typ-cpp,netlify,programming" />
        </attvalues>
      </node>
      <node id="triska/clpfd" label="triska/clpfd">
        <attvalues>
          <attvalue for="0" value="constraint-programming,integer-arithmetic,clp,prolog,constraints,teaching" />
        </attvalues>
      </node>
      <node id="ftripier/spookyc" label="ftripier/spookyc">
        <attvalues>
          <attvalue for="0" value="halloween,surprise,fear,programming-language,vampire,skeleton,ghost,boo,spooky,scary,novelty,memes,werewolf,ventriloquist-dolls" />
        </attvalues>
      </node>
      <node id="sagebind/riptide" label="sagebind/riptide">
        <attvalues>
          <attvalue for="0" value="riptide,scripting-language,programming-language,language,interpreter,shell" />
        </attvalues>
      </node>
      <node id="TEN-framework/ten_framework" label="TEN-framework/ten_framework">
        <attvalues>
          <attvalue for="0" value="ai,cloud-edge-computing,cross-language,cross-platform,workflow,cloud-store,package-management,c,cpp,golang,python,answer-set-programming,clingo,rust,plugin-system,ai-agents,javascript,nodejs,typescript" />
        </attvalues>
      </node>
      <node id="graphql-kit/graphql-lodash" label="graphql-kit/graphql-lodash">
        <attvalues>
          <attvalue for="0" value="graphql,functional-programming,api,lodash" />
        </attvalues>
      </node>
      <node id="CapelliC/hitchhicker-prolog" label="CapelliC/hitchhicker-prolog">
        <attvalues>
          <attvalue for="0" value="logic-programming,javascript,prolog,prolog-implementation,semantic-publishing,nodejs,browser,virtual-machine" />
        </attvalues>
      </node>
      <node id="microsoft/service-fabric-healer" label="microsoft/service-fabric-healer">
        <attvalues>
          <attvalue for="0" value="service-fabric,logic-programming,auto-mitigation,windows,linux,guan,csharp,net6" />
        </attvalues>
      </node>
      <node id="sudiptog81/ducscode" label="sudiptog81/ducscode">
        <attvalues>
          <attvalue for="0" value="cs,cpp,du,prolog,java,javascript,assembly,system-architecture,hacktoberfest" />
        </attvalues>
      </node>
      <node id="SomewhatML/sml-compiler" label="SomewhatML/sml-compiler">
        <attvalues>
          <attvalue for="0" value="standardml,compiler,programming-language,standard-ml" />
        </attvalues>
      </node>
      <node id="lps-js/lps-studio" label="lps-js/lps-studio">
        <attvalues>
          <attvalue for="0" value="gui,app,lps,electron,electron-app,visualisation,visualization,simulation,html5,canvas,html5-canvas,ai,artificial-intelligence,logic,logic-programming" />
        </attvalues>
      </node>
      <node id="schwering/limbo" label="schwering/limbo">
        <attvalues>
          <attvalue for="0" value="logic,reasoning,knowledge,beliefs" />
        </attvalues>
      </node>
      <node id="yallop/ocaml-asp" label="yallop/ocaml-asp">
        <attvalues>
          <attvalue for="0" value="parser-combinators,parsing,ocaml,metaocaml,functional-programming,high-performance" />
        </attvalues>
      </node>
      <node id="ibarryyan/golang-tips-100" label="ibarryyan/golang-tips-100">
        <attvalues>
          <attvalue for="0" value="golang,go,tips,code,programming,programming-language,golang-library,http,rpc" />
        </attvalues>
      </node>
      <node id="bnidia/ft_printf" label="bnidia/ft_printf">
        <attvalues>
          <attvalue for="0" value="algorithms,logic,rigor,unix" />
        </attvalues>
      </node>
      <node id="typelift/Swiftz" label="typelift/Swiftz">
        <attvalues>
          <attvalue for="0" value="swift,functional-programming" />
        </attvalues>
      </node>
      <node id="rjNemo/underscore" label="rjNemo/underscore">
        <attvalues>
          <attvalue for="0" value="golang,go,functional-programming,library,functional" />
        </attvalues>
      </node>
      <node id="ppvk/wrenjs" label="ppvk/wrenjs">
        <attvalues>
          <attvalue for="0" value="wren,emscripten,programming-language" />
        </attvalues>
      </node>
      <node id="CyclejsCN/cyclejs.cn" label="CyclejsCN/cyclejs.cn">
        <attvalues>
          <attvalue for="0" value="framework,javascript,typescript,reactive-programming,rxjs,cyclejs,functional-programming" />
        </attvalues>
      </node>
      <node id="kenbot/goggles" label="kenbot/goggles">
        <attvalues>
          <attvalue for="0" value="scala,optics,monocle,dsl,lens,functional-programming" />
        </attvalues>
      </node>
      <node id="triska/proloxy" label="triska/proloxy">
        <attvalues>
          <attvalue for="0" value="prolog,swi-prolog,proxy-server,https-proxy,https,http-proxy,websocket-connection" />
        </attvalues>
      </node>
      <node id="Enalye/grimoire" label="Enalye/grimoire">
        <attvalues>
          <attvalue for="0" value="language,programming-language,d,scripting-language,virtual-machine,bytecode,grimoire,concurrency" />
        </attvalues>
      </node>
      <node id="vgsantoniazzi/tiny-lang" label="vgsantoniazzi/tiny-lang">
        <attvalues>
          <attvalue for="0" value="interpreters,programming-language,compilers,language,interpreter,compiler,compiler-design,just-in-time,compiler-frontend,compiler-construction,compiler-" />
        </attvalues>
      </node>
      <node id="nerevu/riko" label="nerevu/riko">
        <attvalues>
          <attvalue for="0" value="stream-processing,etl,parallelism,rss,data,asynchronous,library,cli,functional-programming,featured" />
        </attvalues>
      </node>
      <node id="BalmungSan/scala-functional-programming-tutorial" label="BalmungSan/scala-functional-programming-tutorial">
        <attvalues>
          <attvalue for="0" value="scala,fp,functional-programming,tutorial,cats,cats-effect,fs2,http4s,circe,shapeless" />
        </attvalues>
      </node>
      <node id="tarptaeya/Truck" label="tarptaeya/Truck">
        <attvalues>
          <attvalue for="0" value="truck,programming-language,interpreter,recursive-descent-parser,vim-syntax,language,python,grammar,dynamic-programming-language,repl,object-oriented-language,class-inheritance,visitor-pattern" />
        </attvalues>
      </node>
      <node id="tcltk/tcl" label="tcltk/tcl">
        <attvalues>
          <attvalue for="0" value="programming-language,interpreter,jit-compiler,jit-interpreter,linux,unix,macos,windows,script,scripts,scripting,language,tcl,cross-platform" />
        </attvalues>
      </node>
      <node id="grin-compiler/idris-grin" label="grin-compiler/idris-grin">
        <attvalues>
          <attvalue for="0" value="idris,compiler,grin,functional-programming" />
        </attvalues>
      </node>
      <node id="wenyan-lang/wenyan-jvm" label="wenyan-lang/wenyan-jvm">
        <attvalues>
          <attvalue for="0" value="wenyan-lang,jvm,programming-language,classical-chinese,wenyan,wenyan-programming-language,groovy,macros,java" />
        </attvalues>
      </node>
      <node id="fuseraft/kiwi" label="fuseraft/kiwi">
        <attvalues>
          <attvalue for="0" value="language,programming-language" />
        </attvalues>
      </node>
      <node id="shhossain/computer_science" label="shhossain/computer_science">
        <attvalues>
          <attvalue for="0" value="computer-engineering,computer-science,computer-science-algorithms,computer-science-education,computer-science-studies,computerscience,algorithms,data-structures,datatypes,filesystem,memory,operating-system,programming-language,software-engineering,hacktoberfest,cloud-computing,machine-learning,networking,web,web-technologies" />
        </attvalues>
      </node>
      <node id="witchcrafters/quark" label="witchcrafters/quark">
        <attvalues>
          <attvalue for="0" value="pointfree,curried-functions,elixir,functional-languages,functional-programming,combinator,ski-combinators,operators" />
        </attvalues>
      </node>
      <node id="pakoito/FunctionalRx2" label="pakoito/FunctionalRx2">
        <attvalues>
          <attvalue for="0" value="java,functional-programming,rxjava2" />
        </attvalues>
      </node>
      <node id="hylang/hydiomatic" label="hylang/hydiomatic">
        <attvalues>
          <attvalue for="0" value="python,minikanren,logic-programming,hy,static-code-analysis,symbolic-computation" />
        </attvalues>
      </node>
      <node id="rachelwiles/GoT-Check" label="rachelwiles/GoT-Check">
        <attvalues>
          <attvalue for="0" value="game-of-thrones,got,prolog,prolog-implementation,prolog-programming-language,prolog-application,swi-prolog,prolog-exercises,prolog-tutorial,prolog-rules,family-tree,database" />
        </attvalues>
      </node>
      <node id="in28minutes/java-a-course-for-beginners" label="in28minutes/java-a-course-for-beginners">
        <attvalues>
          <attvalue for="0" value="java,java-8,java-9,programming,tutorial,tutorial-teaches-people,java-programming,programming-language" />
        </attvalues>
      </node>
      <node id="cicada-lang/inet-js" label="cicada-lang/inet-js">
        <attvalues>
          <attvalue for="0" value="computation-model,graph,graph-processing,inet,interaction-nets,interpreter,language-design,programming-language,programming-language-concepts,programming-language-design,programming-language-development,undirected-graph,language" />
        </attvalues>
      </node>
      <node id="dotnwat/persistent-rbtree" label="dotnwat/persistent-rbtree">
        <attvalues>
          <attvalue for="0" value="immutable,persistent-data-structure,red-black-tree,data-structures,containers,functional-programming" />
        </attvalues>
      </node>
      <node id="Lorti/corsair" label="Lorti/corsair">
        <attvalues>
          <attvalue for="0" value="rxjs,games,functional-programming,reactive-programming" />
        </attvalues>
      </node>
      <node id="cwahn/efp" label="cwahn/efp">
        <attvalues>
          <attvalue for="0" value="adt,cpp,cpp11,functional-programming,higher-order-component,sum-types" />
        </attvalues>
      </node>
      <node id="AlgebraicJulia/AlgebraicRewriting.jl" label="AlgebraicJulia/AlgebraicRewriting.jl">
        <attvalues>
          <attvalue for="0" value="category-theory,declarative-programming,rewrite-systems" />
        </attvalues>
      </node>
      <node id="jobhope/TechnicalNote" label="jobhope/TechnicalNote">
        <attvalues>
          <attvalue for="0" value="data-structures,operating-system,network,database,programming-language,web,computer-architecture,algorithm,linear-algebra,github,cpp,security,windows,software-engineering,technical-notes,sort,tech-interview,design-patterns,computer-science,java" />
        </attvalues>
      </node>
      <node id="aaronryank/Cubically" label="aaronryank/Cubically">
        <attvalues>
          <attvalue for="0" value="rubiks-cube,programming-language,esoteric" />
        </attvalues>
      </node>
      <node id="danieljharvey/functional-programming-is-boring" label="danieljharvey/functional-programming-is-boring">
        <attvalues>
          <attvalue for="0" value="typescript,functional-programming,maybe,either,parser-combinators,lenses,lessons" />
        </attvalues>
      </node>
      <node id="kfl/mosml" label="kfl/mosml">
        <attvalues>
          <attvalue for="0" value="standard-ml,compiler,programming-language" />
        </attvalues>
      </node>
      <node id="sumn2u/learn-javascript" label="sumn2u/learn-javascript">
        <attvalues>
          <attvalue for="0" value="js,learning,javascript,open-source,programming-language,collaborate,github,student-vscode,beginner,learn-javascript,learn-to-code,programming,beginner-friendly,development-handbook,front-end,web-development,hacktoberfest" />
        </attvalues>
      </node>
      <node id="sfermigier/awesome-functional-python" label="sfermigier/awesome-functional-python">
        <attvalues>
          <attvalue for="0" value="python,awesome,functional-programming" />
        </attvalues>
      </node>
      <node id="alstn2468/category-theory-for-programmers" label="alstn2468/category-theory-for-programmers">
        <attvalues>
          <attvalue for="0" value="category-theory,functional-programming,haskell,cpp,korean,latex,ocaml,scala,study,summary,translation,typescript" />
        </attvalues>
      </node>
      <node id="querycert/qcert" label="querycert/qcert">
        <attvalues>
          <attvalue for="0" value="verification,query-language,query-engine,functional-programming,coq-proof-assistant,sql,compiler,verified-compiler" />
        </attvalues>
      </node>
      <node id="gaurav-gogia/mutant" label="gaurav-gogia/mutant">
        <attvalues>
          <attvalue for="0" value="golang,programming-language,security,encryption,metamorphism,hacktoberfest,go" />
        </attvalues>
      </node>
      <node id="bnidia/Philosophers" label="bnidia/Philosophers">
        <attvalues>
          <attvalue for="0" value="algorithms,c,logic,rigor,unix" />
        </attvalues>
      </node>
      <node id="hamler-lang/docs" label="hamler-lang/docs">
        <attvalues>
          <attvalue for="0" value="functional-programming,erlang,haskell,hamler" />
        </attvalues>
      </node>
      <node id="laserdisc-io/laserdisc" label="laserdisc-io/laserdisc">
        <attvalues>
          <attvalue for="0" value="redis,redis-client,scala,fs2,mtl,functional-programming,fp" />
        </attvalues>
      </node>
      <node id="michelpereira/awesome-games-of-coding" label="michelpereira/awesome-games-of-coding">
        <attvalues>
          <attvalue for="0" value="awesome-list,awesome,programming-language,guido-van-robot,robocode,game" />
        </attvalues>
      </node>
      <node id="miciek/free-prisoners" label="miciek/free-prisoners">
        <attvalues>
          <attvalue for="0" value="functional-programming,free-monads,tagless-final,freestyle,testing,software-architecture" />
        </attvalues>
      </node>
      <node id="titzer/virgil" label="titzer/virgil">
        <attvalues>
          <attvalue for="0" value="compiler,programming-language,webassembly,native,garbage-collection,system-programming,systems" />
        </attvalues>
      </node>
      <node id="gonzula/splash" label="gonzula/splash">
        <attvalues>
          <attvalue for="0" value="siri-shortcuts,ios,programming-language,compiler" />
        </attvalues>
      </node>
      <node id="dmsc/fastbasic" label="dmsc/fastbasic">
        <attvalues>
          <attvalue for="0" value="interpreter,basic-programming-language,6502,atarixl,atari,language,compiler,programming-language" />
        </attvalues>
      </node>
      <node id="Galigator/openllet" label="Galigator/openllet">
        <attvalues>
          <attvalue for="0" value="owl,logic,reasoner,semantic,owl-api,jena,java,owl2,inference" />
        </attvalues>
      </node>
      <node id="ruby/ruby" label="ruby/ruby">
        <attvalues>
          <attvalue for="0" value="ruby,c,language,object-oriented,ruby-language,jit,rust,programming-language" />
        </attvalues>
      </node>
      <node id="jakobjpeters/PAndQ.jl" label="jakobjpeters/PAndQ.jl">
        <attvalues>
          <attvalue for="0" value="julia,logic,symbolic,julialang,propositional-logic" />
        </attvalues>
      </node>
      <node id="pocketpy/pocketpy" label="pocketpy/pocketpy">
        <attvalues>
          <attvalue for="0" value="header-only,interpreter,language,python,programming-language,scripting-language,vm,c,c11" />
        </attvalues>
      </node>
      <node id="tensorlang/tensorlang" label="tensorlang/tensorlang">
        <attvalues>
          <attvalue for="0" value="tensorflow,programming-language,machine-learning,deep-learning,automatic-differentiation" />
        </attvalues>
      </node>
      <node id="arrow-kt/arrow-core" label="arrow-kt/arrow-core">
        <attvalues>
          <attvalue for="0" value="functional-programming,kotlin-library,arrow" />
        </attvalues>
      </node>
      <node id="mrdimosthenis/gleam_synapses" label="mrdimosthenis/gleam_synapses">
        <attvalues>
          <attvalue for="0" value="gleam,gleam-lang,neural-network,neural-networks,deep-learning,deep-neural-networks,deeplearning,machine-learning,functional-programming" />
        </attvalues>
      </node>
      <node id="ethereum/solidity" label="ethereum/solidity">
        <attvalues>
          <attvalue for="0" value="cpp,ethereum,smartcontracts,language,solidity,blockchain,hacktoberfest,programming-language" />
        </attvalues>
      </node>
      <node id="vorov2/dyalect" label="vorov2/dyalect">
        <attvalues>
          <attvalue for="0" value="programming-language,compiler,interpreter,scripting-language,virtual-machine,dyalect,language,cross-platform,c-sharp,dotnet,scripting,dotnet-core,coroutines" />
        </attvalues>
      </node>
      <node id="minetest-mods/mesecons" label="minetest-mods/mesecons">
        <attvalues>
          <attvalue for="0" value="minetest,redstone,wires,logic,minetest-mod" />
        </attvalues>
      </node>
      <node id="robertvazan/noexception" label="robertvazan/noexception">
        <attvalues>
          <attvalue for="0" value="exceptions,exception-handler,functional-programming,java-8,noexception,java-library" />
        </attvalues>
      </node>
      <node id="dmmulroy/create-melange-app" label="dmmulroy/create-melange-app">
        <attvalues>
          <attvalue for="0" value="functional-programming,javascript,ocaml,reasonml,typescript" />
        </attvalues>
      </node>
      <node id="charly-lang/charly" label="charly-lang/charly">
        <attvalues>
          <attvalue for="0" value="interpreter,repl,crystal,programming-language" />
        </attvalues>
      </node>
      <node id="lazear/microlisp" label="lazear/microlisp">
        <attvalues>
          <attvalue for="0" value="lisp,scheme,lisp-interpreter,mccarthy-paper,c,programming-language,functional-programming" />
        </attvalues>
      </node>
      <node id="oxidizing/sihl-example-issues" label="oxidizing/sihl-example-issues">
        <attvalues>
          <attvalue for="0" value="reason,reasonreact,reasonml,sihl,framework,web,webdevelopment,ocaml,functional-programming" />
        </attvalues>
      </node>
      <node id="benzap/fif" label="benzap/fif">
        <attvalues>
          <attvalue for="0" value="clojure,forth,edn,scripting,programming-language,scripting-language,stack-based,fif" />
        </attvalues>
      </node>
      <node id="uqbar-project/wollok" label="uqbar-project/wollok">
        <attvalues>
          <attvalue for="0" value="language,xtend,wollok,programming-language,language-reference,eclipse,sublime,ide" />
        </attvalues>
      </node>
      <node id="daggerok/spring-5-examples" label="daggerok/spring-5-examples">
        <attvalues>
          <attvalue for="0" value="reactive-programming,reactor,spring-boot,spring-webflux,spring-data,spring-reactive,mongodb,redis,webclient,functional-reactive-programming,functional-programming,sse,server-side-events,flux,mono,spring-5,spring-security,kotlin,spring-data-keyvalue,spring-fu" />
        </attvalues>
      </node>
      <node id="oldcompcz/micro-PROLOG" label="oldcompcz/micro-PROLOG">
        <attvalues>
          <attvalue for="0" value="z80,zx-spectrum,prolog" />
        </attvalues>
      </node>
      <node id="lichess-org/lila" label="lichess-org/lila">
        <attvalues>
          <attvalue for="0" value="scala,chess,play-framework,non-profit,functional-programming,type-safe,typescript,free-software,game,lichess" />
        </attvalues>
      </node>
      <node id="jwbuurlage/category-theory-programmers" label="jwbuurlage/category-theory-programmers">
        <attvalues>
          <attvalue for="0" value="mathematics,category-theory,functional-programming,lecture-notes" />
        </attvalues>
      </node>
      <node id="przemyslawjanpietrzak/rembrandt" label="przemyslawjanpietrzak/rembrandt">
        <attvalues>
          <attvalue for="0" value="reasonml,reason,bucklescript,functional-programming,ocaml,javascript" />
        </attvalues>
      </node>
      <node id="viper-org/viper-lang" label="viper-org/viper-lang">
        <attvalues>
          <attvalue for="0" value="compiler,programming-language,language" />
        </attvalues>
      </node>
      <node id="politrons/FunctionalRust" label="politrons/FunctionalRust">
        <attvalues>
          <attvalue for="0" value="functional-programming,rust" />
        </attvalues>
      </node>
      <node id="operating-function/pallas" label="operating-function/pallas">
        <attvalues>
          <attvalue for="0" value="exokernel,functional-programming,haskell,personal-server,purely-functional,unikernel,operating-system,operating-function" />
        </attvalues>
      </node>
      <node id="marklogic/ml-gradle" label="marklogic/ml-gradle">
        <attvalues>
          <attvalue for="0" value="gradle,corb,marklogic,gradle-plugin,example,examples,sample,samples,mark,logic,mlcp" />
        </attvalues>
      </node>
      <node id="nclarius/pyPL" label="nclarius/pyPL">
        <attvalues>
          <attvalue for="0" value="logic,propositional-logic,predicate-logic,first-order-logic,classical-logic,intuitionistic-logic,proof,model-checking,model-checker,model-generation,model-extraction,analytic-tableaux,modal-logic,theorem-prover" />
        </attvalues>
      </node>
      <node id="benji6/imlazy" label="benji6/imlazy">
        <attvalues>
          <attvalue for="0" value="iterables,functional-programming,iterator,haskell,ramda,immutable,lazy,generator,infinite,curried" />
        </attvalues>
      </node>
      <node id="bkomuves/nanohs" label="bkomuves/nanohs">
        <attvalues>
          <attvalue for="0" value="compiler,haskell,programming-language" />
        </attvalues>
      </node>
      <node id="japgolly/scalajs-react" label="japgolly/scalajs-react">
        <attvalues>
          <attvalue for="0" value="scala,react,reactjs,scalajs,fp,functional-programming,router" />
        </attvalues>
      </node>
      <node id="jessehamner/TechMillForKids" label="jessehamner/TechMillForKids">
        <attvalues>
          <attvalue for="0" value="kids,logic-gates,workshop,computer-history,electronics,electricity,science,transistors,logic" />
        </attvalues>
      </node>
      <node id="47degrees/kotlin-for-scala-devs" label="47degrees/kotlin-for-scala-devs">
        <attvalues>
          <attvalue for="0" value="kotlin,scala,arrow-kt,functional-programming" />
        </attvalues>
      </node>
      <node id="pashashiz/scanet3" label="pashashiz/scanet3">
        <attvalues>
          <attvalue for="0" value="scala,tensorflow,functional-programming,neural-networks,linalg,math" />
        </attvalues>
      </node>
      <node id="ClueLang/Clue" label="ClueLang/Clue">
        <attvalues>
          <attvalue for="0" value="transpiler,lua,language,programming-language,compiler,cluelang,rust,hacktoberfest" />
        </attvalues>
      </node>
      <node id="opennars/opennars" label="opennars/opennars">
        <attvalues>
          <attvalue for="0" value="agi,aikr,nars,reasoning,logic,ai,agent,rl,learning,reinforcement,java,reasoner,semantic,graph,database,realtime,inference,solver,artificial-general-intelligence,nal" />
        </attvalues>
      </node>
      <node id="jacob-grahn/jiber" label="jacob-grahn/jiber">
        <attvalues>
          <attvalue for="0" value="peer-to-peer,nodejs,javascript,multiplayer-game-server,functional-programming,multiuser,webrtc,websocket,real-time-data" />
        </attvalues>
      </node>
      <node id="arranlomas/kontent" label="arranlomas/kontent">
        <attvalues>
          <attvalue for="0" value="kotlin,architecture,mvi,android,mvp-architecture,mvi-architecture,mvi-clean-architecture,redux,functional-programming,reactive,rxjava2,android-library,android-architecture" />
        </attvalues>
      </node>
      <node id="Soonad/Formality-Core" label="Soonad/Formality-Core">
        <attvalues>
          <attvalue for="0" value="formality,funcional-programming,lambda-calculus,programming-language,type-system" />
        </attvalues>
      </node>
      <node id="zio/zio-sqs" label="zio/zio-sqs">
        <attvalues>
          <attvalue for="0" value="scala,zio,sqs,functional-programming,aws-sdk,stream,connector" />
        </attvalues>
      </node>
      <node id="coot/heyting-algebras" label="coot/heyting-algebras">
        <attvalues>
          <attvalue for="0" value="logic,haskell-library" />
        </attvalues>
      </node>
      <node id="ualib/agda-algebras" label="ualib/agda-algebras">
        <attvalues>
          <attvalue for="0" value="agda-library,universal-algebra,logic,foundations,type-theory,agda,model-theory,dependent-types" />
        </attvalues>
      </node>
      <node id="acook/blacklight" label="acook/blacklight">
        <attvalues>
          <attvalue for="0" value="programming-language,virtual-machine,bytecode,concurrent-programming,concatenative,stack-machine" />
        </attvalues>
      </node>
      <node id="getify/Functional-Light-JS" label="getify/Functional-Light-JS">
        <attvalues>
          <attvalue for="0" value="book,javascript,functional-programming,training-materials,training-providers,education" />
        </attvalues>
      </node>
      <node id="lorenzosinisi/retex" label="lorenzosinisi/retex">
        <attvalues>
          <attvalue for="0" value="rete-algorithm,graph,elixir,protocol,rete,rule-engine,logic-programming" />
        </attvalues>
      </node>
      <node id="mndrix/list_util" label="mndrix/list_util">
        <attvalues>
          <attvalue for="0" value="prolog,lists" />
        </attvalues>
      </node>
      <node id="akabe/ocaml-jupyter" label="akabe/ocaml-jupyter">
        <attvalues>
          <attvalue for="0" value="ocaml,functional-programming,jupyter-kernels,machine-learning,datascience,dataanalysis,jupyter-notebook,jupyter,ocaml-kernel,ocaml-repl" />
        </attvalues>
      </node>
      <node id="oldratlee/java-modern-tech-practice" label="oldratlee/java-modern-tech-practice">
        <attvalues>
          <attvalue for="0" value="java,kotlin,spring-boot,modern-java,reactive,rxjava2,rxkotlin,reactor,spring-5,spring-cloud,rxjava,gradle,modern,practice,sandbox,vavr,functional,functional-programming,paguro,funktionale" />
        </attvalues>
      </node>
      <node id="composewell/streamly" label="composewell/streamly">
        <attvalues>
          <attvalue for="0" value="concurrency,streaming,reactive-programming,frp,haskell,non-determinism,logic-programming,stream-fusion,modular,arrays,folds,unicode,filesystem,network,parsers,pipes,unfolds,loops,dataflow,async" />
        </attvalues>
      </node>
      <node id="sdbtools/void-pi" label="sdbtools/void-pi">
        <attvalues>
          <attvalue for="0" value="gprolog,prolog,void-linux,voidlinux" />
        </attvalues>
      </node>
      <node id="jdswalker/Interpreter-in-Prolog" label="jdswalker/Interpreter-in-Prolog">
        <attvalues>
          <attvalue for="0" value="interpreter,lexer,parser,prolog,prolog-cfg,prolog-interpreter,swi-prolog,tokenizer" />
        </attvalues>
      </node>
      <node id="fimuxd/RxSwift" label="fimuxd/RxSwift">
        <attvalues>
          <attvalue for="0" value="swift,rxswift,ios-swift,studying,reactive-programming,functional-programming,imperative-programming,rxcocoa,asynchronous" />
        </attvalues>
      </node>
      <node id="wenyan-lang/wenyan" label="wenyan-lang/wenyan">
        <attvalues>
          <attvalue for="0" value="programming-language,classical-chinese,esoteric-language,wenyan-lang" />
        </attvalues>
      </node>
      <node id="ualib/ualib.github.io" label="ualib/ualib.github.io">
        <attvalues>
          <attvalue for="0" value="universal-algebra,agda,typetheory,formalization,dependent-types,agda-ualib,agda-library,logic" />
        </attvalues>
      </node>
      <node id="coastalwhite/wavedrom-rs" label="coastalwhite/wavedrom-rs">
        <attvalues>
          <attvalue for="0" value="diagrams,digital,logic,svg,timing,wasm,wavedrom,waveform" />
        </attvalues>
      </node>
      <node id="crossbowerbt/prolog-talk" label="crossbowerbt/prolog-talk">
        <attvalues>
          <attvalue for="0" value="artificial-intelligence,common-lisp,natural-language-processing,prolog" />
        </attvalues>
      </node>
      <node id="tech-srl/c3po" label="tech-srl/c3po">
        <attvalues>
          <attvalue for="0" value="c3po,editcompletions,programming-language" />
        </attvalues>
      </node>
      <node id="inexorabletash/jslogo" label="inexorabletash/jslogo">
        <attvalues>
          <attvalue for="0" value="logo,programming-language" />
        </attvalues>
      </node>
      <node id="fergusq/roda" label="fergusq/roda">
        <attvalues>
          <attvalue for="0" value="language,programming-language,scripting-language,stream-oriented-programming,interpreter,data-flow" />
        </attvalues>
      </node>
      <node id="cull-os/cab" label="cull-os/cab">
        <attvalues>
          <attvalue for="0" value="expression-language,functional-programming,reproducible,contextful-expressions" />
        </attvalues>
      </node>
      <node id="onyx-lang/onyx" label="onyx-lang/onyx">
        <attvalues>
          <attvalue for="0" value="programming-language,wasm,webassembly" />
        </attvalues>
      </node>
      <node id="HaxeFoundation/haxe" label="HaxeFoundation/haxe">
        <attvalues>
          <attvalue for="0" value="haxe,language,compiler,cross-platform,transpiler,programming-language,macros,jvm-languages" />
        </attvalues>
      </node>
      <node id="ufocoder/javascript.anomaly" label="ufocoder/javascript.anomaly">
        <attvalues>
          <attvalue for="0" value="javascript,anomaly,closure,logic,math" />
        </attvalues>
      </node>
      <node id="Rkabacoff/RiA3" label="Rkabacoff/RiA3">
        <attvalues>
          <attvalue for="0" value="r,data-science,statistics,data-visualisation,programming-language" />
        </attvalues>
      </node>
      <node id="MarioAriasC/funKTionale" label="MarioAriasC/funKTionale">
        <attvalues>
          <attvalue for="0" value="kotlin,functional-programming" />
        </attvalues>
      </node>
      <node id="training-center/clojure-study-group" label="training-center/clojure-study-group">
        <attvalues>
          <attvalue for="0" value="clojure,clj,clojurescript,clojure-script,functional,functional-programming" />
        </attvalues>
      </node>
      <node id="songtianyi/landscape-of-programming" label="songtianyi/landscape-of-programming">
        <attvalues>
          <attvalue for="0" value="programming,programming-language,data-structures,algorithms,engineering,frameworks,databases,storages,middlewares,networks,architecture,solutions,development,quality-assurance" />
        </attvalues>
      </node>
      <node id="cdiggins/plato" label="cdiggins/plato">
        <attvalues>
          <attvalue for="0" value="functional-programming,programming-language,learn-to-code,teaching" />
        </attvalues>
      </node>
      <node id="benji6/church" label="benji6/church">
        <attvalues>
          <attvalue for="0" value="functional-programming,lambda-calculus,church-encoding,combinatory-logic,haskell" />
        </attvalues>
      </node>
      <node id="Janko-dev/plogic" label="Janko-dev/plogic">
        <attvalues>
          <attvalue for="0" value="logic,repl,rust" />
        </attvalues>
      </node>
      <node id="stephencelis/Formatting" label="stephencelis/Formatting">
        <attvalues>
          <attvalue for="0" value="functional-programming,string-formatter,formatter,composability,swift" />
        </attvalues>
      </node>
      <node id="davidchase/ramtuary" label="davidchase/ramtuary">
        <attvalues>
          <attvalue for="0" value="ramda,ramda-fantasy,sanctuary,repl,functional-programming,functional" />
        </attvalues>
      </node>
      <node id="JuliaLang/julia" label="JuliaLang/julia">
        <attvalues>
          <attvalue for="0" value="julia-language,julia,scientific,hpc,numerical,machine-learning,programming-language,science,hacktoberfest,julialang" />
        </attvalues>
      </node>
      <node id="m-ender/alice" label="m-ender/alice">
        <attvalues>
          <attvalue for="0" value="interpreter,programming-language,two-dimensional,stack-based,esolang" />
        </attvalues>
      </node>
      <node id="benji6/combinators-js" label="benji6/combinators-js">
        <attvalues>
          <attvalue for="0" value="combinator,functional-programming,lambda-calculus,combinatory-logic,haskell" />
        </attvalues>
      </node>
      <node id="metacall/core" label="metacall/core">
        <attvalues>
          <attvalue for="0" value="metacall,function-mesh,programming-language,inter-language,ffi,polyglot,polyglot-programming,c,cpp,golang,javascript,node,nodejs,python,docker,faas,gsoc,ruby" />
        </attvalues>
      </node>
      <node id="zepto-lang/zepto" label="zepto-lang/zepto">
        <attvalues>
          <attvalue for="0" value="programming-language,interpreter,scheme,zepto" />
        </attvalues>
      </node>
      <node id="geirolz/cats-xml" label="geirolz/cats-xml">
        <attvalues>
          <attvalue for="0" value="xml,scala,cats,functional-programming,fp,encoding,decoding" />
        </attvalues>
      </node>
      <node id="mna/agora" label="mna/agora">
        <attvalues>
          <attvalue for="0" value="programming-language" />
        </attvalues>
      </node>
      <node id="acharal/hopes" label="acharal/hopes">
        <attvalues>
          <attvalue for="0" value="hopes,prolog,interpreter,higher-order-logic,logic-programming" />
        </attvalues>
      </node>
      <node id="jpvillaisaza/cain" label="jpvillaisaza/cain">
        <attvalues>
          <attvalue for="0" value="category-theory,functional-programming,haskell,agda" />
        </attvalues>
      </node>
      <node id="smlnj/legacy" label="smlnj/legacy">
        <attvalues>
          <attvalue for="0" value="standard-ml,functional-programming,sml" />
        </attvalues>
      </node>
      <node id="samuelmtimbo/unit" label="samuelmtimbo/unit">
        <attvalues>
          <attvalue for="0" value="unit,programming,programming-language,dataflow-programming,functional-programming,visual-programming,reactive-programming,live-programming" />
        </attvalues>
      </node>
      <node id="Athari/YaLinqo" label="Athari/YaLinqo">
        <attvalues>
          <attvalue for="0" value="linq,php,functional-programming,query,statistics,functional,underscore,library,linq-to-objects" />
        </attvalues>
      </node>
      <node id="agrafix/funblog" label="agrafix/funblog">
        <attvalues>
          <attvalue for="0" value="haskell,spock,blog,blog-engine,functional-programming" />
        </attvalues>
      </node>
      <node id="nielsAD/lape" label="nielsAD/lape">
        <attvalues>
          <attvalue for="0" value="pascal,programming-language,compiler,interpreter" />
        </attvalues>
      </node>
      <node id="scrossuk/locic" label="scrossuk/locic">
        <attvalues>
          <attvalue for="0" value="programming-language,systems-language,loci-programming-language" />
        </attvalues>
      </node>
      <node id="grin-compiler/ghc-grin" label="grin-compiler/ghc-grin">
        <attvalues>
          <attvalue for="0" value="compiler,haskell,grin,ghc,functional-programming" />
        </attvalues>
      </node>
      <node id="scala-hamsters/hamsters" label="scala-hamsters/hamsters">
        <attvalues>
          <attvalue for="0" value="functional-programming,union-types,monad-transformers,minimal,enums,validation,error-handling,typeclass" />
        </attvalues>
      </node>
      <node id="terroo/terlang" label="terroo/terlang">
        <attvalues>
          <attvalue for="0" value="cplusplus,cpp,cpp23,programming-language,scripting-language" />
        </attvalues>
      </node>
      <node id="HeliosLang/compiler" label="HeliosLang/compiler">
        <attvalues>
          <attvalue for="0" value="cardano,plutus,compiler,programming-language,smart-contracts" />
        </attvalues>
      </node>
      <node id="veyselusta/programming-language-research" label="veyselusta/programming-language-research">
        <attvalues>
          <attvalue for="0" value="compilers,programming-languages,type-theory,formal-methods,functional-programming,interpreters,logic" />
        </attvalues>
      </node>
      <node id="tofu-tf/tofu" label="tofu-tf/tofu">
        <attvalues>
          <attvalue for="0" value="tagless-final,functional-programming,optics,logging,config,reader-monad,effects,concurrent,typeclasses,hacktoberfest" />
        </attvalues>
      </node>
      <node id="caiogondim/tubo.js" label="caiogondim/tubo.js">
        <attvalues>
          <attvalue for="0" value="javascript,js,functional-programming,pipe" />
        </attvalues>
      </node>
      <node id="milessabin/shapeless" label="milessabin/shapeless">
        <attvalues>
          <attvalue for="0" value="scala,typelevel,functional-programming,generic-programming,fp" />
        </attvalues>
      </node>
      <node id="shettyvarshaa/PRINCIPLES-OF-AI" label="shettyvarshaa/PRINCIPLES-OF-AI">
        <attvalues>
          <attvalue for="0" value="alphabeta-pruning,artificial-intelligence,chatbot,crossword-puzzle,fuzzy-logic,nimgame,prolog-programming-language" />
        </attvalues>
      </node>
      <node id="liam-ilan/crumb" label="liam-ilan/crumb">
        <attvalues>
          <attvalue for="0" value="c,functional-programming,interpreter,programming-languages,crumb,language" />
        </attvalues>
      </node>
      <node id="MainRo/cyclotron-py" label="MainRo/cyclotron-py">
        <attvalues>
          <attvalue for="0" value="reactive-extensions,reactivex,rxpy,functional-programming,reactive-programming,cyclotron,python3,python" />
        </attvalues>
      </node>
      <node id="nuric/deeplogic" label="nuric/deeplogic">
        <attvalues>
          <attvalue for="0" value="logic-programming,deep-learning" />
        </attvalues>
      </node>
      <node id="slorber/combine-promises" label="slorber/combine-promises">
        <attvalues>
          <attvalue for="0" value="javascript,ecmascript,promise,promises,async,await,functional-programming,functional-js" />
        </attvalues>
      </node>
      <node id="publicodes/publicodes" label="publicodes/publicodes">
        <attvalues>
          <attvalue for="0" value="programming-language,simulation-modeling" />
        </attvalues>
      </node>
      <node id="sdiehl/write-you-a-haskell" label="sdiehl/write-you-a-haskell">
        <attvalues>
          <attvalue for="0" value="haskel,compiler,book,evaluation,lambda-calculus,type,type-checking,type-system,pdf-book,functional-programming,functional-language,hindley-milner,type-inference,type-theory,intermediate-representation" />
        </attvalues>
      </node>
      <node id="FluxML/Functors.jl" label="FluxML/Functors.jl">
        <attvalues>
          <attvalue for="0" value="julia,functors,category-theory,machine-learning,functional-programming" />
        </attvalues>
      </node>
      <node id="nanikamado/cotton" label="nanikamado/cotton">
        <attvalues>
          <attvalue for="0" value="language,programming-language" />
        </attvalues>
      </node>
      <node id="adityaathalye/bash-toolkit" label="adityaathalye/bash-toolkit">
        <attvalues>
          <attvalue for="0" value="bash,bash-scripting,functional-programming,shell,shell-script,clojure-development,command-line-tool,git-ops,log-analysis,machine-setup" />
        </attvalues>
      </node>
      <node id="gralog/gralog" label="gralog/gralog">
        <attvalues>
          <attvalue for="0" value="graph,algorithm,logic,visualization" />
        </attvalues>
      </node>
      <node id="lunarlang/lunar" label="lunarlang/lunar">
        <attvalues>
          <attvalue for="0" value="programming-language,lunar-lang,lua-superset,lunarlang,lunar" />
        </attvalues>
      </node>
      <node id="namin/scalogno" label="namin/scalogno">
        <attvalues>
          <attvalue for="0" value="scala,smt,tabling,metaprogramming,logic-programming" />
        </attvalues>
      </node>
      <node id="EricZinda/InductorProlog" label="EricZinda/InductorProlog">
        <attvalues>
          <attvalue for="0" value="prolog-implementation,prolog-compiler,inductor-prolog-engine,prolog,cpp" />
        </attvalues>
      </node>
      <node id="itchyny/fastinvsqrt" label="itchyny/fastinvsqrt">
        <attvalues>
          <attvalue for="0" value="language,programming-language,algorithm,pointer-casting,fastinvsqrt" />
        </attvalues>
      </node>
      <node id="volution/vonuvoli-scheme" label="volution/vonuvoli-scheme">
        <attvalues>
          <attvalue for="0" value="scheme,r7rs,rust,interpreter,systems-programming,work-in-progress,functional-programming,systems-scripting,scripting,shell-scripting,rust-lang" />
        </attvalues>
      </node>
      <node id="thesephist/oak" label="thesephist/oak">
        <attvalues>
          <attvalue for="0" value="programming-language,ink-programming-language,scripting-language,functional-programming,oaklang" />
        </attvalues>
      </node>
      <node id="eclipse-archived/golo-lang" label="eclipse-archived/golo-lang">
        <attvalues>
          <attvalue for="0" value="golo,jvm,language,invokedynamic,programming-language,java" />
        </attvalues>
      </node>
      <node id="lboasso/oberonc" label="lboasso/oberonc">
        <attvalues>
          <attvalue for="0" value="oberon,programming-language,oberon-compiler,jvm,oberon-07,compiler" />
        </attvalues>
      </node>
      <node id="madnight/bitcoin-chart-cli" label="madnight/bitcoin-chart-cli">
        <attvalues>
          <attvalue for="0" value="bitcoin,cli,charts,terminal,nodejs,cryptocurrency,cryptocurrencies,cryptocurrency-graph,bitcoin-price,ethereum-price,coingraph,cryptocurrencies-graph,es7-async,functional-programming,cryptocompare-api,javascript,bitcoin-chart,coinmarketcap,technical-analysis" />
        </attvalues>
      </node>
      <node id="articulate/paperplane" label="articulate/paperplane">
        <attvalues>
          <attvalue for="0" value="javascript,nodejs,paperplane,server,functional-programming" />
        </attvalues>
      </node>
      <node id="bamless/jstar" label="bamless/jstar">
        <attvalues>
          <attvalue for="0" value="scripting-language,intepreter,virtual-machine,c,language-dynamic,compiler,c99,programming-language,bytecode-interpreter,interpreted-language,jstar" />
        </attvalues>
      </node>
      <node id="wrapl/minilang" label="wrapl/minilang">
        <attvalues>
          <attvalue for="0" value="embedded-language,programming-language,interpreter,c,multimethods,asynchronous-programming" />
        </attvalues>
      </node>
      <node id="flandreas/antares" label="flandreas/antares">
        <attvalues>
          <attvalue for="0" value="digital,circuit,simulation,education,learning,simulator,logic" />
        </attvalues>
      </node>
      <node id="uuverifiers/princess" label="uuverifiers/princess">
        <attvalues>
          <attvalue for="0" value="logic,smt,smt-lib,smt-solver,theorem-prover" />
        </attvalues>
      </node>
      <node id="markusmoenig/SignedLua" label="markusmoenig/SignedLua">
        <attvalues>
          <attvalue for="0" value="bsdf,sdf,metal,procedural,path-tracing,modeler,programming-language,lua,signed-distance-functions" />
        </attvalues>
      </node>
      <node id="dirkschumacher/logician" label="dirkschumacher/logician">
        <attvalues>
          <attvalue for="0" value="r,prolog,datalog,logic-programming" />
        </attvalues>
      </node>
      <node id="SandroMaglione/effect-getting-started" label="SandroMaglione/effect-getting-started">
        <attvalues>
          <attvalue for="0" value="effect,effect-ts,functional-programming" />
        </attvalues>
      </node>
      <node id="sdiehl/wiwinwlh" label="sdiehl/wiwinwlh">
        <attvalues>
          <attvalue for="0" value="functional-programming-examples,functional-programming,examples,article-series,haskell" />
        </attvalues>
      </node>
      <node id="kittinunf/Forge" label="kittinunf/Forge">
        <attvalues>
          <attvalue for="0" value="json,functional,functional-programming,parser,kotlin" />
        </attvalues>
      </node>
      <node id="TeaEntityLab/fpEs" label="TeaEntityLab/fpEs">
        <attvalues>
          <attvalue for="0" value="functional-programming,fp,js,es,es6,es7,javascript,functional-reactive-programming,reactive,reactive-programming,rx,monad,monads,optional,optional-implementations,publisher-subscriber,publisher-subscriber-pattern,curry,currying,pubsub" />
        </attvalues>
      </node>
      <node id="sagar-jadhav/go-examples" label="sagar-jadhav/go-examples">
        <attvalues>
          <attvalue for="0" value="golang,go,programming-language,ebook,basics,beginners-guide,beginners-friendly,beginner-code,hack,hacktoberfest" />
        </attvalues>
      </node>
      <node id="chicolucio/truth-table-generator" label="chicolucio/truth-table-generator">
        <attvalues>
          <attvalue for="0" value="truth-table,logic,truth-table-generator,truth-tables,ttg,pandas-styling" />
        </attvalues>
      </node>
      <node id="panda-lang/panda" label="panda-lang/panda">
        <attvalues>
          <attvalue for="0" value="panda-lang,panda,programming-language" />
        </attvalues>
      </node>
      <node id="wellang/well" label="wellang/well">
        <attvalues>
          <attvalue for="0" value="assembler,assembly-language,compilers,languages,lexer-parser,parsers,wellang,assembly,programming-language,c" />
        </attvalues>
      </node>
      <node id="mattam82/Coq-Equations" label="mattam82/Coq-Equations">
        <attvalues>
          <attvalue for="0" value="coq,programming-language,dependent-types" />
        </attvalues>
      </node>
      <node id="rmacnak/primordialsoup" label="rmacnak/primordialsoup">
        <attvalues>
          <attvalue for="0" value="newspeak,virtual-machine,programming-language" />
        </attvalues>
      </node>
      <node id="lettier/gifcurry" label="lettier/gifcurry">
        <attvalues>
          <attvalue for="0" value="gtk,animated-gifs,haskell,gui,imagemagick,gif,ubuntu,linux,functional-programming,gifs,gif-library,gif-maker,fedora,arch-linux,gstreamer,appimage,gifmaker,video,video-editing" />
        </attvalues>
      </node>
      <node id="TypeChecked/alphabet-soup" label="TypeChecked/alphabet-soup">
        <attvalues>
          <attvalue for="0" value="scala,typelevel-programming,functional-programming,shapeless,alphabet-soup,typelevel" />
        </attvalues>
      </node>
      <node id="ajeetdsouza/loxcraft" label="ajeetdsouza/loxcraft">
        <attvalues>
          <attvalue for="0" value="compiler,lox,language-server-protocol,rust,tree-sitter,repl,crafting-interpreters,interpreter,lox-language,programming-language,virtual-machine,bytecode,bytecode-interpreter,compiler-construction,compiler-design,hacktoberfest,scripting-language,lalrpop,webassembly" />
        </attvalues>
      </node>
      <node id="Hidorikun/Faculty" label="Hidorikun/Faculty">
        <attvalues>
          <attvalue for="0" value="java,assembly-x86,lisp,prolog,csharp,python,c,matlab" />
        </attvalues>
      </node>
      <node id="justinmeza/lci" label="justinmeza/lci">
        <attvalues>
          <attvalue for="0" value="c,interpreter,lolcode,lolcode-interpreter,programming-language,esoteric-programming-language" />
        </attvalues>
      </node>
      <node id="cedrickchee/YDKGo" label="cedrickchee/YDKGo">
        <attvalues>
          <attvalue for="0" value="go,golang,book,education,programming-language" />
        </attvalues>
      </node>
      <node id="TheRealMichaelWang/fastcode" label="TheRealMichaelWang/fastcode">
        <attvalues>
          <attvalue for="0" value="programming-language,interpreter,extension-language" />
        </attvalues>
      </node>
      <node id="JohnBlood/awesome-basic" label="JohnBlood/awesome-basic">
        <attvalues>
          <attvalue for="0" value="basic-programming-language,basic,programming-language" />
        </attvalues>
      </node>
      <node id="byt3n33dl3/httpX" label="byt3n33dl3/httpX">
        <attvalues>
          <attvalue for="0" value="domain,fuzzing,httpx,linux,logic,offensive-security,penetration-testing,server,takeover,web" />
        </attvalues>
      </node>
      <node id="underscoreio/essential-slick" label="underscoreio/essential-slick">
        <attvalues>
          <attvalue for="0" value="book,slick,scala,functional-programming,database" />
        </attvalues>
      </node>
      <node id="eth-sri/lmql" label="eth-sri/lmql">
        <attvalues>
          <attvalue for="0" value="chatgpt,huggingface,language-model,programming-language" />
        </attvalues>
      </node>
      <node id="Thangiee/Freasy-Monad" label="Thangiee/Freasy-Monad">
        <attvalues>
          <attvalue for="0" value="cat,scalaz,intellij,scala,free-monad,functional-programming,metaprogramming" />
        </attvalues>
      </node>
      <node id="alhassy/PrologCheatSheet" label="alhassy/PrologCheatSheet">
        <attvalues>
          <attvalue for="0" value="prolog,cheatsheet,relational-programming,pdf,html,emacs" />
        </attvalues>
      </node>
      <node id="medmouine/gomad" label="medmouine/gomad">
        <attvalues>
          <attvalue for="0" value="golang,go,functional-programming,monad,maybe" />
        </attvalues>
      </node>
      <node id="JCumin/Brachylog" label="JCumin/Brachylog">
        <attvalues>
          <attvalue for="0" value="swi-prolog,language,code-golf,declarative,logic-programming,golfing-language,prolog" />
        </attvalues>
      </node>
      <node id="boostorg/hof" label="boostorg/hof">
        <attvalues>
          <attvalue for="0" value="modern,constexpr,cplusplus,lambda,functional,c-plus-plus,cplusplus-11,cplusplus-14,cpp,cpp11,cpp14,functional-programming" />
        </attvalues>
      </node>
      <node id="SamChou19815/samlang" label="SamChou19815/samlang">
        <attvalues>
          <attvalue for="0" value="programming-language,type-inference,interpreter,compiler,optimizing-compiler,webassembly" />
        </attvalues>
      </node>
      <node id="monix/monix-bio" label="monix/monix-bio">
        <attvalues>
          <attvalue for="0" value="functional-programming,scala,monix,cats-effect,typelevel" />
        </attvalues>
      </node>
      <node id="jrclogic/SMCDEL" label="jrclogic/SMCDEL">
        <attvalues>
          <attvalue for="0" value="model-checking,symbolic,logic,epistemic-logic,haskell" />
        </attvalues>
      </node>
      <node id="pikelet-lang/pikelet" label="pikelet-lang/pikelet">
        <attvalues>
          <attvalue for="0" value="dependent-types,typechecker,type-theory,programming-language,type-system,bidirectional-typechecking,rust,dependent-record-types,dependent-records,systems-language,systems-programming,compiler" />
        </attvalues>
      </node>
      <node id="hojberg/sums-up" label="hojberg/sums-up">
        <attvalues>
          <attvalue for="0" value="fp,functional-programming,typescript,adt,javascript" />
        </attvalues>
      </node>
      <node id="Iltotore/iron" label="Iltotore/iron">
        <attvalues>
          <attvalue for="0" value="types,assert,scala,functional-programming,refinement-types" />
        </attvalues>
      </node>
      <node id="tokiwa-software/fuzion" label="tokiwa-software/fuzion">
        <attvalues>
          <attvalue for="0" value="fuzion,programming-language,object-oriented-programming,safety-critical-systems,compiler,static-analysis,functional-programming" />
        </attvalues>
      </node>
      <node id="rhysd/gocaml" label="rhysd/gocaml">
        <attvalues>
          <attvalue for="0" value="compiler,golang,ml,programming-language,llvm,language,go" />
        </attvalues>
      </node>
      <node id="frees-io/freestyle" label="frees-io/freestyle">
        <attvalues>
          <attvalue for="0" value="functional-programming,scala,monads,redis,kafka,spark,cassandra,architectural-patterns,rpc,tagless-final,free-monads,freestyle" />
        </attvalues>
      </node>
      <node id="pfgithub/scpl" label="pfgithub/scpl">
        <attvalues>
          <attvalue for="0" value="scpl,programming-language" />
        </attvalues>
      </node>
      <node id="lichess-org/scalachess" label="lichess-org/scalachess">
        <attvalues>
          <attvalue for="0" value="bitboard,bitboard-datastructure,chess,functional-programming,lichess,scala-3" />
        </attvalues>
      </node>
      <node id="supermacro/neverthrow" label="supermacro/neverthrow">
        <attvalues>
          <attvalue for="0" value="functional-programming,typescript,hacktoberfest,hacktoberfest-accepted" />
        </attvalues>
      </node>
      <node id="LoopPerfect/smallfunction" label="LoopPerfect/smallfunction">
        <attvalues>
          <attvalue for="0" value="cpp,optimization,functional-programming" />
        </attvalues>
      </node>
      <node id="clark800/lambda-zero" label="clark800/lambda-zero">
        <attvalues>
          <attvalue for="0" value="functional-programming,programming-language,haskell,functional,minimalist,lazy-evaluation,krivine-machine,lambda-calculus,c,pythonic" />
        </attvalues>
      </node>
      <node id="lowbyteproductions/Parser-Combinators-From-Scratch" label="lowbyteproductions/Parser-Combinators-From-Scratch">
        <attvalues>
          <attvalue for="0" value="how-to-build-a-parser,parsing,javascript,parser-combinators,functional-programming,learning-javascript" />
        </attvalues>
      </node>
      <node id="debasishg/tradeio" label="debasishg/tradeio">
        <attvalues>
          <attvalue for="0" value="scala,functional-programming,fp,cats,cats-effect,cats-effect-3,http4s,ddd,domain-driven-design" />
        </attvalues>
      </node>
      <node id="aballano/FAM-Playground" label="aballano/FAM-Playground">
        <attvalues>
          <attvalue for="0" value="kotlin,functor,applicative,monad,functional-programming" />
        </attvalues>
      </node>
      <node id="blenderskool/lexico" label="blenderskool/lexico">
        <attvalues>
          <attvalue for="0" value="data,dsl,extended,fuzzy,hacktoberfest,logic,operators,search,indexes" />
        </attvalues>
      </node>
      <node id="glossopoeia/boba" label="glossopoeia/boba">
        <attvalues>
          <attvalue for="0" value="compiler,concatenative,language,programming-language,type-inference" />
        </attvalues>
      </node>
      <node id="nature-lang/nature" label="nature-lang/nature">
        <attvalues>
          <attvalue for="0" value="language,nature,compiler,programming-language,hacktoberfest" />
        </attvalues>
      </node>
      <node id="transistorfet/molten" label="transistorfet/molten">
        <attvalues>
          <attvalue for="0" value="llvm,rust,compiler,molten,language,programming-language" />
        </attvalues>
      </node>
      <node id="s-webber/projog" label="s-webber/projog">
        <attvalues>
          <attvalue for="0" value="prolog,java,prolog-interpreter" />
        </attvalues>
      </node>
      <node id="dotlang/language" label="dotlang/language">
        <attvalues>
          <attvalue for="0" value="programming-language,functional-programming" />
        </attvalues>
      </node>
      <node id="dotnet/fsharp" label="dotnet/fsharp">
        <attvalues>
          <attvalue for="0" value="fsharp,compiler,visual-studio,netcore,functional-programming,tools,intellisense,dotnet" />
        </attvalues>
      </node>
      <node id="awalterschulze/goderive" label="awalterschulze/goderive">
        <attvalues>
          <attvalue for="0" value="golang,generator,deriving,functional-programming,generics" />
        </attvalues>
      </node>
      <node id="enkomio/sacara" label="enkomio/sacara">
        <attvalues>
          <attvalue for="0" value="obfuscation,vm,assembly,x86,fsharp,assembler,programming-language" />
        </attvalues>
      </node>
      <node id="chaxiu/KotlinJetpackInAction" label="chaxiu/KotlinJetpackInAction">
        <attvalues>
          <attvalue for="0" value="kotlin,jetpack,mvvm,mvi,clean-architecture,coroutines,retrofit2,moshi,functional-programming,viewmodel,livedata,databinding,kotlin-jetpack,android" />
        </attvalues>
      </node>
      <node id="CrowdHailer/eyg-lang" label="CrowdHailer/eyg-lang">
        <attvalues>
          <attvalue for="0" value="functional-programming,gleam,programming" />
        </attvalues>
      </node>
      <node id="tekknolagi/scrapscript" label="tekknolagi/scrapscript">
        <attvalues>
          <attvalue for="0" value="interpreter,cosmopolitan,functional-programming,compiler,functional-programing,wasm" />
        </attvalues>
      </node>
      <node id="fsaadatmand/The-C-Programming-Language" label="fsaadatmand/The-C-Programming-Language">
        <attvalues>
          <attvalue for="0" value="c,c-programming,programming-exercises,c-language,programming-language" />
        </attvalues>
      </node>
      <node id="symentis/Corridor" label="symentis/Corridor">
        <attvalues>
          <attvalue for="0" value="dependency-injection,coreader,functional-programming,ios,swift,swift-4,swift-framework" />
        </attvalues>
      </node>
      <node id="techcentaur/Krivine-Machine" label="techcentaur/Krivine-Machine">
        <attvalues>
          <attvalue for="0" value="abstract-machine,krivine-machine,secd,ocaml,programming-language,lambda-calculus" />
        </attvalues>
      </node>
      <node id="opencog/atomspace" label="opencog/atomspace">
        <attvalues>
          <attvalue for="0" value="graph-database,knowledge-representation,query-engine,logic-programming,knowledge-graph,knowledge-base,query-language,relational-database,relational-algebra,rewrite-system,rewriting,graph-rewriting,atomspace" />
        </attvalues>
      </node>
      <node id="slovnicki/pLam" label="slovnicki/pLam">
        <attvalues>
          <attvalue for="0" value="lambda-calculus,programming-language,computability-theory,numeral-systems,logic-programming,church,church-encoding,interpreter,language,lambda,computability,functional-programming" />
        </attvalues>
      </node>
      <node id="akalenuk/the_namingless_programming_language" label="akalenuk/the_namingless_programming_language">
        <attvalues>
          <attvalue for="0" value="array-oriented-language,postfix-notation,programming-language,stack-oriented,tacit" />
        </attvalues>
      </node>
      <node id="tuqqu/oxide-lang" label="tuqqu/oxide-lang">
        <attvalues>
          <attvalue for="0" value="programming-language,language,interpreter,scripting-language" />
        </attvalues>
      </node>
      <node id="VictorYudin/switch" label="VictorYudin/switch">
        <attvalues>
          <attvalue for="0" value="usd,appveyor,game,logic,opengl" />
        </attvalues>
      </node>
      <node id="japgolly/nyaya" label="japgolly/nyaya">
        <attvalues>
          <attvalue for="0" value="scala,fp,functional-programming,property-based-testing,random,scalajs,property-testing,random-data-generation" />
        </attvalues>
      </node>
      <node id="lps-js/lps.js" label="lps-js/lps.js">
        <attvalues>
          <attvalue for="0" value="javascript,production-systems,library,lps,artificial-intelligence,logic,interpreter,language,ai,languages,programming-language,prolog" />
        </attvalues>
      </node>
      <node id="soupi/pureli" label="soupi/pureli">
        <attvalues>
          <attvalue for="0" value="haskell,programming-language,lisp,interpreter" />
        </attvalues>
      </node>
      <node id="rune-rs/rune" label="rune-rs/rune">
        <attvalues>
          <attvalue for="0" value="programming-language,scripting,embedded" />
        </attvalues>
      </node>
      <node id="MAIF/thoth" label="MAIF/thoth">
        <attvalues>
          <attvalue for="0" value="functional-programming,event-sourcing,java,postgresql,akka-streams,kafka" />
        </attvalues>
      </node>
      <node id="knowsys/nemo" label="knowsys/nemo">
        <attvalues>
          <attvalue for="0" value="datalog,rule-engine,language,logic,logic-programming,rdf,knowledge-graph" />
        </attvalues>
      </node>
      <node id="namin/clpsmt-miniKanren" label="namin/clpsmt-miniKanren">
        <attvalues>
          <attvalue for="0" value="scheme,minikanren,logic-programming,constraints,smt" />
        </attvalues>
      </node>
      <node id="reubano/meza" label="reubano/meza">
        <attvalues>
          <attvalue for="0" value="pandas,csv,xml,xlsx,excel,data,tabular-data,library,functional-programming,featured" />
        </attvalues>
      </node>
      <node id="jondgoodwin/cone" label="jondgoodwin/cone">
        <attvalues>
          <attvalue for="0" value="cone,programming-language,compiler,web3d,webassembly,memory-management,concurrency,type-safety,systems-language" />
        </attvalues>
      </node>
      <node id="ambientsprotocol/whitepaper" label="ambientsprotocol/whitepaper">
        <attvalues>
          <attvalue for="0" value="distributed-computing,p2p,decentralized,process-calculus,ambient-calculus,functional-programming" />
        </attvalues>
      </node>
      <node id="wakingrufus/spring-funk" label="wakingrufus/spring-funk">
        <attvalues>
          <attvalue for="0" value="functional-programming,kotlin,spring-boot" />
        </attvalues>
      </node>
      <node id="Sanix-Darker/Tic-Tac" label="Sanix-Darker/Tic-Tac">
        <attvalues>
          <attvalue for="0" value="deadline,money,programming-language,programmer,programmer-tool,payment,maintenance-xp,hack,hacking,hijack,hijacking,hijacking-methods,hijack-js,protect,protected,save,moneymoneyapp,protection,easy-to-use,easy" />
        </attvalues>
      </node>
      <node id="calebharris/fp_book_club_ts" label="calebharris/fp_book_club_ts">
        <attvalues>
          <attvalue for="0" value="typescript,functional-programming" />
        </attvalues>
      </node>
      <node id="kekcleader/FreeOberon" label="kekcleader/FreeOberon">
        <attvalues>
          <attvalue for="0" value="oberon,ide,programming-language,graphics-programming,gui-application,gui-programming,text-editor,pascal,turbo-pascal,turbo-c,retro,compiler,libsdl2-dev,linux,windows,console-visualization,terminal-emulator,cross-platform" />
        </attvalues>
      </node>
      <node id="friguzzi/cplint" label="friguzzi/cplint">
        <attvalues>
          <attvalue for="0" value="probabilistic-programming,logic-programming,probabilistic-logic-programming,machine-learning,inductive-logic-programming,prolog" />
        </attvalues>
      </node>
      <node id="graphs4value/refinery" label="graphs4value/refinery">
        <attvalues>
          <attvalue for="0" value="graphs,modeling,logic" />
        </attvalues>
      </node>
      <node id="asxez/stove" label="asxez/stove">
        <attvalues>
          <attvalue for="0" value="c,programming-language,stove,interpreted-language,object-oriented-programming-language" />
        </attvalues>
      </node>
      <node id="crvouga/headless-combobox" label="crvouga/headless-combobox">
        <attvalues>
          <attvalue for="0" value="autocomplete,framework-agnostic,typescript,zero-dependency,functional-programming,combobox,aria,headless-ui" />
        </attvalues>
      </node>
      <node id="mercari/RemoteDataK" label="mercari/RemoteDataK">
        <attvalues>
          <attvalue for="0" value="remotedata,kotlin,android,kotlin-android,functional-programming,remote-data,kotlin-library,java,adt,algebraic-data-types" />
        </attvalues>
      </node>
      <node id="maebert/prolog_puzzles" label="maebert/prolog_puzzles">
        <attvalues>
          <attvalue for="0" value="prolog,exercise,prolog-puzzles,puzzle,cognitive-science" />
        </attvalues>
      </node>
      <node id="robinhilliard/pipes" label="robinhilliard/pipes">
        <attvalues>
          <attvalue for="0" value="python,elixir-lang,pipes,functional-programming" />
        </attvalues>
      </node>
      <node id="rohitchavan-git/Java-8-Interview-Sample-Coding-Questions" label="rohitchavan-git/Java-8-Interview-Sample-Coding-Questions">
        <attvalues>
          <attvalue for="0" value="functional-programming,interview-questions,java,java-8,javadevelopment,stream" />
        </attvalues>
      </node>
      <node id="KCreate/charly-vm" label="KCreate/charly-vm">
        <attvalues>
          <attvalue for="0" value="bytecode-interpreter,compiler,coroutines,programming-language,fiber,parallel,pointer-tagging" />
        </attvalues>
      </node>
      <node id="sagittaracc/decorator" label="sagittaracc/decorator">
        <attvalues>
          <attvalue for="0" value="decorators,patterns,php,python,validation,validator,declarative-programming,php-attribute,php-attributes,php-library,php8,generic,generic-library,generic-types,generics,php-generics,rpc,rpc-api,rpc-server,rpc-service" />
        </attvalues>
      </node>
      <node id="fragilelambda/txmonad" label="fragilelambda/txmonad">
        <attvalues>
          <attvalue for="0" value="haskell,xmonad,functional-programming,beginner-friendly" />
        </attvalues>
      </node>
      <node id="Hugoberry/PowerQueryFunctional" label="Hugoberry/PowerQueryFunctional">
        <attvalues>
          <attvalue for="0" value="powerquery,m,functional-programming,underscore,lambda" />
        </attvalues>
      </node>
      <node id="Drahflow/Elymas" label="Drahflow/Elymas">
        <attvalues>
          <attvalue for="0" value="stack-based,programming-language,jit" />
        </attvalues>
      </node>
      <node id="onehr/crust" label="onehr/crust">
        <attvalues>
          <attvalue for="0" value="compiler,rust,c,programming-language,x86-64,assembly,c11,lexer-parser" />
        </attvalues>
      </node>
      <node id="pelirodri/LaWea" label="pelirodri/LaWea">
        <attvalues>
          <attvalue for="0" value="programming-language,esoteric-programming-language,esoteric-language,chile,chilean" />
        </attvalues>
      </node>
      <node id="LingDong-/wax" label="LingDong-/wax">
        <attvalues>
          <attvalue for="0" value="programming-language,transpiler,c99,typescript,java,compiler" />
        </attvalues>
      </node>
      <node id="uliwitness/simpleparser" label="uliwitness/simpleparser">
        <attvalues>
          <attvalue for="0" value="parser,tokenizer,programming-language,tutorial,sample-code" />
        </attvalues>
      </node>
      <node id="SWI-Prolog/swipl-devel" label="SWI-Prolog/swipl-devel">
        <attvalues>
          <attvalue for="0" value="swi-prolog,prolog,logic-programming" />
        </attvalues>
      </node>
      <node id="inconvergent/cl-grph" label="inconvergent/cl-grph">
        <attvalues>
          <attvalue for="0" value="common-lisp,datalog,functional-programming,graph,lisp,incomplete,wip,immutable,data-structures,generative-art,generattive" />
        </attvalues>
      </node>
      <node id="swlaschin/DomainModelingMadeFunctional" label="swlaschin/DomainModelingMadeFunctional">
        <attvalues>
          <attvalue for="0" value="domain-driven-design,fsharp,domain-model,functional-programming" />
        </attvalues>
      </node>
      <node id="leanprover/lean3" label="leanprover/lean3">
        <attvalues>
          <attvalue for="0" value="programming-language,theorem-proving,type-theory,verification,dependent-types,lean" />
        </attvalues>
      </node>
      <node id="luau-lang/luau" label="luau-lang/luau">
        <attvalues>
          <attvalue for="0" value="lua,programming-language,scripting-language" />
        </attvalues>
      </node>
      <node id="antl3x/super-ts" label="antl3x/super-ts">
        <attvalues>
          <attvalue for="0" value="functional-programming,typescript,static-land,fantasy-land,haskell,purescript" />
        </attvalues>
      </node>
      <node id="clio-lang/clio" label="clio-lang/clio">
        <attvalues>
          <attvalue for="0" value="programming-language,language,functional-programming,clio,compiler,distributed-programming,parallelism" />
        </attvalues>
      </node>
      <node id="pveyes/naskah" label="pveyes/naskah">
        <attvalues>
          <attvalue for="0" value="bahasa-indonesia,indonesia,pemrograman,compiler,programming-language,rust,webassembly,naskah,oss" />
        </attvalues>
      </node>
      <node id="Malax/elmboy" label="Malax/elmboy">
        <attvalues>
          <attvalue for="0" value="gameboy,emulator,functional-programming,elm,gameboy-emulator" />
        </attvalues>
      </node>
      <node id="TomaszRewak/TREPL" label="TomaszRewak/TREPL">
        <attvalues>
          <attvalue for="0" value="programming-language,teaching-materials,object-oriented-programming,interactive-visualizations,memory-allocation" />
        </attvalues>
      </node>
      <node id="mmenestret/fp-resources" label="mmenestret/fp-resources">
        <attvalues>
          <attvalue for="0" value="scala,monad,free-monads,category-theory,algebra,monad-transformers,recursion-schemes,monoid,typeclasses,typeclass,functional-programming" />
        </attvalues>
      </node>
      <node id="ace411/bingo-functional" label="ace411/bingo-functional">
        <attvalues>
          <attvalue for="0" value="php,php7,php-library,functional-programming,functional-php,functional,bingo-framework,either-monad,maybe-monad,functors,helpers,fp,immutability,io-monad,state-monad,reader-monad,writer-monad,monads,immutable" />
        </attvalues>
      </node>
      <node id="mailund/tailr" label="mailund/tailr">
        <attvalues>
          <attvalue for="0" value="r,functional-programming,tail-call-optimization" />
        </attvalues>
      </node>
      <node id="MacCASOutreach/graphicsvg" label="MacCASOutreach/graphicsvg">
        <attvalues>
          <attvalue for="0" value="elm,graphics-library,education,outreach,research,drawing,animation,game-creation,functional-programming" />
        </attvalues>
      </node>
      <node id="sergiors/prelude" label="sergiors/prelude">
        <attvalues>
          <attvalue for="0" value="functional-programming,php,monad" />
        </attvalues>
      </node>
      <node id="nlkl/Optional" label="nlkl/Optional">
        <attvalues>
          <attvalue for="0" value="option-type,safety,functional-programming" />
        </attvalues>
      </node>
      <node id="Feral-Lang/Feral" label="Feral-Lang/Feral">
        <attvalues>
          <attvalue for="0" value="programming-language,interpreter,compiler,scripting-language,interpreted-programming-language,bytecode-interpreter,cpp,cxx,proglangs-discord,cxx20,cpp20" />
        </attvalues>
      </node>
      <node id="tomcl/issie" label="tomcl/issie">
        <attvalues>
          <attvalue for="0" value="digital,logic,editor,simulator,fsharp,fable,electron,educational,fpga,verilog" />
        </attvalues>
      </node>
      <node id="mdg/leema" label="mdg/leema">
        <attvalues>
          <attvalue for="0" value="programming-language,functional-programming,virtual-machine" />
        </attvalues>
      </node>
      <node id="microsoft/Guan" label="microsoft/Guan">
        <attvalues>
          <attvalue for="0" value="guan,logic-programming,csharp,netstandard20,windows,linux,library,prolog" />
        </attvalues>
      </node>
      <node id="lone-lang/lone" label="lone-lang/lone">
        <attvalues>
          <attvalue for="0" value="freestanding,freestanding-application,freestanding-environments,linux,linux-shell,lisp,lisp-interpreter,standalone,standalone-executables,programming-language,linux-syscall,linux-syscall-support,linux-system-calls,linux-uapi" />
        </attvalues>
      </node>
      <node id="fluture-js/fluture-express" label="fluture-js/fluture-express">
        <attvalues>
          <attvalue for="0" value="express,express-middleware,fluture,functional-programming" />
        </attvalues>
      </node>
      <node id="trizen/sidef" label="trizen/sidef">
        <attvalues>
          <attvalue for="0" value="perl,programming-language,sidef,object-oriented,transpiler" />
        </attvalues>
      </node>
      <node id="callisto-lang/compiler" label="callisto-lang/compiler">
        <attvalues>
          <attvalue for="0" value="compiler,concatenative,concatenative-language,concatenative-programming-language,programming-language,uxn,uxntal,x86-64" />
        </attvalues>
      </node>
      <node id="FreakC-Foundation/FreakC" label="FreakC-Foundation/FreakC">
        <attvalues>
          <attvalue for="0" value="programming-language,windows,scripting-language,compiler,batch,transpiler,dos,devkit,freakc,procedural,language" />
        </attvalues>
      </node>
      <node id="google/wuffs" label="google/wuffs">
        <attvalues>
          <attvalue for="0" value="parsing,memory-safety,programming-language,codec" />
        </attvalues>
      </node>
      <node id="carp-lang/Carp" label="carp-lang/Carp">
        <attvalues>
          <attvalue for="0" value="lisp,language,game-development,games,static,typed,repl,gamedev,functional-programming,functional" />
        </attvalues>
      </node>
      <node id="fantasyland/static-land" label="fantasyland/static-land">
        <attvalues>
          <attvalue for="0" value="functional-programming,fantasy-land,specification,monad,functor,monoid,adt,algebraic,algebraic-data-types,algebra,static-land" />
        </attvalues>
      </node>
      <node id="rigetti/oqaml" label="rigetti/oqaml">
        <attvalues>
          <attvalue for="0" value="quantum-simulation,ocaml,functional-programming,state-machine" />
        </attvalues>
      </node>
      <node id="gabordemooij/citrine" label="gabordemooij/citrine">
        <attvalues>
          <attvalue for="0" value="dutch-language,french-language,localization,programming-language" />
        </attvalues>
      </node>
      <node id="maximkrouk/SweetUI" label="maximkrouk/SweetUI">
        <attvalues>
          <attvalue for="0" value="swiftui,uikit,swift,declarative,ui,framework,cocoapods,interface,declarative-ui,declarative-programming,swift5-1,xcode11" />
        </attvalues>
      </node>
      <node id="pen-lang/pen" label="pen-lang/pen">
        <attvalues>
          <attvalue for="0" value="functional,statically-typed,wasm,concurrency,programming-language,language,go,rust" />
        </attvalues>
      </node>
      <node id="cparse/cparse" label="cparse/cparse">
        <attvalues>
          <attvalue for="0" value="c-plus-plus,programming-language,calculator,expression-parser" />
        </attvalues>
      </node>
      <node id="jameshaydon/lawvere" label="jameshaydon/lawvere">
        <attvalues>
          <attvalue for="0" value="category-theory,programming-language,compiler,interpreter,effects" />
        </attvalues>
      </node>
      <node id="qnighy/ipc_solver" label="qnighy/ipc_solver">
        <attvalues>
          <attvalue for="0" value="ocaml,logic,solver,twitter" />
        </attvalues>
      </node>
      <node id="lining808/CS-Ebook" label="lining808/CS-Ebook">
        <attvalues>
          <attvalue for="0" value="ai,computer-science,deep-learning,programming-language,data-science,ebooks" />
        </attvalues>
      </node>
      <node id="krisnova/naml" label="krisnova/naml">
        <attvalues>
          <attvalue for="0" value="go,kubernetes,yaml-templating,programming-language" />
        </attvalues>
      </node>
      <node id="electrikmilk/cherri" label="electrikmilk/cherri">
        <attvalues>
          <attvalue for="0" value="compiler,ios-shortcuts,programming-language,siri-shortcuts,macos,ios,golang,go,apple-shortcuts,apple" />
        </attvalues>
      </node>
      <node id="trealla-prolog/go" label="trealla-prolog/go">
        <attvalues>
          <attvalue for="0" value="go,prolog,trealla-prolog,logic-programming,wasm" />
        </attvalues>
      </node>
      <node id="google/neural-logic-machines" label="google/neural-logic-machines">
        <attvalues>
          <attvalue for="0" value="neuro-symbolic-learning,logic-programming,reinforcement-learning" />
        </attvalues>
      </node>
      <node id="yona-lang/yona" label="yona-lang/yona">
        <attvalues>
          <attvalue for="0" value="programming-language,functional-languages,asynchronous,graalvm,jvm-language,mainstream-languages,yatta-language,yona" />
        </attvalues>
      </node>
      <node id="fenwii/LibraryBookSearchEnginePro" label="fenwii/LibraryBookSearchEnginePro">
        <attvalues>
          <attvalue for="0" value="academic,library,bookengine,science,search-engine,research,university,learning,students,books,book,papers,logic,recommendation-system" />
        </attvalues>
      </node>
      <node id="enact-lang/enact" label="enact-lang/enact">
        <attvalues>
          <attvalue for="0" value="enact,enact-lang,enact-language,enact-programming-language,lang,language,programming-language,interpreter,compiler,matilda,cpp,modern-cpp,c-plus-plus" />
        </attvalues>
      </node>
      <node id="alidehkhodaei/categorized-websites" label="alidehkhodaei/categorized-websites">
        <attvalues>
          <attvalue for="0" value="computer-science,learning,programming,website,practice-programming,programming-language,online-learning-platforms,job-search,writing-resume" />
        </attvalues>
      </node>
      <node id="uwdata/draco" label="uwdata/draco">
        <attvalues>
          <attvalue for="0" value="visualization-constraints,answer-set-programming,visualization-recommendation,vega" />
        </attvalues>
      </node>
      <node id="Mesabloo/nihil" label="Mesabloo/nihil">
        <attvalues>
          <attvalue for="0" value="functional-programming,interpreter" />
        </attvalues>
      </node>
      <node id="kit-ty-kate/labrys" label="kit-ty-kate/labrys">
        <attvalues>
          <attvalue for="0" value="llvm,ocaml,programming-language,compiler,language,type-system" />
        </attvalues>
      </node>
      <node id="planttheidea/unchanged" label="planttheidea/unchanged">
        <attvalues>
          <attvalue for="0" value="javascript,functional-programming,immutable" />
        </attvalues>
      </node>
      <node id="lunacookies/eldiro" label="lunacookies/eldiro">
        <attvalues>
          <attvalue for="0" value="programming-language,rust" />
        </attvalues>
      </node>
      <node id="PropicSignifi/R.apex" label="PropicSignifi/R.apex">
        <attvalues>
          <attvalue for="0" value="apex,functional-programming,lodash,ramda,salesforce-developers,salesforce" />
        </attvalues>
      </node>
      <node id="mfranzon/mojo-is-awesome" label="mfranzon/mojo-is-awesome">
        <attvalues>
          <attvalue for="0" value="awesome,hacktoberfest,mojo,machine-learning,programming-language,python" />
        </attvalues>
      </node>
      <node id="FranklyRocks/sharp-pipes" label="FranklyRocks/sharp-pipes">
        <attvalues>
          <attvalue for="0" value="php,functional-programming,pipeline,lightweight,no-dependencies" />
        </attvalues>
      </node>
      <node id="zio/zio" label="zio/zio">
        <attvalues>
          <attvalue for="0" value="effects,concurrency,asynchronicity,functional-programming,queues,streams,promises,stm,asynchronous,concurrent,concurrent-programming,asynchronous-programming,concurrent-data-structure,zio,scala" />
        </attvalues>
      </node>
      <node id="zehaochen19/vanilla-lang" label="zehaochen19/vanilla-lang">
        <attvalues>
          <attvalue for="0" value="system-f,type-inference,polymorphism,programming-language,higher-rank-types,lambda-calculus" />
        </attvalues>
      </node>
      <node id="jtomschroeder/lambda" label="jtomschroeder/lambda">
        <attvalues>
          <attvalue for="0" value="cpp,functional-programming" />
        </attvalues>
      </node>
      <node id="mingodad/picat" label="mingodad/picat">
        <attvalues>
          <attvalue for="0" value="symbolic-computation,dynamic-programming,prolog,pattern-matching,solvers,constraint-programming,declarative-programming,functional-programming,cross-platform" />
        </attvalues>
      </node>
      <node id="rpeszek/notes-milewski-ctfp-hs" label="rpeszek/notes-milewski-ctfp-hs">
        <attvalues>
          <attvalue for="0" value="category-theory,haskell,functional-programming,book-notes,wiki-page,literate-programming" />
        </attvalues>
      </node>
      <node id="HenriqueLimas/osagai" label="HenriqueLimas/osagai">
        <attvalues>
          <attvalue for="0" value="webcomponents,functional-programming,tiny-library" />
        </attvalues>
      </node>
      <node id="chessai/theseus" label="chessai/theseus">
        <attvalues>
          <attvalue for="0" value="programming-language,functional-programming,reversible-computation,theseus" />
        </attvalues>
      </node>
      <node id="empirical-soft/empirical-lang" label="empirical-soft/empirical-lang">
        <attvalues>
          <attvalue for="0" value="time-series-analysis,programming-language" />
        </attvalues>
      </node>
      <node id="joshburgess/inferno-most-fp-demo" label="joshburgess/inferno-most-fp-demo">
        <attvalues>
          <attvalue for="0" value="reactive-programming,functional-programming,react,redux,inferno,most,observables,rxjs,ramda,lodash-fp,mori,immutablejs,jsx,hyperscript,hyperscript-helpers,counter,functional,reactive,redux-logger,union-type" />
        </attvalues>
      </node>
      <node id="raphydaphy/Q-Operating-System" label="raphydaphy/Q-Operating-System">
        <attvalues>
          <attvalue for="0" value="operating-system,programming-language,assembly,c" />
        </attvalues>
      </node>
      <node id="monasticacademy/logical-induction" label="monasticacademy/logical-induction">
        <attvalues>
          <attvalue for="0" value="probability,inference,logic" />
        </attvalues>
      </node>
      <node id="MarcelRobeer/VisualNarrator" label="MarcelRobeer/VisualNarrator">
        <attvalues>
          <attvalue for="0" value="requirements-engineering,user-story,conceptual-models,prolog,requirements-quality-analysis" />
        </attvalues>
      </node>
      <node id="react-declarative/react-declarative" label="react-declarative/react-declarative">
        <attvalues>
          <attvalue for="0" value="typescript,material-ui,form-validation,json-endpoint,react,layout-engine,grid-system,state-management,declarative,declarative-programming,frontend,standalone,nested-grids,layout-grid,intellisense,code-autocomplete,form-builder,mui" />
        </attvalues>
      </node>
      <node id="avast/scala-server-toolkit" label="avast/scala-server-toolkit">
        <attvalues>
          <attvalue for="0" value="scala,functional-programming,server,toolkit,cats-effect" />
        </attvalues>
      </node>
      <node id="yoeo/guesslang" label="yoeo/guesslang">
        <attvalues>
          <attvalue for="0" value="machine-learning,tensorflow,python,programming-language,classification,deep-learning,deep-neural-networks" />
        </attvalues>
      </node>
      <node id="kammt/MemeAssembly" label="kammt/MemeAssembly">
        <attvalues>
          <attvalue for="0" value="memes,esoteric-programming-language,compiler,programming-language,esoteric-language,x86-64-gcc,memeassembly,c" />
        </attvalues>
      </node>
      <node id="lambdacube3d/lambdacube-quake3" label="lambdacube3d/lambdacube-quake3">
        <attvalues>
          <attvalue for="0" value="haskell,quake,game,3d,gpu,game-engine,functional-programming" />
        </attvalues>
      </node>
      <node id="oleg-py/stm4cats" label="oleg-py/stm4cats">
        <attvalues>
          <attvalue for="0" value="scala,fp,functional-programming,cats,cats-effect,software-transactional-memory" />
        </attvalues>
      </node>
      <node id="pakoito/FunctionalRx" label="pakoito/FunctionalRx">
        <attvalues>
          <attvalue for="0" value="android,functional-programming,java" />
        </attvalues>
      </node>
      <node id="dbrattli/Expression" label="dbrattli/Expression">
        <attvalues>
          <attvalue for="0" value="functional-programming,fsharp,python,railway-oriented-programming,oslash" />
        </attvalues>
      </node>
      <node id="wbbradley/ace" label="wbbradley/ace">
        <attvalues>
          <attvalue for="0" value="zion,programming-language,compiler,hindley-milner,system-f,typeclass,static-typing,garbage-collect,lambda-calculus,llvm,llvm-compiler,ffi,type-safety,newtypes,polymorphism" />
        </attvalues>
      </node>
      <node id="wouterbeek/prolog_graphviz" label="wouterbeek/prolog_graphviz">
        <attvalues>
          <attvalue for="0" value="prolog,swi-prolog,graph,graphviz,graphviz-dot,graphviz-dot-language,visualization" />
        </attvalues>
      </node>
      <node id="ehsanmok/create-your-own-lang-with-rust" label="ehsanmok/create-your-own-lang-with-rust">
        <attvalues>
          <attvalue for="0" value="rust-lang,programming-language,compiler,compiler-design,teaching-materials,book,language-design" />
        </attvalues>
      </node>
      <node id="SwiftRex/SwiftRex" label="SwiftRex/SwiftRex">
        <attvalues>
          <attvalue for="0" value="swift,combine,publisher,subscriber,swiftui,redux,unidirectional-dataflow,rxswift,reactiveswift,reactivecocoa,reactive-programming,observable,state-machine,reducer,functional-programming,frp,apple,event-sourcing,combine-framework" />
        </attvalues>
      </node>
      <node id="VerseMetaVerse/UnrealVerse" label="VerseMetaVerse/UnrealVerse">
        <attvalues>
          <attvalue for="0" value="epic,epicgames,fortnite,functional-programming,metaverse,metaverse-infrastructure,uefn,unreal,verse,island-creator,simon-peyton-jones,tim-sweeney,verse-language,visual-verse,gpu,ue5,ue6,3d,cpp,blueprints" />
        </attvalues>
      </node>
      <node id="PlugFox/bloc" label="PlugFox/bloc">
        <attvalues>
          <attvalue for="0" value="bloc,dart,flutter,state-management,state-machine,pub,sub,publisher-subscriber-pattern,pub-sub,publisher,subscriber,business,logic,component,library,package,dartlang,dart-library,flutter-package" />
        </attvalues>
      </node>
      <node id="thma/WhyHaskellMatters" label="thma/WhyHaskellMatters">
        <attvalues>
          <attvalue for="0" value="haskell,anonymous-functions,function-composition,functional-programming,first-class-functions,higher-order-functions,partial-application,pattern-matching,algebraic-data-types,polymorphic-types,declarative-programming,mapping,folding,lazy-evaluation,list-comprehension,type-classes,functor,foldable,explicit-side-effects,monads" />
        </attvalues>
      </node>
      <node id="MohamedAdelZidane/Roadmap-to-become-a-professional-Software-Engineer" label="MohamedAdelZidane/Roadmap-to-become-a-professional-Software-Engineer">
        <attvalues>
          <attvalue for="0" value="computer-science,programming-language,algorithm" />
        </attvalues>
      </node>
      <node id="lurk-lab/lurk-beta" label="lurk-lab/lurk-beta">
        <attvalues>
          <attvalue for="0" value="rust,zk-snarks,compiler,cryptography,programming-language,zero-knowledge" />
        </attvalues>
      </node>
      <node id="juspay/purescript-presto" label="juspay/purescript-presto">
        <attvalues>
          <attvalue for="0" value="purescript,app-development,native,functional-programming" />
        </attvalues>
      </node>
      <node id="smudgelang/smudge" label="smudgelang/smudge">
        <attvalues>
          <attvalue for="0" value="language,programming-language,state-machine" />
        </attvalues>
      </node>
      <node id="whitecatboard/whitecat-ide" label="whitecatboard/whitecat-ide">
        <attvalues>
          <attvalue for="0" value="esp32,blockly,lua-rtos,programming-language" />
        </attvalues>
      </node>
      <node id="SuperDisk/tar.pl" label="SuperDisk/tar.pl">
        <attvalues>
          <attvalue for="0" value="logic-programming,prolog,tar,unix" />
        </attvalues>
      </node>
      <node id="nim-works/nimskull" label="nim-works/nimskull">
        <attvalues>
          <attvalue for="0" value="language,compiler,programming-language" />
        </attvalues>
      </node>
      <node id="viperproject/silver" label="viperproject/silver">
        <attvalues>
          <attvalue for="0" value="viper,verification,programming-language" />
        </attvalues>
      </node>
      <node id="tgecho/canrun_rs" label="tgecho/canrun_rs">
        <attvalues>
          <attvalue for="0" value="rust,logic,kanren,dsl" />
        </attvalues>
      </node>
      <node id="ArgosOfIthica/scalu" label="ArgosOfIthica/scalu">
        <attvalues>
          <attvalue for="0" value="source-engine,config,valve,tf2,csgo,left4dead,gmod,programming-language,team-fortress-2,python,quake,teamfortress2" />
        </attvalues>
      </node>
      <node id="danielnixon/total-functions" label="danielnixon/total-functions">
        <attvalues>
          <attvalue for="0" value="typescript,functional-programming,type-safety" />
        </attvalues>
      </node>
      <node id="adorad/adorad" label="adorad/adorad">
        <attvalues>
          <attvalue for="0" value="language,programming-language,science,machine-learning,deep-learning,gpu,scientific-computing,computing,cuda,jit,llvm,compiler,clang,metaprogramming,macros,object-oriented,functional-programming,c,adorad,adorad-language" />
        </attvalues>
      </node>
      <node id="jimmyg1997/NTUA-ai-artificial-intelligence" label="jimmyg1997/NTUA-ai-artificial-intelligence">
        <attvalues>
          <attvalue for="0" value="artificial-intelligence,ntua-ece,a-star,prolog,java,google-maps,taxi-app" />
        </attvalues>
      </node>
      <node id="mpetrovich/dash" label="mpetrovich/dash">
        <attvalues>
          <attvalue for="0" value="lodash,underscore,php,ramda,functional-programming" />
        </attvalues>
      </node>
      <node id="juanmanuel-tirado/savetheworldwithgo" label="juanmanuel-tirado/savetheworldwithgo">
        <attvalues>
          <attvalue for="0" value="golang,go,book,programming-language,programming-exercises,grpc-go,kafka,sql,gocql,cobra,protobuf,concurrency,learning,free" />
        </attvalues>
      </node>
      <node id="RevengerWizard/teascript" label="RevengerWizard/teascript">
        <attvalues>
          <attvalue for="0" value="interpreter,language,programming-language,teascript,c" />
        </attvalues>
      </node>
      <node id="PhilMoe/cerberus" label="PhilMoe/cerberus">
        <attvalues>
          <attvalue for="0" value="monkey,cerberus-x,programming-language,game-dev,gamedev,android,cross-platform,html5,indiegamedev,ios,linux,macos,windows" />
        </attvalues>
      </node>
      <node id="SimonBuxx/LogiJS" label="SimonBuxx/LogiJS">
        <attvalues>
          <attvalue for="0" value="logic-gates,logic-circuit,logic,simulator,boolean,electronics,cpu,flip-flop,gates,logic-circuits" />
        </attvalues>
      </node>
      <node id="akimichi/functionaljs" label="akimichi/functionaljs">
        <attvalues>
          <attvalue for="0" value="javascript,nodejs,functional-programming" />
        </attvalues>
      </node>
      <node id="hugolgst/ikea-sharp" label="hugolgst/ikea-sharp">
        <attvalues>
          <attvalue for="0" value="ikea-sharp,programming-language,compiler,golang" />
        </attvalues>
      </node>
      <node id="buraksenyurt/rust-farm" label="buraksenyurt/rust-farm">
        <attvalues>
          <attvalue for="0" value="rust,rust-lang,programming-language,self-learning,tutorials,coding" />
        </attvalues>
      </node>
      <node id="wa-lang/wa" label="wa-lang/wa">
        <attvalues>
          <attvalue for="0" value="programming-language,wa,language,wa-lang,wasm,webassembly,compiler,gamedev,wasm4,game,game-development,p5,processing,wasm-4,explore" />
        </attvalues>
      </node>
      <node id="thesephist/tabloid" label="thesephist/tabloid">
        <attvalues>
          <attvalue for="0" value="programming-language,interpreter,parser,clickbait" />
        </attvalues>
      </node>
      <node id="geirolz/fly4s" label="geirolz/fly4s">
        <attvalues>
          <attvalue for="0" value="database-migrations,flyway,flywaydb,flyway-migrations,functional-programming,cats,cats-effect,data,database,db,persistence,scala" />
        </attvalues>
      </node>
      <node id="FLHonker/Awesome-Neural-Logic" label="FLHonker/Awesome-Neural-Logic">
        <attvalues>
          <attvalue for="0" value="neural-network,logic-programming,inductive-logic-programming,logic,markov,first-order-logic,causal,causal-inference,causality" />
        </attvalues>
      </node>
      <node id="AlexITC/playsonify" label="AlexITC/playsonify">
        <attvalues>
          <attvalue for="0" value="scala,playframework,scalactic,json-api,library,mill,webservices,functional-programming,testing,akka-http,hacktoberfest" />
        </attvalues>
      </node>
      <node id="alexovidiupopa/UBB" label="alexovidiupopa/UBB">
        <attvalues>
          <attvalue for="0" value="cpp,oop,java,python,clisp,prolog,assembly-8086,graphs-theory,data-structures-and-algorithms,t-sql,shell,cisco-packet-tracer,c" />
        </attvalues>
      </node>
      <node id="gingerbeardman/mandala" label="gingerbeardman/mandala">
        <attvalues>
          <attvalue for="0" value="logic,mandala,mandala-art,pixels" />
        </attvalues>
      </node>
      <node id="miciek/grokkingfp-examples" label="miciek/grokkingfp-examples">
        <attvalues>
          <attvalue for="0" value="scala,exercises,book,learning,tutorial,functional-programming,programming-language,beginner-friendly" />
        </attvalues>
      </node>
      <node id="ENvironmentSet/hyogwa" label="ENvironmentSet/hyogwa">
        <attvalues>
          <attvalue for="0" value="algebraic-effects,computational-effects,effect-system,extensible-effects,functional-programming,typescript" />
        </attvalues>
      </node>
      <node id="alejandroaperez1994g/js-shopping-wizard" label="alejandroaperez1994g/js-shopping-wizard">
        <attvalues>
          <attvalue for="0" value="css,forms-validation,html,javascript,logic-programming" />
        </attvalues>
      </node>
      <node id="purr-platform/purr1" label="purr-platform/purr1">
        <attvalues>
          <attvalue for="0" value="programming-language" />
        </attvalues>
      </node>
      <node id="evm-lang-design/evm-lang-design" label="evm-lang-design/evm-lang-design">
        <attvalues>
          <attvalue for="0" value="ethereum,solidity,functional-programming,language-design" />
        </attvalues>
      </node>
      <node id="przemyslawjanpietrzak/pyMonet" label="przemyslawjanpietrzak/pyMonet">
        <attvalues>
          <attvalue for="0" value="python,monads,functional-programming" />
        </attvalues>
      </node>
      <node id="endbasic/endbasic" label="endbasic/endbasic">
        <attvalues>
          <attvalue for="0" value="programming-language,basic,interpreter,parser,scripting-language,learn-to-code,raspberry-pi,gpio,language,rust,repl,graphics-programming,sdl2" />
        </attvalues>
      </node>
      <node id="larsbrinkhoff/emacs-cl" label="larsbrinkhoff/emacs-cl">
        <attvalues>
          <attvalue for="0" value="lisp,emacs-lisp,common-lisp,interpreter,compiler,programming-language,emacs" />
        </attvalues>
      </node>
      <node id="loyso/LuaCSP" label="loyso/LuaCSP">
        <attvalues>
          <attvalue for="0" value="lua,lua-bindings,lua-library,communicating-sequential-processes,fsm,programming-language,coroutines,fsms,game-development,gamedev,game-logic,game-script,asynchronous-programming,yield,game-ai" />
        </attvalues>
      </node>
      <node id="mschuldt/raillisp" label="mschuldt/raillisp">
        <attvalues>
          <attvalue for="0" value="forth,lisp,embedded,programming-language,langauge" />
        </attvalues>
      </node>
      <node id="SingularityT3/PseudoEngine2" label="SingularityT3/PseudoEngine2">
        <attvalues>
          <attvalue for="0" value="interpreter,pseudocode,pseudocode-interpreter,alevel,computer-science,igcse,programming-language,a-level,a-level-computer-science,language" />
        </attvalues>
      </node>
      <node id="avdosev/either_dart" label="avdosev/either_dart">
        <attvalues>
          <attvalue for="0" value="either,dart,flutter,error-handling,dart-either,dart-either-monad,dart-functional-programming,either-dart,functional-programming" />
        </attvalues>
      </node>
      <node id="irmen/prog8" label="irmen/prog8">
        <attvalues>
          <attvalue for="0" value="6502,retro,retrocomputing,commodore-64,compiler,programming-language,c64,kotlin,language,commander-x16" />
        </attvalues>
      </node>
      <node id="RobinMalfait/lazy-collections" label="RobinMalfait/lazy-collections">
        <attvalues>
          <attvalue for="0" value="lazy-collections,functional-programming,javascript,lazy" />
        </attvalues>
      </node>
      <node id="melsman/mlkit" label="melsman/mlkit">
        <attvalues>
          <attvalue for="0" value="standard-ml,compiler,functional-programming,regions" />
        </attvalues>
      </node>
      <node id="rla/prolog-markdown" label="rla/prolog-markdown">
        <attvalues>
          <attvalue for="0" value="swi-prolog,markdown,markdown-parser" />
        </attvalues>
      </node>
      <node id="triska/lisprolog" label="triska/lisprolog">
        <attvalues>
          <attvalue for="0" value="prolog,lisp,interpreter" />
        </attvalues>
      </node>
      <node id="HarvardPL/AbcDatalog" label="HarvardPL/AbcDatalog">
        <attvalues>
          <attvalue for="0" value="datalog,logic-programming,declarative-programming,knowledge-base,rule-engine" />
        </attvalues>
      </node>
      <node id="dabacon/qsel" label="dabacon/qsel">
        <attvalues>
          <attvalue for="0" value="a,quantum-computing,programming-language,superposition,qubits,esoteric-programming-language" />
        </attvalues>
      </node>
      <node id="julelang/jule" label="julelang/jule">
        <attvalues>
          <attvalue for="0" value="language,programming-language,jule,julelang,compiler" />
        </attvalues>
      </node>
      <node id="vala-lang/vala-www" label="vala-lang/vala-www">
        <attvalues>
          <attvalue for="0" value="programming-language,vala,website,gnome,programming,static,static-site,static-website,zola,site,language,hacktoberfest" />
        </attvalues>
      </node>
      <node id="lfkdsk/SICP-Magical-Book" label="lfkdsk/SICP-Magical-Book">
        <attvalues>
          <attvalue for="0" value="sicp,gitbook,open-course,interpreters,compilers,functional-programming" />
        </attvalues>
      </node>
      <node id="courses-at-nju-by-hfwei/cpl-docs" label="courses-at-nju-by-hfwei/cpl-docs">
        <attvalues>
          <attvalue for="0" value="c,docs,docsify,programming-language,nju-software-institute" />
        </attvalues>
      </node>
      <node id="the-akira/Computer-Science-Resources" label="the-akira/Computer-Science-Resources">
        <attvalues>
          <attvalue for="0" value="awesome-list,computer,programming-language,artificial-intelligence,cryptography,database,cybersecurity,operating-system,mathematics,regular-expression,cloud-computing,quantum-computing,networking,physics,exploits,javascript,python,assembly,computervision,machine-learning" />
        </attvalues>
      </node>
      <node id="odin-lang/Odin" label="odin-lang/Odin">
        <attvalues>
          <attvalue for="0" value="odin-programming-language,odin,language,compiler,odin-lang,programming-language,programming-languages" />
        </attvalues>
      </node>
      <node id="NixOS/nix" label="NixOS/nix">
        <attvalues>
          <attvalue for="0" value="nix,functional-programming,c-plus-plus,package-manager,declarative-language" />
        </attvalues>
      </node>
      <node id="joshwcomeau/react-collection-helpers" label="joshwcomeau/react-collection-helpers">
        <attvalues>
          <attvalue for="0" value="reactjs,react,functional-programming,components,arrays" />
        </attvalues>
      </node>
      <node id="rm-hull/wam" label="rm-hull/wam">
        <attvalues>
          <attvalue for="0" value="clojure,unification,wam,parser-combinators,tutorial,prolog-implementation" />
        </attvalues>
      </node>
      <node id="scala/scala" label="scala/scala">
        <attvalues>
          <attvalue for="0" value="scala,scala-compiler,scala-programming-language,scala-library,jvm-languages,functional-programming,object-oriented-programming" />
        </attvalues>
      </node>
      <node id="anoma/juvix" label="anoma/juvix">
        <attvalues>
          <attvalue for="0" value="programming-language,arithmetic-circuits,functional-programming,privacy-preserving-technologies,anoma" />
        </attvalues>
      </node>
      <node id="Subito-it/Esito" label="Subito-it/Esito">
        <attvalues>
          <attvalue for="0" value="kotlin,functional-programming,result,retrofit,android" />
        </attvalues>
      </node>
      <node id="AvramRobert/omnia" label="AvramRobert/omnia">
        <attvalues>
          <attvalue for="0" value="clojure,repl,functional-programming,editor,console" />
        </attvalues>
      </node>
      <node id="polossk/Zero-Kara-FCPP" label="polossk/Zero-Kara-FCPP">
        <attvalues>
          <attvalue for="0" value="cpp11,cpp-course,functional-programming" />
        </attvalues>
      </node>
      <node id="zesterer/tao" label="zesterer/tao">
        <attvalues>
          <attvalue for="0" value="functional,programming-language,compiler" />
        </attvalues>
      </node>
      <node id="dictu-lang/Dictu" label="dictu-lang/Dictu">
        <attvalues>
          <attvalue for="0" value="dictu,c,interpreter,programming-language,language,bytecode,scripting-language,bytecode-interpreter,hacktoberfest" />
        </attvalues>
      </node>
      <node id="RedBeastOfLeaf/Google-IT-Automation-with-python-Coursera-Answers" label="RedBeastOfLeaf/Google-IT-Automation-with-python-Coursera-Answers">
        <attvalues>
          <attvalue for="0" value="python,automation,programming-language,python-script,programming,practice-python" />
        </attvalues>
      </node>
      <node id="mfix22/rexrex" label="mfix22/rexrex">
        <attvalues>
          <attvalue for="0" value="regex,regular-expression,composer,functional-programming,functional,reusable" />
        </attvalues>
      </node>
      <node id="bitkeks/theolog-ss2017" label="bitkeks/theolog-ss2017">
        <attvalues>
          <attvalue for="0" value="university,german,logic,theoretical-computer-science,lecture-notes" />
        </attvalues>
      </node>
      <node id="zio/zio-logging" label="zio/zio-logging">
        <attvalues>
          <attvalue for="0" value="zio,scala,logging,fp,functional-programming,tracing,slf4j" />
        </attvalues>
      </node>
      <node id="lab-v2/pyreason-gym" label="lab-v2/pyreason-gym">
        <attvalues>
          <attvalue for="0" value="gym,gym-environment,logic,logic-programming,machine-learning,reinforcement-learning,simulation" />
        </attvalues>
      </node>
      <node id="adityaathalye/shite" label="adityaathalye/shite">
        <attvalues>
          <attvalue for="0" value="bash,bash-script,shell,shell-script,static-site-generator,functional-programming,every-layout,markdown,org-mode,static-site" />
        </attvalues>
      </node>
      <node id="Shafin098/pakhi-bhasha" label="Shafin098/pakhi-bhasha">
        <attvalues>
          <attvalue for="0" value="rust,programming-language,laguage,bangla,bengali" />
        </attvalues>
      </node>
      <node id="MainakRepositor/Super-Ciphers" label="MainakRepositor/Super-Ciphers">
        <attvalues>
          <attvalue for="0" value="cipher-algorithms,cpp,java,python3,cryptography,blockchain,logic,arithmetic" />
        </attvalues>
      </node>
      <node id="CategoricalData/CQL" label="CategoricalData/CQL">
        <attvalues>
          <attvalue for="0" value="cql,category-theory,functional-programming,data-migratation,etl,data-integration,data-science,data-exchange" />
        </attvalues>
      </node>
      <node id="joaomilho/awesome-idris" label="joaomilho/awesome-idris">
        <attvalues>
          <attvalue for="0" value="idris,functional-programming,type-driven-development,haskell,awesome,awesome-list" />
        </attvalues>
      </node>
      <node id="Geri-Borbas/iOS.Package.Withable" label="Geri-Borbas/iOS.Package.Withable">
        <attvalues>
          <attvalue for="0" value="builder-pattern,declarative,declarative-programming,declarative-ui,decorator-pattern,ios,swift,swift-package,swift-package-manager,uikit" />
        </attvalues>
      </node>
      <node id="parasj/contracode" label="parasj/contracode">
        <attvalues>
          <attvalue for="0" value="deep-learning,contrastive-learning,momentum-contrast,compiler,programming-language,machine-learning,pytorch" />
        </attvalues>
      </node>
      <node id="scalaz/scalaz" label="scalaz/scalaz">
        <attvalues>
          <attvalue for="0" value="scalaz,scala,functional-programming,scala-native,scalajs" />
        </attvalues>
      </node>
      <node id="nicoabie/quickcheck" label="nicoabie/quickcheck">
        <attvalues>
          <attvalue for="0" value="swi-prolog,prolog,quickcheck,property-based-testing" />
        </attvalues>
      </node>
      <node id="di-unipi-socc/EdgeUsher" label="di-unipi-socc/EdgeUsher">
        <attvalues>
          <attvalue for="0" value="edge-computing,iot,vnf-placement,service-chain,probabilistic-programming,fog-computing,declarative-programming,sdn" />
        </attvalues>
      </node>
      <node id="J2TEAM/awesome-AutoIt" label="J2TEAM/awesome-AutoIt">
        <attvalues>
          <attvalue for="0" value="autoit,programming-language,scripting-language,autoit-script,udf,awesome-list,awesome,list" />
        </attvalues>
      </node>
      <node id="terohuttunen/proto-vulcan" label="terohuttunen/proto-vulcan">
        <attvalues>
          <attvalue for="0" value="rust,logic-programming" />
        </attvalues>
      </node>
      <node id="CatchTheTornado/askql" label="CatchTheTornado/askql">
        <attvalues>
          <attvalue for="0" value="rest-api,graphql,api,query-language,typescript,nodejs,integration,programming-language,hacktoberfest" />
        </attvalues>
      </node>
      <node id="aiya000/nico-lang" label="aiya000/nico-lang">
        <attvalues>
          <attvalue for="0" value="haskell,brainfuck,brainfuck-interpreter,programming-language,lovelive,nicoyazawa,yazawanico" />
        </attvalues>
      </node>
      <node id="bow-swift/bow-arch" label="bow-swift/bow-arch">
        <attvalues>
          <attvalue for="0" value="fp,functional-programming,swift,swift-package,bow,architecture,hacktoberfest" />
        </attvalues>
      </node>
      <node id="triska/ediprolog" label="triska/ediprolog">
        <attvalues>
          <attvalue for="0" value="emacs,emacs-lisp,prolog-process,prolog" />
        </attvalues>
      </node>
      <node id="flix/flix" label="flix/flix">
        <attvalues>
          <attvalue for="0" value="flix,language,hacktoberfest,functional,imperative,logic,jvm,programming-language" />
        </attvalues>
      </node>
      <node id="novakov-alexey-zz/freya" label="novakov-alexey-zz/freya">
        <attvalues>
          <attvalue for="0" value="kubernetes-operator,scala,cats-effect,fabric8,functional-programming" />
        </attvalues>
      </node>
      <node id="nikodemus/foolang" label="nikodemus/foolang">
        <attvalues>
          <attvalue for="0" value="foolang,foo,programming-language,rust,toy-project,toy-language,interpreter,metacircular,metacircular-interpreter,transpiler,object-oriented,language,transpiled-language,compiler,self-hosted" />
        </attvalues>
      </node>
      <node id="openpeeps/toktok" label="openpeeps/toktok">
        <attvalues>
          <attvalue for="0" value="lexer,nim,nim-lang,tokenizer,lexical,generic-library,hacktoberfest,lex,lexer-generator,nim-language,parser,programming-language,tokens,awesome-nim" />
        </attvalues>
      </node>
      <node id="luc-tielen/eclair-lang" label="luc-tielen/eclair-lang">
        <attvalues>
          <attvalue for="0" value="compiler,datalog,haskell,logic-programming,llvm" />
        </attvalues>
      </node>
      <node id="leoprover/Leo-III" label="leoprover/Leo-III">
        <attvalues>
          <attvalue for="0" value="higher-order-logic,theorem-proving,logic,reasoning,atp,deduction-system" />
        </attvalues>
      </node>
      <node id="lifeart/hooked-components" label="lifeart/hooked-components">
        <attvalues>
          <attvalue for="0" value="react-hooks,react-hook,ember,emberjs,ember-addon,functional-programming,functional-reactive-programming" />
        </attvalues>
      </node>
      <node id="drym-org/qi" label="drym-org/qi">
        <attvalues>
          <attvalue for="0" value="racket,functional-programming,dsl,language,lisp" />
        </attvalues>
      </node>
      <node id="VincentJouanne/nest-clean-architecture" label="VincentJouanne/nest-clean-architecture">
        <attvalues>
          <attvalue for="0" value="clean-architecture,functional-programming,nestjs,jest,runtypes,typescript,fp-ts,prisma,ddd,microservices,tdd,docker,unit-testing,integration-testing,end-to-end-testing,cqrs" />
        </attvalues>
      </node>
      <node id="panda-lang/light" label="panda-lang/light">
        <attvalues>
          <attvalue for="0" value="light,programming-language,panda,panda-lang" />
        </attvalues>
      </node>
      <node id="CASC-Lang/Yakou" label="CASC-Lang/Yakou">
        <attvalues>
          <attvalue for="0" value="programming-language,casc,compiler,jvm-languages,bytecode-compiler,rust-like,go-like,v-like" />
        </attvalues>
      </node>
      <node id="Alja7dali/swift-web-page" label="Alja7dali/swift-web-page">
        <attvalues>
          <attvalue for="0" value="html,css,swiftui,swift,resultbuilder,declarative-ui,declarative-programming,dsl,rendering,server-side-swift,swep,swift-web-page,website,webpage,generate-css,generate-html" />
        </attvalues>
      </node>
      <node id="LogicalAtomist/principia" label="LogicalAtomist/principia">
        <attvalues>
          <attvalue for="0" value="logic,history-of-philosophy,coq,coq-ecosystem,formal-logic,formal-mathematics,formal-proofs,latex,latex-packages" />
        </attvalues>
      </node>
      <node id="ytakano/blisp" label="ytakano/blisp">
        <attvalues>
          <attvalue for="0" value="programming-language,rust,no-std" />
        </attvalues>
      </node>
      <node id="mobily/ts-belt" label="mobily/ts-belt">
        <attvalues>
          <attvalue for="0" value="typescript,functional-programming,fp,monad,option,option-type,result,result-type,array,flow" />
        </attvalues>
      </node>
      <node id="kuba--/ut" label="kuba--/ut">
        <attvalues>
          <attvalue for="0" value="unification,unification-algorithm,prolog,logic-programming" />
        </attvalues>
      </node>
      <node id="ekzhang/ukanren-rs" label="ekzhang/ukanren-rs">
        <attvalues>
          <attvalue for="0" value="microkanren,minikanren,rust,logic-programming,functional-programming,language,prolog" />
        </attvalues>
      </node>
      <node id="purescript-spec/purescript-spec" label="purescript-spec/purescript-spec">
        <attvalues>
          <attvalue for="0" value="purescript,testing,test-driven-development,functional-programming,type-safety" />
        </attvalues>
      </node>
      <node id="mimium-org/mimium" label="mimium-org/mimium">
        <attvalues>
          <attvalue for="0" value="dsl,sound,dsp,audio,compiler,music,programming-language" />
        </attvalues>
      </node>
      <node id="iOperator/CRSF-HLA" label="iOperator/CRSF-HLA">
        <attvalues>
          <attvalue for="0" value="analyzer,crossfire,expresslrs,logic,rc,tbs,tracer" />
        </attvalues>
      </node>
      <node id="niltok/magic-in-ten-mins" label="niltok/magic-in-ten-mins">
        <attvalues>
          <attvalue for="0" value="adt,java,monad,lambda-calculus,functional-programming,hkt,tutorial,formal-verification,formal-proofs" />
        </attvalues>
      </node>
      <node id="Ahnfelt/funk" label="Ahnfelt/funk">
        <attvalues>
          <attvalue for="0" value="programming-language,functional-programming,minimal-scripting-language" />
        </attvalues>
      </node>
      <node id="iliasam/uProbe" label="iliasam/uProbe">
        <attvalues>
          <attvalue for="0" value="stm32,lcd,logic,probe,oscilloscope" />
        </attvalues>
      </node>
      <node id="Ducasse/SOUL" label="Ducasse/SOUL">
        <attvalues>
          <attvalue for="0" value="pharo,logic-programming,unification,prolog" />
        </attvalues>
      </node>
      <node id="jmoenig/Snap" label="jmoenig/Snap">
        <attvalues>
          <attvalue for="0" value="snap,programming-language,visual,bjc,byob,cs10,apcsp,blocks" />
        </attvalues>
      </node>
      <node id="alexanyernas/Ejercicios-Practicos" label="alexanyernas/Ejercicios-Practicos">
        <attvalues>
          <attvalue for="0" value="logic-programming,logic,practice,exercises" />
        </attvalues>
      </node>
      <node id="Preetiraj3697/30dayofJavascript" label="Preetiraj3697/30dayofJavascript">
        <attvalues>
          <attvalue for="0" value="css3,html,javascript,api,logic,calculator,calendar,dark-theme,favicon-generator,filtering,mathgame,recipe-app,tic-tac-toe,clock,country-guide-app" />
        </attvalues>
      </node>
      <node id="barambani/http4s-poc-api" label="barambani/http4s-poc-api">
        <attvalues>
          <attvalue for="0" value="scala,functional-programming,http4s,cats,web-api,web-services,zio" />
        </attvalues>
      </node>
      <node id="objectionary/eo" label="objectionary/eo">
        <attvalues>
          <attvalue for="0" value="eolang,java,language,programming-language,oop,object-oriented-language,object-oriented-programming,object-oriented" />
        </attvalues>
      </node>
      <node id="YBogomolov/kleisli-ts" label="YBogomolov/kleisli-ts">
        <attvalues>
          <attvalue for="0" value="functional-programming,kleisli,typescript,fp-ts,effects,fp" />
        </attvalues>
      </node>
      <node id="jacentino/SqlFun" label="jacentino/SqlFun">
        <attvalues>
          <attvalue for="0" value="sql,functional-programming,fsharp,sql-query,async,reader-monad,micro-orm,data-access" />
        </attvalues>
      </node>
      <node id="ballerina-platform/ballerina-lang" label="ballerina-platform/ballerina-lang">
        <attvalues>
          <attvalue for="0" value="programming-language,language,compiler,ballerina-lang,ballerina,cloud-native,integration,hacktoberfest" />
        </attvalues>
      </node>
      <node id="onelang/OneLang" label="onelang/OneLang">
        <attvalues>
          <attvalue for="0" value="source-to-source,transpiler,cpp,csharp,golang,typescript,javascript,java,php,perl,python,swift,ruby,programming-language,language" />
        </attvalues>
      </node>
      <node id="iamgio/pikt" label="iamgio/pikt">
        <attvalues>
          <attvalue for="0" value="programming-language,esoteric-language,esoteric-programming-language,jvm,compiler,interpreter,esolang,esoteric,transpiler" />
        </attvalues>
      </node>
      <node id="neuroimaginador/fcaR" label="neuroimaginador/fcaR">
        <attvalues>
          <attvalue for="0" value="implications,formal-concept-analysis,concept-extraction,logic,recommendation-engine,formal-contexts,concept-lattice,fuzzy-sets,arules" />
        </attvalues>
      </node>
      <node id="ArtyomKingmang/Lazurite" label="ArtyomKingmang/Lazurite">
        <attvalues>
          <attvalue for="0" value="language,programming-language,java,compiler,compilers,interpreter,interpreters" />
        </attvalues>
      </node>
      <node id="qteatime/crochet" label="qteatime/crochet">
        <attvalues>
          <attvalue for="0" value="programming-language,secure-by-default" />
        </attvalues>
      </node>
      <node id="pointfreeco/swift-overture" label="pointfreeco/swift-overture">
        <attvalues>
          <attvalue for="0" value="functional-programming,function-composition" />
        </attvalues>
      </node>
      <node id="LoopPerfect/conduit" label="LoopPerfect/conduit">
        <attvalues>
          <attvalue for="0" value="coroutines,performance,sequences,data-types,algorithms,functional-programming,c-plus-plus,c-plus-plus-17" />
        </attvalues>
      </node>
      <node id="EvgSkv/logica" label="EvgSkv/logica">
        <attvalues>
          <attvalue for="0" value="datalog,sql,bigquery,language,prolog-implementation,prolog,logica,postgresql,sqlite,trino,presto,logic-programming" />
        </attvalues>
      </node>
      <node id="CashScript/cashscript" label="CashScript/cashscript">
        <attvalues>
          <attvalue for="0" value="bitcoin-cash,programming-language,sdk-js,compiler,bitcoin-script" />
        </attvalues>
      </node>
      <node id="bitloops/bitloops-language" label="bitloops/bitloops-language">
        <attvalues>
          <attvalue for="0" value="ddd,ddd-architecture,ddd-example,transpiler,bitloops,bitloops-language,bdd,bdd-tests,behavior-driven-development,domain-driven-design,domain-model,test-driven-development,ubiquitous-language,programming-language,contributions-welcome,developer-tools,open-source,opensource,typescript,clean-architecture" />
        </attvalues>
      </node>
      <node id="gcanti/monocle-ts" label="gcanti/monocle-ts">
        <attvalues>
          <attvalue for="0" value="typescript,functional-programming,lenses,optics" />
        </attvalues>
      </node>
      <node id="dibyendumajumdar/dmr_c" label="dibyendumajumdar/dmr_c">
        <attvalues>
          <attvalue for="0" value="c,parser,preprocessor,jit,llvm,programming-language,nanojit,eclipse-omr,compiler" />
        </attvalues>
      </node>
      <node id="Symbolk/Code2Graph" label="Symbolk/Code2Graph">
        <attvalues>
          <attvalue for="0" value="java,graph,program-analysis,programming-language,software-engineering" />
        </attvalues>
      </node>
      <node id="OpShin/imperator" label="OpShin/imperator">
        <attvalues>
          <attvalue for="0" value="plutus,blockchain,cardano,compiler,haskell,programming-language,smart-contracts" />
        </attvalues>
      </node>
      <node id="gigobyte/purify" label="gigobyte/purify">
        <attvalues>
          <attvalue for="0" value="typescript,algebraic-data-types,maybe,monad,functor,fantasy-land,functional-programming,either,result-type,option-type,codec,decode" />
        </attvalues>
      </node>
      <node id="logicmoo/prologmud" label="logicmoo/prologmud">
        <attvalues>
          <attvalue for="0" value="logicmoo,mud-servers,text-adventure-game,prolog,artificial-general-intelligence,agi" />
        </attvalues>
      </node>
      <node id="joergen7/cuneiform" label="joergen7/cuneiform">
        <attvalues>
          <attvalue for="0" value="workflow-engine,functional-programming,distributed-computing,erlang,workflow,bioinformatics,machine-learning,parallelization,otp" />
        </attvalues>
      </node>
      <node id="been-jamming/MinimalCC" label="been-jamming/MinimalCC">
        <attvalues>
          <attvalue for="0" value="c,compiler,spim,programming-language" />
        </attvalues>
      </node>
      <node id="outwatch/outwatch" label="outwatch/outwatch">
        <attvalues>
          <attvalue for="0" value="scala,rx,virtualdom,reactive,sbt,frp,functional-programming,scalajs" />
        </attvalues>
      </node>
      <node id="Kray-G/kinx" label="Kray-G/kinx">
        <attvalues>
          <attvalue for="0" value="scripting-language,interpreter,javascript,object-oriented,object-oriented-programming,c,script-language,jit-compiler,interpreted-programming-language,programming-language" />
        </attvalues>
      </node>
      <node id="c2lang/c2compiler" label="c2lang/c2compiler">
        <attvalues>
          <attvalue for="0" value="programming-language,c,c2,compiler" />
        </attvalues>
      </node>
      <node id="IBM/LNN" label="IBM/LNN">
        <attvalues>
          <attvalue for="0" value="neuro-symbolic-ai,machine-learning,reasoning,logic" />
        </attvalues>
      </node>
      <node id="Water-Melon/Melang" label="Water-Melon/Melang">
        <attvalues>
          <attvalue for="0" value="script-language,interpreter,coroutine,unix,linux,language,base64,cron,injection,json,lexer,md5,mysql,parser-generator,programming-language,rc4,reactive-programming,sha1,sha256,syntax-analysis" />
        </attvalues>
      </node>
      <node id="seborama/fuego" label="seborama/fuego">
        <attvalues>
          <attvalue for="0" value="functional-programming,go,golang,functional,streams" />
        </attvalues>
      </node>
      <node id="kantord/emuto" label="kantord/emuto">
        <attvalues>
          <attvalue for="0" value="json,data-mining,frontend,programming-language,script,jq,sed,awk,node,javascript,api,data-structures,cli,query-language,processing-language" />
        </attvalues>
      </node>
      <node id="usmonovshohruxmirzo/leetcode-usmonovshohruxmirzo" label="usmonovshohruxmirzo/leetcode-usmonovshohruxmirzo">
        <attvalues>
          <attvalue for="0" value="javascript,leetcode,logic,problem-solving,problems,algorithms,data-structures,questions,solutions" />
        </attvalues>
      </node>
      <node id="murisi/L2" label="murisi/L2">
        <attvalues>
          <attvalue for="0" value="lisp,scheme,c,programming-language,unsafe,macros,s-expressions,setjmp,longjmp,hindley-milner,type-inference,meta-programming" />
        </attvalues>
      </node>
      <node id="nunomaduro/curryable" label="nunomaduro/curryable">
        <attvalues>
          <attvalue for="0" value="php,curry,functional-programming,laravel" />
        </attvalues>
      </node>
      <node id="argonaut-io/argonaut" label="argonaut-io/argonaut">
        <attvalues>
          <attvalue for="0" value="argonaut,scala,json,json-parser,scalaz,functional-programming" />
        </attvalues>
      </node>
      <node id="CursedPrograms/ConfederateAI" label="CursedPrograms/ConfederateAI">
        <attvalues>
          <attvalue for="0" value="ai,combat,navmesh,unity,unity3d,logic,logic-based-artificial-intelligence,artificial-intelligence" />
        </attvalues>
      </node>
      <node id="rivet-lang/rivet" label="rivet-lang/rivet">
        <attvalues>
          <attvalue for="0" value="general-purpose,safe,fast,stable,compiler,programming-language,rivet,rivet-lang,language,simplicity,native,game-development,linux,macos,programming,windows" />
        </attvalues>
      </node>
      <node id="Glow-Lang/glow" label="Glow-Lang/glow">
        <attvalues>
          <attvalue for="0" value="dapps-development,dapps,programming-language" />
        </attvalues>
      </node>
      <node id="wyvernlang/wyvern" label="wyvernlang/wyvern">
        <attvalues>
          <attvalue for="0" value="programming-language" />
        </attvalues>
      </node>
      <node id="ngs-lang/ngs" label="ngs-lang/ngs">
        <attvalues>
          <attvalue for="0" value="programming-language,shell" />
        </attvalues>
      </node>
      <node id="LuxLang/lux" label="LuxLang/lux">
        <attvalues>
          <attvalue for="0" value="language,programming-language,macros,functional-programming,lisp,haskell,clojure,functional-languages,types,jvm-languages,javascript,python,ruby,lua" />
        </attvalues>
      </node>
      <node id="Vinetwigs/vilmos" label="Vinetwigs/vilmos">
        <attvalues>
          <attvalue for="0" value="golang,golang-library,go,golang-package,golang-application,golang-examples,golang-module,golang-cli,art,programming-language,interpreter,image,esoteric-language,esolang,cli,cli-app" />
        </attvalues>
      </node>
      <node id="rzeigler/waveguide" label="rzeigler/waveguide">
        <attvalues>
          <attvalue for="0" value="typescript,javascript,functional-programming,effects" />
        </attvalues>
      </node>
      <node id="carnotresearch/cr-sparse" label="carnotresearch/cr-sparse">
        <attvalues>
          <attvalue for="0" value="sparse-representations,jax,wavelets,convex-optimization,linear-operators,compressive-sensing,functional-programming,l1-regularization,sparse-linear-systems,lasso,sparse-bayesian-learning,basis-pursuit" />
        </attvalues>
      </node>
      <node id="47degrees/case-classy" label="47degrees/case-classy">
        <attvalues>
          <attvalue for="0" value="scala,configuration,functional-programming,scalajs" />
        </attvalues>
      </node>
      <node id="egel-lang/egel" label="egel-lang/egel">
        <attvalues>
          <attvalue for="0" value="interpreter,egel-language,functional-programming,programming-language,c-plus-plus" />
        </attvalues>
      </node>
      <node id="ForeverWintr/metafunctions" label="ForeverWintr/metafunctions">
        <attvalues>
          <attvalue for="0" value="functional-programming,function-composition" />
        </attvalues>
      </node>
      <node id="akabe/evilml" label="akabe/evilml">
        <attvalues>
          <attvalue for="0" value="functional-programming,ocaml,cpp" />
        </attvalues>
      </node>
      <node id="Bodigrim/logict" label="Bodigrim/logict">
        <attvalues>
          <attvalue for="0" value="logic-programming,monad-transformers,backtracking,logict" />
        </attvalues>
      </node>
      <node id="hneemann/Digital" label="hneemann/Digital">
        <attvalues>
          <attvalue for="0" value="circuit,digital-circuits,logisim,simulator,logic-gates,education,logic" />
        </attvalues>
      </node>
      <node id="Camilotk/ocaml4noobs" label="Camilotk/ocaml4noobs">
        <attvalues>
          <attvalue for="0" value="ocaml,functional-programming,tutorial,portugues,brasil" />
        </attvalues>
      </node>
      <node id="almontasser/crust" label="almontasser/crust">
        <attvalues>
          <attvalue for="0" value="c,compiler,programming-language,rust" />
        </attvalues>
      </node>
      <node id="ilya-klyuchnikov/ttlite" label="ilya-klyuchnikov/ttlite">
        <attvalues>
          <attvalue for="0" value="supercompilation,programming-language,dependent-types,type-theory,agda,idris,coq" />
        </attvalues>
      </node>
      <node id="altaywtf/react-json-logic" label="altaywtf/react-json-logic">
        <attvalues>
          <attvalue for="0" value="react,component,ui,json,builder,logic" />
        </attvalues>
      </node>
      <node id="mkhan45/RustScript2" label="mkhan45/RustScript2">
        <attvalues>
          <attvalue for="0" value="programming-language" />
        </attvalues>
      </node>
      <node id="Jhuni0123/pl-checker" label="Jhuni0123/pl-checker">
        <attvalues>
          <attvalue for="0" value="ocaml,programming-language,automation" />
        </attvalues>
      </node>
      <node id="damiancipolat/Functional_programming_in_JS" label="damiancipolat/Functional_programming_in_JS">
        <attvalues>
          <attvalue for="0" value="javascript,functional-programming,functional,study-project" />
        </attvalues>
      </node>
      <node id="aripiprazole/lura" label="aripiprazole/lura">
        <attvalues>
          <attvalue for="0" value="crate,lsp,programming-language,rust,type-theory" />
        </attvalues>
      </node>
      <node id="fergusq/tampio" label="fergusq/tampio">
        <attvalues>
          <attvalue for="0" value="programming-language,natural-language-programming,finnish,compiler,programming-by-natural-language" />
        </attvalues>
      </node>
      <node id="softwaremill/quicklens" label="softwaremill/quicklens">
        <attvalues>
          <attvalue for="0" value="scala,lenses,functional-programming" />
        </attvalues>
      </node>
      <node id="rustedpy/result" label="rustedpy/result">
        <attvalues>
          <attvalue for="0" value="functional-programming,mypy,python,python3,railway-oriented-programming,rust,strongly-typed,type-safety,typechecking" />
        </attvalues>
      </node>
      <node id="hintikkasworld/hintikkasworld" label="hintikkasworld/hintikkasworld">
        <attvalues>
          <attvalue for="0" value="logic,logic-game,modal-logic,epistemic-logic,dynamic-logics,artificial-intelligence,ijcai-18,agents" />
        </attvalues>
      </node>
      <node id="drendog/Logic-Circuit-Simulator" label="drendog/Logic-Circuit-Simulator">
        <attvalues>
          <attvalue for="0" value="simulator,logic-gate,logic-circuit,logic-circuit-simulator,logic-gate-simulator,p5js,js,logic-gates,logic" />
        </attvalues>
      </node>
      <node id="nzbr/vlogsolv" label="nzbr/vlogsolv">
        <attvalues>
          <attvalue for="0" value="v,vlang,logic" />
        </attvalues>
      </node>
      <node id="lice-lang/lice" label="lice-lang/lice">
        <attvalues>
          <attvalue for="0" value="lisp,lisp-interpreter,lisp-dialect,kotlin,jvm,language,interpreter,lice,programming-language" />
        </attvalues>
      </node>
      <node id="thesephist/ink" label="thesephist/ink">
        <attvalues>
          <attvalue for="0" value="golang,programming-language,javascript,functional-programming,ink-programming-language" />
        </attvalues>
      </node>
      <node id="friguzzi/bddem" label="friguzzi/bddem">
        <attvalues>
          <attvalue for="0" value="binary-decision-diagrams,prolog,c,cudd,probabilistic-logic-programming,inductive-logic-programming" />
        </attvalues>
      </node>
      <node id="aljen/spaghetti" label="aljen/spaghetti">
        <attvalues>
          <attvalue for="0" value="logic,editor,simulation,cpp17,cpp14,cpp,cpp-library,logic-gates,logic-circuit-simulator,qt5,modern-cpp" />
        </attvalues>
      </node>
      <node id="SheafificationOfG/BoolosBrewery" label="SheafificationOfG/BoolosBrewery">
        <attvalues>
          <attvalue for="0" value="logic,puzzle-game" />
        </attvalues>
      </node>
      <node id="halfzebra/elm-aframe" label="halfzebra/elm-aframe">
        <attvalues>
          <attvalue for="0" value="elm,aframe,webvr,functional-programming" />
        </attvalues>
      </node>
      <node id="eashanhatti/peridot" label="eashanhatti/peridot">
        <attvalues>
          <attvalue for="0" value="dependent-types,systems-language,programming-language,type-theory,haskell,proglangs-discord" />
        </attvalues>
      </node>
      <node id="H2CO3/Sparkling" label="H2CO3/Sparkling">
        <attvalues>
          <attvalue for="0" value="scripting-language,programming-language,embeddable,c,embedded-scripting-language,embedded-scripting-languages" />
        </attvalues>
      </node>
      <node id="DosX-dev/BatchASM" label="DosX-dev/BatchASM">
        <attvalues>
          <attvalue for="0" value="asm,assembler,assembly,batch,language,virtualmachine,vm,windows,virtual-machine,virtualization,batch-script,cmd,console,programming-language,terminal" />
        </attvalues>
      </node>
      <node id="ronami/HypeScript" label="ronami/HypeScript">
        <attvalues>
          <attvalue for="0" value="example,functional-programming,learning,parser,recursion,static-code-analysis,type-system,typescript" />
        </attvalues>
      </node>
      <node id="red/red" label="red/red">
        <attvalues>
          <attvalue for="0" value="compiler,native,gui,reactive-programming,programming-language,red,rebol,interpreter,language,toolchain,repl,cross-platform,scripting-language" />
        </attvalues>
      </node>
      <node id="cyrus-/typy" label="cyrus-/typy">
        <attvalues>
          <attvalue for="0" value="programming-language,functional-language,algebraic-data-types,pattern-matching,python" />
        </attvalues>
      </node>
      <node id="haptork/easyLambda" label="haptork/easyLambda">
        <attvalues>
          <attvalue for="0" value="dataflow-programming,mpi,parallel,functional-programming,distributed-computing,hpc,cpp14" />
        </attvalues>
      </node>
      <node id="pointfreeco/pointfreeco-server" label="pointfreeco/pointfreeco-server">
        <attvalues>
          <attvalue for="0" value="functional-programming,swift,server-side-swift" />
        </attvalues>
      </node>
      <node id="getify/monio" label="getify/monio">
        <attvalues>
          <attvalue for="0" value="javascript,js,fp,functional-programming,monad,monads,io,maybe,either,observable" />
        </attvalues>
      </node>
      <node id="getify/fasy" label="getify/fasy">
        <attvalues>
          <attvalue for="0" value="functional-programming,fp,async,asynchronous-programming,library,javascript" />
        </attvalues>
      </node>
      <node id="mdiep/Kanren.swift" label="mdiep/Kanren.swift">
        <attvalues>
          <attvalue for="0" value="kanren,swift,logic-programming" />
        </attvalues>
      </node>
      <node id="RKlompUU/FPSheet" label="RKlompUU/FPSheet">
        <attvalues>
          <attvalue for="0" value="haskell,spreadsheet,spreadsheets,functional-programming" />
        </attvalues>
      </node>
      <node id="valskalla/odin" label="valskalla/odin">
        <attvalues>
          <attvalue for="0" value="scala,logger,functional-programming" />
        </attvalues>
      </node>
      <node id="sluukkonen/iiris" label="sluukkonen/iiris">
        <attvalues>
          <attvalue for="0" value="functional-programming,javascript,typescript,utility-library" />
        </attvalues>
      </node>
      <node id="frees-io/iota" label="frees-io/iota">
        <attvalues>
          <attvalue for="0" value="functional-programming,coproduct,iota,scala,algebra,performance-tuning" />
        </attvalues>
      </node>
      <node id="fluencelabs/aqua" label="fluencelabs/aqua">
        <attvalues>
          <attvalue for="0" value="programming-language,p2p" />
        </attvalues>
      </node>
      <node id="zanettin/incompose" label="zanettin/incompose">
        <attvalues>
          <attvalue for="0" value="inferno,inferno-js,recompose,npm,npm-package,higher-order-component,hoc,functional-programming,functional-components,javascript" />
        </attvalues>
      </node>
      <node id="Andrea/FunctionalProgrammingInGames" label="Andrea/FunctionalProgrammingInGames">
        <attvalues>
          <attvalue for="0" value="game-development,functional-programming,clojure,elm,haskell,frp-game-engine,rust" />
        </attvalues>
      </node>
      <node id="PlutoLang/Pluto" label="PlutoLang/Pluto">
        <attvalues>
          <attvalue for="0" value="lua,programming-language,plutolang,language,dialect,pluto,superset" />
        </attvalues>
      </node>
      <node id="penrose/penrose" label="penrose/penrose">
        <attvalues>
          <attvalue for="0" value="visualization,domain-specific-language,mathematics,diagrams,programming-language" />
        </attvalues>
      </node>
      <node id="tpolecat/tuco" label="tpolecat/tuco">
        <attvalues>
          <attvalue for="0" value="scala,fp,functional-programming,telnet,telnet-server" />
        </attvalues>
      </node>
      <node id="franeklubi/luxya" label="franeklubi/luxya">
        <attvalues>
          <attvalue for="0" value="programming-language,programming-languages,interpreter,interpreted-programming-language,tree,tree-walker,tree-walk-interpreter,rust,lox,lox-language" />
        </attvalues>
      </node>
      <node id="daviromero/nadia" label="daviromero/nadia">
        <attvalues>
          <attvalue for="0" value="natural-deduction,educational-software,logic,proof-assistant" />
        </attvalues>
      </node>
      <node id="zio/zio-direct" label="zio/zio-direct">
        <attvalues>
          <attvalue for="0" value="async-await,effect-system,functional-programming,meta-programming,scala" />
        </attvalues>
      </node>
      <node id="disco-lang/disco" label="disco-lang/disco">
        <attvalues>
          <attvalue for="0" value="programming-language,functional-programming,discrete-mathematics,teaching" />
        </attvalues>
      </node>
      <node id="kickstarter/Kickstarter-Prelude" label="kickstarter/Kickstarter-Prelude">
        <attvalues>
          <attvalue for="0" value="swift,swift-language,prelude,functional-programming" />
        </attvalues>
      </node>
      <node id="yuriy-chumak/ol" label="yuriy-chumak/ol">
        <attvalues>
          <attvalue for="0" value="lisp,interpreter,compiler,scheme,programming-language,language,repl,tiny,ol,virtual-machine,otus-lisp,r7rs,r7rs-scheme,owl-lisp,ffi,c,olvm" />
        </attvalues>
      </node>
      <node id="kurehajime/typoscript" label="kurehajime/typoscript">
        <attvalues>
          <attvalue for="0" value="language,javascript,joke,programming-language" />
        </attvalues>
      </node>
      <node id="alexst07/shell-plus-plus" label="alexst07/shell-plus-plus">
        <attvalues>
          <attvalue for="0" value="programming-language,scripting-language,command-line,terminal,language,shell-script,shell,shellscript,glob-pattern,glob" />
        </attvalues>
      </node>
      <node id="pointfreeco/swift-boundaries" label="pointfreeco/swift-boundaries">
        <attvalues>
          <attvalue for="0" value="swift,functional-programming,redux,side-effects" />
        </attvalues>
      </node>
      <node id="tsuki-lang/tsuki" label="tsuki-lang/tsuki">
        <attvalues>
          <attvalue for="0" value="tsuki,programming-language,compiler" />
        </attvalues>
      </node>
      <node id="kamstrup/fn" label="kamstrup/fn">
        <attvalues>
          <attvalue for="0" value="functional-programming,golang" />
        </attvalues>
      </node>
      <node id="orsinium-labs/rlci" label="orsinium-labs/rlci">
        <attvalues>
          <attvalue for="0" value="fp,functional-programming,interpreter,lambda,lambda-calculus,programming-language,rust" />
        </attvalues>
      </node>
      <node id="rcardin/raise4s" label="rcardin/raise4s">
        <attvalues>
          <attvalue for="0" value="direct-style,error-handling,functional-programming,scala,scala3,cats" />
        </attvalues>
      </node>
      <node id="raphamorim/kyoto" label="raphamorim/kyoto">
        <attvalues>
          <attvalue for="0" value="language,compiler,compiler-design,languages,programming-language,wasm" />
        </attvalues>
      </node>
      <node id="modular/mojo" label="modular/mojo">
        <attvalues>
          <attvalue for="0" value="ai,language,machine-learning,mojo,modular,programming-language" />
        </attvalues>
      </node>
      <node id="funkia/list" label="funkia/list">
        <attvalues>
          <attvalue for="0" value="functional-programming,data-structures,immutable,ramda,fantasy-land,immutable-lists,redux" />
        </attvalues>
      </node>
      <node id="patrickmichalina/typescript-monads" label="patrickmichalina/typescript-monads">
        <attvalues>
          <attvalue for="0" value="typescript,monads,functional-programming,immutability,javascript,node,maybe-monad,result-monad,either-monad,reader-monad,list-monad" />
        </attvalues>
      </node>
      <node id="vlang/v" label="vlang/v">
        <attvalues>
          <attvalue for="0" value="programming-language,language,v,compiler" />
        </attvalues>
      </node>
      <node id="RuiAAPeres/OptionalExtensions" label="RuiAAPeres/OptionalExtensions">
        <attvalues>
          <attvalue for="0" value="swift,functional-programming,swift-extensions" />
        </attvalues>
      </node>
      <node id="EvandroLG/array.lua" label="EvandroLG/array.lua">
        <attvalues>
          <attvalue for="0" value="lua,array,table,functional-programming" />
        </attvalues>
      </node>
      <node id="alda-lang/alda" label="alda-lang/alda">
        <attvalues>
          <attvalue for="0" value="music,programming-language,music-programming-language,music-composition,alda,hacktoberfest,music-programming" />
        </attvalues>
      </node>
      <node id="spicelang/spice" label="spicelang/spice">
        <attvalues>
          <attvalue for="0" value="compiler,language,programming-language,llvm,antlr,spice" />
        </attvalues>
      </node>
      <node id="simov/request-compose" label="simov/request-compose">
        <attvalues>
          <attvalue for="0" value="nodejs,javascript,http,client,functional-programming,http-client,node,js,fp" />
        </attvalues>
      </node>
      <node id="dmitriz/functional-examples" label="dmitriz/functional-examples">
        <attvalues>
          <attvalue for="0" value="functional-programming,functional-js,functor,monad,category-theory" />
        </attvalues>
      </node>
      <node id="Sintrastes/Montague" label="Sintrastes/Montague">
        <attvalues>
          <attvalue for="0" value="nlp,logic-programming,parsing,kripke-model" />
        </attvalues>
      </node>
      <node id="TeaEntityLab/fpGo" label="TeaEntityLab/fpGo">
        <attvalues>
          <attvalue for="0" value="golang,functional-programming,functional-reactive-programming,reactive,reactive-programming,golang-library,monad,monads,collection,optional,optional-implementations,stream,pattern-matching,sum-types,publisher-subscriber,publisher-subscriber-pattern,curry,currying,pubsub,actor-model" />
        </attvalues>
      </node>
      <node id="fp-tower/foundations" label="fp-tower/foundations">
        <attvalues>
          <attvalue for="0" value="functional-programming,scala,online-course" />
        </attvalues>
      </node>
      <node id="fiddlerwoaroof/data-lens" label="fiddlerwoaroof/data-lens">
        <attvalues>
          <attvalue for="0" value="lisp,data-transformation,data,functional-programming,transducers" />
        </attvalues>
      </node>
      <node id="llh911001/mostly-adequate-guide-chinese" label="llh911001/mostly-adequate-guide-chinese">
        <attvalues>
          <attvalue for="0" value="functional-programming,functional-js,functor,curry,monad" />
        </attvalues>
      </node>
      <node id="wouterbeek/prolog_rdf" label="wouterbeek/prolog_rdf">
        <attvalues>
          <attvalue for="0" value="prolog,swi-prolog,linked-data,semantic-web,rdf" />
        </attvalues>
      </node>
      <node id="47degrees/LambdaTest" label="47degrees/LambdaTest">
        <attvalues>
          <attvalue for="0" value="scala,lambdas,scala-testing,functional-programming" />
        </attvalues>
      </node>
      <node id="Suor/funcy" label="Suor/funcy">
        <attvalues>
          <attvalue for="0" value="functional-programming,utilities,python" />
        </attvalues>
      </node>
      <node id="rant-lang/rant" label="rant-lang/rant">
        <attvalues>
          <attvalue for="0" value="rant4,language,rant,crates,procgen,templating,template-language,procedural-generation,mocking,procedural-text,rust-crate,rust-library,procedural-programming,text-generation,scripting,programming-language,rust,rant-lang,probabilistic-programming" />
        </attvalues>
      </node>
      <node id="Bram-Hub/LEGUP" label="Bram-Hub/LEGUP">
        <attvalues>
          <attvalue for="0" value="puzzle,logic-puzzles,logic" />
        </attvalues>
      </node>
      <node id="jaccomoc/jactl" label="jaccomoc/jactl">
        <attvalues>
          <attvalue for="0" value="java,apache-license-2,compiler,open-source,scripting-language,programming-language" />
        </attvalues>
      </node>
      <node id="ianthehenry/mixologician" label="ianthehenry/mixologician">
        <attvalues>
          <attvalue for="0" value="datalog,souffle-datalog-language,souffle,cocktails,logic-programming,mixology" />
        </attvalues>
      </node>
      <node id="typelevel/frameless" label="typelevel/frameless">
        <attvalues>
          <attvalue for="0" value="scala,spark,typelevel,fp,functional-programming" />
        </attvalues>
      </node>
      <node id="matchbook-ts/matchbook-ts" label="matchbook-ts/matchbook-ts">
        <attvalues>
          <attvalue for="0" value="pattern-matching,typescript,no-dependencies,simple,easy,functional,functional-programming,reactive-programming,javascript,library,functions,declarative,declarative-programming,matchbook,ava,ts,small,package,tiny-library,tiny" />
        </attvalues>
      </node>
      <node id="dejvokep/boosted-yaml" label="dejvokep/boosted-yaml">
        <attvalues>
          <attvalue for="0" value="yaml,automation,bukkit,file,functional-programming,java,spigot,standalone" />
        </attvalues>
      </node>
      <node id="aNNiMON/Lightweight-Stream-API" label="aNNiMON/Lightweight-Stream-API">
        <attvalues>
          <attvalue for="0" value="java,backports,stream-api,functional-programming" />
        </attvalues>
      </node>
      <node id="turbopape/scheje" label="turbopape/scheje">
        <attvalues>
          <attvalue for="0" value="scheme,evaluator,lisp,macros,clojure,programming-language,compiler" />
        </attvalues>
      </node>
      <node id="mys-lang/mys" label="mys-lang/mys">
        <attvalues>
          <attvalue for="0" value="programming-language,python,mys,rust" />
        </attvalues>
      </node>
      <node id="flax-lang/flax" label="flax-lang/flax">
        <attvalues>
          <attvalue for="0" value="llvm,language,c-plus-plus,language-design,flax,compiler,programming-language" />
        </attvalues>
      </node>
      <node id="duffney/golang-notebook" label="duffney/golang-notebook">
        <attvalues>
          <attvalue for="0" value="golang,programming-language,coding-interviews,leetcode,system-design-interview" />
        </attvalues>
      </node>
      <node id="prakhar1989/JSJS" label="prakhar1989/JSJS">
        <attvalues>
          <attvalue for="0" value="typed-language,ocaml,compilers,programming-language" />
        </attvalues>
      </node>
      <node id="gentee/gentee" label="gentee/gentee">
        <attvalues>
          <attvalue for="0" value="scripting-language,automation,programming-language,compiler,virtual-machine,language,go,golang,script,script-engine,embedded-language" />
        </attvalues>
      </node>
      <node id="life4/deal" label="life4/deal">
        <attvalues>
          <attvalue for="0" value="python,contracts,invariant,contracts-programming,decorators,functional-programming,design-by-contract,pythonic,deal,validation,interface,linter,flake8,property-based-testing,dbc,mypy,typing,refinement-types,testing,hacktoberfest" />
        </attvalues>
      </node>
      <node id="Orkestra-Tech/orkestra" label="Orkestra-Tech/orkestra">
        <attvalues>
          <attvalue for="0" value="kubernetes,scala,ci,cd,continuous-integration,continuous-delivery,continuous-deployment,devops,functional-programming,functional-devops,orkestra" />
        </attvalues>
      </node>
      <node id="pointfreeco/swift-prelude" label="pointfreeco/swift-prelude">
        <attvalues>
          <attvalue for="0" value="functional-programming,prelude,swift" />
        </attvalues>
      </node>
      <node id="emmanueltouzery/prelude-ts" label="emmanueltouzery/prelude-ts">
        <attvalues>
          <attvalue for="0" value="typescript,functional-programming,immutable-collections,javascript,immutability,futures,fp,data-structures" />
        </attvalues>
      </node>
      <node id="alhassy/HaskellCheatSheet" label="alhassy/HaskellCheatSheet">
        <attvalues>
          <attvalue for="0" value="haskell,cheatsheet,typeclasses,functional-programming,functors,applicatives,monads" />
        </attvalues>
      </node>
      <node id="VPanjeta/ModiScript" label="VPanjeta/ModiScript">
        <attvalues>
          <attvalue for="0" value="compiler,modi,programming,language,python,ast,syntax,tree,fun,modiscript,programming-language,programming-languages,esoteric-language,esoteric,esoteric-programming-language,esoteric-interpreter,hindi" />
        </attvalues>
      </node>
      <node id="IndiscriminateCoding/clarity" label="IndiscriminateCoding/clarity">
        <attvalues>
          <attvalue for="0" value="ocaml,functional-programming,monad" />
        </attvalues>
      </node>
      <node id="edubart/nelua-lang" label="edubart/nelua-lang">
        <attvalues>
          <attvalue for="0" value="nelua,programming-language,language,compiler,lua,luajit,metaprogramming,efficient,minimal,statically-typed,c" />
        </attvalues>
      </node>
      <node id="acharal/wam" label="acharal/wam">
        <attvalues>
          <attvalue for="0" value="wam,logic-programming,warren,machine,prolog-compiler,prolog" />
        </attvalues>
      </node>
      <node id="SebastianMestre/Jasper" label="SebastianMestre/Jasper">
        <attvalues>
          <attvalue for="0" value="jasper,programming-language,parsing,typechecking,cpp14" />
        </attvalues>
      </node>
      <node id="GJDuck/libf" label="GJDuck/libf">
        <attvalues>
          <attvalue for="0" value="functional-programming,immutable-datastructures,finger-tree,c-plus-plus,234-tree" />
        </attvalues>
      </node>
      <node id="dehun/learn-fp" label="dehun/learn-fp">
        <attvalues>
          <attvalue for="0" value="scala,course,functional-programming,monad,monoid,functor,typeclasses,functional-idioms,monad-transformers,tutorial,comonads,monads,applicative" />
        </attvalues>
      </node>
      <node id="es-js/esjs" label="es-js/esjs">
        <attvalues>
          <attvalue for="0" value="espanol,javascript,spanish,esjs,lenguaje-de-programacion,programacion,spanish-language,programming-language" />
        </attvalues>
      </node>
      <node id="aclai-lab/ModalDecisionTrees.jl" label="aclai-lab/ModalDecisionTrees.jl">
        <attvalues>
          <attvalue for="0" value="decision-trees,logic,machine-learning,modal-logic,symbolic-learning,time-series-classification" />
        </attvalues>
      </node>
      <node id="nullobject/risk" label="nullobject/risk">
        <attvalues>
          <attvalue for="0" value="javascript,game,risk,functional-programming,reactive-programming" />
        </attvalues>
      </node>
      <node id="mrdimosthenis/Synapses" label="mrdimosthenis/Synapses">
        <attvalues>
          <attvalue for="0" value="neural-network,machine-learning,functional-programming,javascript,python,java,csharp,scala,fsharp,lightweight,deep-learning,clojure,gleam,elixir" />
        </attvalues>
      </node>
      <node id="utahnlp/layer_augmentation" label="utahnlp/layer_augmentation">
        <attvalues>
          <attvalue for="0" value="acl2019,nli,logic,attention-mechanism,attention,pytorch,first-order-logic,decomposable-attention,snli" />
        </attvalues>
      </node>
      <node id="ELENA-LANG/elena-lang" label="ELENA-LANG/elena-lang">
        <attvalues>
          <attvalue for="0" value="object-oriented,programming-language,language,compiler,elena,script-engine,mixins,multi-methods" />
        </attvalues>
      </node>
      <node id="tkgalk/denofun" label="tkgalk/denofun">
        <attvalues>
          <attvalue for="0" value="deno,typescript,functional-programming" />
        </attvalues>
      </node>
      <node id="GGBRW/BOOLR" label="GGBRW/BOOLR">
        <attvalues>
          <attvalue for="0" value="digital,logic-gates,logic,simulation,simulator" />
        </attvalues>
      </node>
      <node id="palatable/lambda" label="palatable/lambda">
        <attvalues>
          <attvalue for="0" value="java,functional-programming,lenses,lambda,functor,monad,semigroup,monoid,coproduct,profunctors,bifunctors,either,traversable,try-monad,algebraic-data-types,tuples,hlist,maybe-monad,optics,io-monad" />
        </attvalues>
      </node>
      <node id="sksamuel/tribune" label="sksamuel/tribune">
        <attvalues>
          <attvalue for="0" value="validation,kotlin,ktor,functional-programming,arrow-kt" />
        </attvalues>
      </node>
      <node id="wally-wally/TIL" label="wally-wally/TIL">
        <attvalues>
          <attvalue for="0" value="til,python,algorithm,web,django,db,javascript,vuejs,react,typescript,tech-interview,today-i-learned,svelte,swexpert-academy,baekjoon-online-judge,programmers,leetcode,ssafy,functional-programming" />
        </attvalues>
      </node>
      <node id="mccraveiro/momento" label="mccraveiro/momento">
        <attvalues>
          <attvalue for="0" value="momentjs,functional-programming" />
        </attvalues>
      </node>
      <node id="zalando/faux-pas" label="zalando/faux-pas">
        <attvalues>
          <attvalue for="0" value="java,functional-programming,exception-handling,error-handling,completable-future,monitoring" />
        </attvalues>
      </node>
      <node id="Jackojc/cane" label="Jackojc/cane">
        <attvalues>
          <attvalue for="0" value="cpp,dsl,euclidean-rhythms,midi,minimalist,music,proglangs-discord,programming-language,rhythms,sequencer,jackaudio,pipewire,cane,composition,linux-audio,music-tracker,notation,song,vector-language,tracker" />
        </attvalues>
      </node>
      <node id="eth-sri/zkay" label="eth-sri/zkay">
        <attvalues>
          <attvalue for="0" value="blockchain,privacy,ethereum,zero-knowledge-proofs,compiler,programming-language" />
        </attvalues>
      </node>
      <node id="rla/prolog-target-js" label="rla/prolog-target-js">
        <attvalues>
          <attvalue for="0" value="swi-prolog,transpiler,javascript" />
        </attvalues>
      </node>
      <node id="eslint-functional/eslint-plugin-functional" label="eslint-functional/eslint-plugin-functional">
        <attvalues>
          <attvalue for="0" value="eslint,eslint-plugin,eslint-rules,typescript,immutability,javascript,fp,functional,functional-programming" />
        </attvalues>
      </node>
      <node id="schneiderfelipe/microparsec" label="schneiderfelipe/microparsec">
        <attvalues>
          <attvalue for="0" value="microparsec,nim-lang,parser-combinators,parser-library,parsec,functional-programming,haskell,nim" />
        </attvalues>
      </node>
      <node id="KarolS/millfork" label="KarolS/millfork">
        <attvalues>
          <attvalue for="0" value="6502,commodore-64,programming-language,nes,famicom,retrocomputing,z80,intel8080,zxspectrum,millfork,microcomputers,motorola-6809,atari800" />
        </attvalues>
      </node>
      <node id="jcubic/gaiman" label="jcubic/gaiman">
        <attvalues>
          <attvalue for="0" value="story-driven-games,storytelling,story,game,game-development,text-adventure-engine,text-adventure-game,text-adventure,javascript,javascript-library,dsl,programming-language,text-adventure-games" />
        </attvalues>
      </node>
      <node id="primaryobjects/AI-Programmer" label="primaryobjects/AI-Programmer">
        <attvalues>
          <attvalue for="0" value="genetic-algorithms,c-sharp,fitness-score,ai,artificial-intelligence,genetic-algorithm,genetic-programming,programming-language,genome,program-synthesis" />
        </attvalues>
      </node>
      <node id="marblejs/marble" label="marblejs/marble">
        <attvalues>
          <attvalue for="0" value="rxjs,typescript,nodejs,reactive,marble,javascript,stream,observable,functional-programming,framework" />
        </attvalues>
      </node>
      <node id="anskarl/LoMRF" label="anskarl/LoMRF">
        <attvalues>
          <attvalue for="0" value="scala,machine-learning,logic,probabilistic-programming,inference,graphical-models" />
        </attvalues>
      </node>
      <node id="heavypackets/rust-iterator-emoji" label="heavypackets/rust-iterator-emoji">
        <attvalues>
          <attvalue for="0" value="rust,rust-lang,iterator,functional-programming" />
        </attvalues>
      </node>
      <node id="hatashiro/kou" label="hatashiro/kou">
        <attvalues>
          <attvalue for="0" value="programming-language,wasm,compiler" />
        </attvalues>
      </node>
      <node id="jingle-lang/jingle" label="jingle-lang/jingle">
        <attvalues>
          <attvalue for="0" value="programming-language,compiler,jingle-lang,language,jingle,bytecode,virtual-machine,llvm,interpreter,scripting-language,object-oriented-programming,functional-programming,jit-compiler,lalr,llvmlite" />
        </attvalues>
      </node>
      <node id="Wilfred/garden" label="Wilfred/garden">
        <attvalues>
          <attvalue for="0" value="programming-language" />
        </attvalues>
      </node>
      <node id="PLTools/Lama" label="PLTools/Lama">
        <attvalues>
          <attvalue for="0" value="ocaml,compiler,programming-language" />
        </attvalues>
      </node>
      <node id="thautwarm/RSolve" label="thautwarm/RSolve">
        <attvalues>
          <attvalue for="0" value="solvers,logic-programming" />
        </attvalues>
      </node>
      <node id="ML-KULeuven/problog" label="ML-KULeuven/problog">
        <attvalues>
          <attvalue for="0" value="problog,prolog,aproblog,dtproblog,probabilistic,probabilistic-inference,probabilistic-programming,probabilistic-logic-programming,lfi-problog" />
        </attvalues>
      </node>
      <node id="raviqqe/hamt" label="raviqqe/hamt">
        <attvalues>
          <attvalue for="0" value="hamt,go,map,set,immutable,functional-programming" />
        </attvalues>
      </node>
      <node id="fogfish/golem" label="fogfish/golem">
        <attvalues>
          <attvalue for="0" value="functional-programming,golang,algebraic-data-types" />
        </attvalues>
      </node>
      <node id="gavr123456789/Niva" label="gavr123456789/Niva">
        <attvalues>
          <attvalue for="0" value="smalltalk,typed,compiler,kotlin,language,tagged-unions,programming-language" />
        </attvalues>
      </node>
      <node id="yanglbme/redis-multi-programming-language-practice" label="yanglbme/redis-multi-programming-language-practice">
        <attvalues>
          <attvalue for="0" value="redis,database,key-value,java,python,programming-language,redis-py,jedis" />
        </attvalues>
      </node>
      <node id="caffeine-suite/caffeine-script" label="caffeine-suite/caffeine-script">
        <attvalues>
          <attvalue for="0" value="programming-language,javascript,coffeescript" />
        </attvalues>
      </node>
      <node id="martinmogusu/course_advisor" label="martinmogusu/course_advisor">
        <attvalues>
          <attvalue for="0" value="prolog,expert-system,artificial-intelligence,knowledge-representation" />
        </attvalues>
      </node>
      <node id="DDP-Projekt/Kompilierer" label="DDP-Projekt/Kompilierer">
        <attvalues>
          <attvalue for="0" value="compiler,german,esolang,esoteric-language,esoteric-programming-language,german-language,programming-language,ddp,go" />
        </attvalues>
      </node>
      <node id="pointfreeco/swift-web" label="pointfreeco/swift-web">
        <attvalues>
          <attvalue for="0" value="swift,functional-programming,html,css,middleware,routing,applicative,composition" />
        </attvalues>
      </node>
      <node id="arturo-lang/arturo" label="arturo-lang/arturo">
        <attvalues>
          <attvalue for="0" value="programming-language,arturo,interpreter,language,bytecode,virtual-machine,stack-based,functional-programming,homoiconic" />
        </attvalues>
      </node>
      <node id="mrieppel/TruthTableGenerator" label="mrieppel/TruthTableGenerator">
        <attvalues>
          <attvalue for="0" value="truth-table,logic,semantics,javascript,latex" />
        </attvalues>
      </node>
      <node id="typedb/typedb" label="typedb/typedb">
        <attvalues>
          <attvalue for="0" value="database,knowledge-base,knowledge-representation,reasoning,logic,inference,typedb,typeql,type-system,strongly-typed,polymorphic,polymorphism" />
        </attvalues>
      </node>
      <node id="pysaumont/fpinkotlin" label="pysaumont/fpinkotlin">
        <attvalues>
          <attvalue for="0" value="kotlin,functional-programming" />
        </attvalues>
      </node>
      <node id="eregon/mozart-graal" label="eregon/mozart-graal">
        <attvalues>
          <attvalue for="0" value="graal,truffle,mozart,oz,graalvm,programming-language" />
        </attvalues>
      </node>
      <node id="matsud224/wamcompiler" label="matsud224/wamcompiler">
        <attvalues>
          <attvalue for="0" value="warren-abstract-machine,wam,prolog,compiler,common-lisp" />
        </attvalues>
      </node>
      <node id="steshaw/plt" label="steshaw/plt">
        <attvalues>
          <attvalue for="0" value="programming-languages,type-theory,functional-programming,category-theory,logic,proof-theory" />
        </attvalues>
      </node>
      <node id="cmajor-lang/cmajor" label="cmajor-lang/cmajor">
        <attvalues>
          <attvalue for="0" value="audio,dsp,programming-language" />
        </attvalues>
      </node>
      <node id="refaktor/rye" label="refaktor/rye">
        <attvalues>
          <attvalue for="0" value="programming-language,rebol,factor,console,ryelang,golang" />
        </attvalues>
      </node>
      <node id="Storyyeller/IntercalScript" label="Storyyeller/IntercalScript">
        <attvalues>
          <attvalue for="0" value="programming-language,type-inference" />
        </attvalues>
      </node>
      <node id="yadavanuj1996/freecodecamp-solutions" label="yadavanuj1996/freecodecamp-solutions">
        <attvalues>
          <attvalue for="0" value="freecodecamp,data-visualization,responsive-web-design,algorithm-scripting,html5,css3,bootstrap4,sass,javascript,es6,regular-expressions,functional-programming,d3js,json,ajax,nodejs,expressjs,mongoose,mocha-chai,helmetjs" />
        </attvalues>
      </node>
      <node id="bespoyasov/explicit-design" label="bespoyasov/explicit-design">
        <attvalues>
          <attvalue for="0" value="architecture,cohesion,coupling,domain-modelling,explicit-architecture,explicit-intents,functional-architecture,functional-core,functional-programming,inversion-of-control,javascript,multiparadigm,react,software-design,type-safety,typescript,vertical-slices" />
        </attvalues>
      </node>
      <node id="zio/zio-prelude" label="zio/zio-prelude">
        <attvalues>
          <attvalue for="0" value="zio,scala,functional-programming,category-theory,abstract-algebra" />
        </attvalues>
      </node>
      <node id="triska/bitcoinolog" label="triska/bitcoinolog">
        <attvalues>
          <attvalue for="0" value="bitcoin,prolog,bitcoin-wallet,elliptic-curves,cryptocurrency,offline-capable" />
        </attvalues>
      </node>
      <node id="poteto/monkers" label="poteto/monkers">
        <attvalues>
          <attvalue for="0" value="rust,monkey-language,interpreter,compiler,programming-language" />
        </attvalues>
      </node>
      <node id="healeycodes/adventlang" label="healeycodes/adventlang">
        <attvalues>
          <attvalue for="0" value="programming-language,interpreter,advent-of-code" />
        </attvalues>
      </node>
      <node id="leopoglia/java" label="leopoglia/java">
        <attvalues>
          <attvalue for="0" value="java,logic,oriented-object-programming" />
        </attvalues>
      </node>
      <node id="demystifyfp/FsConfig" label="demystifyfp/FsConfig">
        <attvalues>
          <attvalue for="0" value="fsharp,functional-programming,generic-programming,environment-variables,12-factor,appsettings,configuration,configuration-management" />
        </attvalues>
      </node>
      <node id="underscoreio/essential-interpreters" label="underscoreio/essential-interpreters">
        <attvalues>
          <attvalue for="0" value="book,scala,functional-programming" />
        </attvalues>
      </node>
      <node id="sasagawa888/Elxlog" label="sasagawa888/Elxlog">
        <attvalues>
          <attvalue for="0" value="prolog,elixir" />
        </attvalues>
      </node>
      <node id="AnonymousAAArdvark/qi" label="AnonymousAAArdvark/qi">
        <attvalues>
          <attvalue for="0" value="programming-language,chinese,program-in-chinese,esoteric-language,esolang,language,bytecode,qi,scripting-language,interpreter" />
        </attvalues>
      </node>
    </nodes>
    <edges>
      <edge source="CapelliC/hhprolog" target="CapelliC/hitchhicker-prolog" id="0" />
      <edge source="retrofor/iamai" target="lab-v2/pyreason" id="1" />
      <edge source="retrofor/iamai" target="lps-js/lps-studio" id="2" />
      <edge source="trealla-prolog/trealla" target="tau-prolog/tau-prolog" id="3" />
      <edge source="trealla-prolog/trealla" target="ciao-lang/ciao" id="4" />
      <edge source="trealla-prolog/trealla" target="mthom/scryer-prolog" id="5" />
      <edge source="tau-prolog/tau-prolog" target="ciao-lang/ciao" id="6" />
      <edge source="tau-prolog/tau-prolog" target="mthom/scryer-prolog" id="7" />
      <edge source="AppliedLogicSystems/ALSProlog" target="ciao-lang/ciao" id="8" />
      <edge source="AppliedLogicSystems/ALSProlog" target="lambduli/minilog" id="9" />
      <edge source="ciao-lang/ciao" target="mthom/scryer-prolog" id="10" />
      <edge source="ciao-lang/ciao" target="lps-js/lps.js" id="11" />
      <edge source="AndreaInfUFSM/elc117-2024b" target="jaalonso/Lecturas_GLC" id="12" />
      <edge source="twolodzko/prolog-rs" target="mthom/scryer-prolog" id="13" />
      <edge source="cmungall/sparqlprog" target="wouterbeek/prolog_rdf" id="14" />
    </edges>
  </graph>
</gexf>
