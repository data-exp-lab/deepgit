<?xml version='1.0' encoding='utf-8'?>
<gexf xmlns="http://www.gexf.net/1.2draft" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.gexf.net/1.2draft http://www.gexf.net/1.2draft/gexf.xsd" version="1.2">
  <meta lastmodifieddate="2025-02-16">
    <creator>NetworkX 3.4.2</creator>
  </meta>
  <graph defaultedgetype="undirected" mode="static" name="">
    <attributes mode="static" class="edge">
      <attribute id="2" title="shared_topics" type="string" />
    </attributes>
    <attributes mode="static" class="node">
      <attribute id="0" title="Tag" type="string" />
      <attribute id="1" title="Cluster" type="string" />
    </attributes>
    <nodes>
      <node id="gooofy/zamia-prolog" label="gooofy/zamia-prolog">
        <attvalues>
          <attvalue for="0" value="declarative-language,embeddable,logic-programming,prolog,prolog-dialect,python" />
          <attvalue for="1" value="declarative-language" />
        </attvalues>
      </node>
      <node id="knowrob/knowrob" label="knowrob/knowrob">
        <attvalues>
          <attvalue for="0" value="knowledge-base,knowledge-graph,prolog,query-answering,reasoning,robotics" />
        </attvalues>
      </node>
      <node id="MaximovInk/NodeLogic" label="MaximovInk/NodeLogic">
        <attvalues>
          <attvalue for="0" value="logic-gates,logic-programming,unity,unity2d,unity2d-game" />
        </attvalues>
      </node>
      <node id="isquicha/exercicios-logica" label="isquicha/exercicios-logica">
        <attvalues>
          <attvalue for="0" value="c,cpp,logic,lua,programming,python" />
        </attvalues>
      </node>
      <node id="hendrycks/math" label="hendrycks/math">
        <attvalues>
          <attvalue for="0" value="logic,math,reasoning" />
        </attvalues>
      </node>
      <node id="bnidia/Philosophers" label="bnidia/Philosophers">
        <attvalues>
          <attvalue for="0" value="algorithms,c,logic,rigor,unix" />
        </attvalues>
      </node>
      <node id="fallen/SucreLA" label="fallen/SucreLA">
        <attvalues>
          <attvalue for="0" value="analyzer,ecp5,fpga,hydrausb3,litex,logic,migen,risc-v" />
        </attvalues>
      </node>
      <node id="marcincuber/modal_logic" label="marcincuber/modal_logic">
        <attvalues>
          <attvalue for="0" value="complexity,complexity-theory,graph-algorithms,graph-theory,logic,logic-programming,modal,modal-logic,temporal-logic" />
          <attvalue for="1" value="machine-learning" />
        </attvalues>
      </node>
      <node id="HussainAther/awesome-philosophy" label="HussainAther/awesome-philosophy">
        <attvalues>
          <attvalue for="0" value="aesthetics,awesome-list,epistemology,ethics,history-of-philosophy,logic,philosophy,philosophy-of-mind,philosophy-of-science" />
        </attvalues>
      </node>
      <node id="Galigator/openllet" label="Galigator/openllet">
        <attvalues>
          <attvalue for="0" value="inference,java,jena,logic,owl,owl-api,owl2,reasoner,semantic" />
        </attvalues>
      </node>
      <node id="jakobjpeters/PAndQ.jl" label="jakobjpeters/PAndQ.jl">
        <attvalues>
          <attvalue for="0" value="julia,julialang,logic,propositional-logic,symbolic" />
        </attvalues>
      </node>
      <node id="whitemech/flloat" label="whitemech/flloat">
        <attvalues>
          <attvalue for="0" value="automata,ldlf,linear-temporal-logic,logic,ltlf,propositional-logic" />
        </attvalues>
      </node>
      <node id="alexanderskulikov/discrete-math-python-scripts" label="alexanderskulikov/discrete-math-python-scripts">
        <attvalues>
          <attvalue for="0" value="algorithms,bayes,combinatorics,combinatorics-and-probability,cryptography,discrete-mathematics,dynamic-programming,enumeration,graph-algorithms,graphs,induction,logic,mathematics,number-theory,probability,python,python3,recursion" />
        </attvalues>
      </node>
      <node id="utahnlp/structured_tuning_srl" label="utahnlp/structured_tuning_srl">
        <attvalues>
          <attvalue for="0" value="finetuning,logic,loss-functions,pytorch,regularization,roberta,semantic-role-labeling,srl,structured" />
        </attvalues>
      </node>
      <node id="minetest-mods/mesecons" label="minetest-mods/mesecons">
        <attvalues>
          <attvalue for="0" value="logic,minetest,minetest-mod,redstone,wires" />
        </attvalues>
      </node>
      <node id="go-air/gini" label="go-air/gini">
        <attvalues>
          <attvalue for="0" value="artificial-intelligence,boolean-formulas,circuit-sat,concurrent,dependencies,fuzzing,logic-circuit,logic-programming,resolution,sat-solver,testing,verification" />
        </attvalues>
      </node>
      <node id="spamegg1/reviews" label="spamegg1/reviews">
        <attvalues>
          <attvalue for="0" value="algorithms,assembly,c,computer-graphics,databases,hdl,java,javascript,kotlin,logic,mathematics,nand2tetris,networking,operating-systems,programming-languages,python,racket,ruby,scala,smlnj" />
        </attvalues>
      </node>
      <node id="bearycool11/PMLL_logic_loop_Knowledge_block" label="bearycool11/PMLL_logic_loop_Knowledge_block">
        <attvalues>
          <attvalue for="0" value="ai,arll,azure,azure-devops,azure-functions,chatgpt,efll,lllama,logic,logicloop,openai,persistent-memory,persistent-memory-index,persistent-memory-logic-loop,pmll,veniceai" />
        </attvalues>
      </node>
      <node id="Xachap/Neuro-FLOPER" label="Xachap/Neuro-FLOPER">
        <attvalues>
          <attvalue for="0" value="dec-tau,fasill,final-degree-project,floper,fuzzy-neural-network,iris,iris-dataset,keras,malp,multilayer-perceptron-network,neural-network,neuro-floper,prolog,python,swi-prolog,tensorflow,tune,tuner" />
          <attvalue for="1" value="artificial-intelligence" />
        </attvalues>
      </node>
      <node id="HKUNLP/SymGen" label="HKUNLP/SymGen">
        <attvalues>
          <attvalue for="0" value="bash,codex,data-generation,mtop,prolog,python,sql,symbolic-language" />
        </attvalues>
      </node>
      <node id="mcsoto/cosmos" label="mcsoto/cosmos">
        <attvalues>
          <attvalue for="0" value="composite-types,cosmos,cosmos-language,functors,interpreter,language,logic-programming,prolog" />
          <attvalue for="1" value="language" />
        </attvalues>
      </node>
      <node id="oldcompcz/micro-PROLOG" label="oldcompcz/micro-PROLOG">
        <attvalues>
          <attvalue for="0" value="prolog,z80,zx-spectrum" />
        </attvalues>
      </node>
      <node id="marklogic/ml-gradle" label="marklogic/ml-gradle">
        <attvalues>
          <attvalue for="0" value="corb,example,examples,gradle,gradle-plugin,logic,mark,marklogic,mlcp,sample,samples" />
        </attvalues>
      </node>
      <node id="nclarius/pyPL" label="nclarius/pyPL">
        <attvalues>
          <attvalue for="0" value="analytic-tableaux,classical-logic,first-order-logic,intuitionistic-logic,logic,modal-logic,model-checker,model-checking,model-extraction,model-generation,predicate-logic,proof,propositional-logic,theorem-prover" />
        </attvalues>
      </node>
      <node id="SimonBuxx/Linkuit-Studio" label="SimonBuxx/Linkuit-Studio">
        <attvalues>
          <attvalue for="0" value="cpu-design,logic,logic-circuit,logic-circuit-simulator,logic-gates,logic-simulation,logic-simulator,logiccircuit,simulation,simulator" />
        </attvalues>
      </node>
      <node id="triska/the-power-of-prolog" label="triska/the-power-of-prolog">
        <attvalues>
          <attvalue for="0" value="book,constraints,logic-programming,prolog,teaching-materials" />
          <attvalue for="1" value="declarative-language" />
        </attvalues>
      </node>
      <node id="AyeshaShaukat/Project-Battle-Ships-Game" label="AyeshaShaukat/Project-Battle-Ships-Game">
        <attvalues>
          <attvalue for="0" value="arrays,console-game,game,java,logic-programming,procedural-programming,simple" />
        </attvalues>
      </node>
      <node id="jessehamner/TechMillForKids" label="jessehamner/TechMillForKids">
        <attvalues>
          <attvalue for="0" value="computer-history,electricity,electronics,kids,logic,logic-gates,science,transistors,workshop" />
        </attvalues>
      </node>
      <node id="dragonwasrobot/learn-prolog-now-exercises" label="dragonwasrobot/learn-prolog-now-exercises">
        <attvalues>
          <attvalue for="0" value="prolog" />
        </attvalues>
      </node>
      <node id="davekinkead/reasons" label="davekinkead/reasons">
        <attvalues>
          <attvalue for="0" value="argument-mapping,critical-thinking,html,logic" />
        </attvalues>
      </node>
      <node id="evoldoers/biomake" label="evoldoers/biomake">
        <attvalues>
          <attvalue for="0" value="bioinformatics,gnu-make,makefiles,prolog,swi-prolog,workflows" />
          <attvalue for="1" value="rdf" />
        </attvalues>
      </node>
      <node id="FormalizedFormalLogic/Foundation" label="FormalizedFormalLogic/Foundation">
        <attvalues>
          <attvalue for="0" value="lean4,logic" />
        </attvalues>
      </node>
      <node id="CapelliC/hhprolog" label="CapelliC/hhprolog">
        <attvalues>
          <attvalue for="0" value="cpp,javascript,prolog,prolog-implementation,virtual-machine" />
          <attvalue for="1" value="javascript" />
        </attvalues>
      </node>
      <node id="opennars/opennars" label="opennars/opennars">
        <attvalues>
          <attvalue for="0" value="agent,agi,ai,aikr,artificial-general-intelligence,database,graph,inference,java,learning,logic,nal,nars,realtime,reasoner,reasoning,reinforcement,rl,semantic,solver" />
        </attvalues>
      </node>
      <node id="logsem/clutch" label="logsem/clutch">
        <attvalues>
          <attvalue for="0" value="asynchronous,coq,couplings,higher-order,iris,logic,probabilistic,relational,separation-logic" />
        </attvalues>
      </node>
      <node id="nikolaydubina/go-hackers-delight" label="nikolaydubina/go-hackers-delight">
        <attvalues>
          <attvalue for="0" value="assembly,binary,bits,book,c,logic,risc,showcase" />
        </attvalues>
      </node>
      <node id="neogeodev/NeoGeoFPGA-sim" label="neogeodev/NeoGeoFPGA-sim">
        <attvalues>
          <attvalue for="0" value="arcade,chip,fpga,logic,mvs,neo-geo,neogeo,simulation,snk,verilog" />
        </attvalues>
      </node>
      <node id="namin/clpset-miniKanren" label="namin/clpset-miniKanren">
        <attvalues>
          <attvalue for="0" value="constraints,logic-programming,minikanren,paper-implementations,prolog,scheme" />
          <attvalue for="1" value="declarative-language" />
        </attvalues>
      </node>
      <node id="coot/heyting-algebras" label="coot/heyting-algebras">
        <attvalues>
          <attvalue for="0" value="haskell-library,logic" />
        </attvalues>
      </node>
      <node id="ualib/agda-algebras" label="ualib/agda-algebras">
        <attvalues>
          <attvalue for="0" value="agda,agda-library,dependent-types,foundations,logic,model-theory,type-theory,universal-algebra" />
        </attvalues>
      </node>
      <node id="Lexpedite/blawx" label="Lexpedite/blawx">
        <attvalues>
          <attvalue for="0" value="blockly,drag-and-drop,logic-programming,rules-as-code,scasp" />
        </attvalues>
      </node>
      <node id="bramucas/xclingo2" label="bramucas/xclingo2">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,debugging-tool,explainability,logic-programming" />
        </attvalues>
      </node>
      <node id="lorenzosinisi/retex" label="lorenzosinisi/retex">
        <attvalues>
          <attvalue for="0" value="elixir,graph,logic-programming,protocol,rete,rete-algorithm,rule-engine" />
        </attvalues>
      </node>
      <node id="HarvardPL/formulog" label="HarvardPL/formulog">
        <attvalues>
          <attvalue for="0" value="datalog,logic-programming,smt,static-analysis,symbolic-execution" />
        </attvalues>
      </node>
      <node id="mndrix/list_util" label="mndrix/list_util">
        <attvalues>
          <attvalue for="0" value="lists,prolog" />
        </attvalues>
      </node>
      <node id="ixjf/logic-rs" label="ixjf/logic-rs">
        <attvalues>
          <attvalue for="0" value="consistency,contingency,contradiction,first,first-order,formal-validity,formulas,logic,order,parser,pest,predicate,relational,rust,tautology,truth-tree,validity,wasm" />
        </attvalues>
      </node>
      <node id="ParhamP/Natural_Logic_Interpreter" label="ParhamP/Natural_Logic_Interpreter">
        <attvalues>
          <attvalue for="0" value="logic-design,logic-programming,logical-knowledge-inference,logical-knowledge-representation,natural-language" />
        </attvalues>
      </node>
      <node id="pipe01/LogicScript" label="pipe01/LogicScript">
        <attvalues>
          <attvalue for="0" value="dsl,logic-programming,verilog" />
        </attvalues>
      </node>
      <node id="quickstrom/ltl-visualizer" label="quickstrom/ltl-visualizer">
        <attvalues>
          <attvalue for="0" value="logic,temporal-operators,visualization" />
        </attvalues>
      </node>
      <node id="composewell/streamly" label="composewell/streamly">
        <attvalues>
          <attvalue for="0" value="arrays,async,concurrency,dataflow,filesystem,folds,frp,haskell,logic-programming,loops,modular,network,non-determinism,parsers,pipes,reactive-programming,stream-fusion,streaming,unfolds,unicode" />
        </attvalues>
      </node>
      <node id="sdbtools/void-pi" label="sdbtools/void-pi">
        <attvalues>
          <attvalue for="0" value="gprolog,prolog,void-linux,voidlinux" />
        </attvalues>
      </node>
      <node id="UFrameIT/UFrameIT" label="UFrameIT/UFrameIT">
        <attvalues>
          <attvalue for="0" value="educational-game,logic,mathematical-knowledge-management,research-project,unity" />
        </attvalues>
      </node>
      <node id="program-spiritual/KongFuOfArchitect" label="program-spiritual/KongFuOfArchitect">
        <attvalues>
          <attvalue for="0" value="architect,architecture-guidelines,c,c-sharp,csharp,erlang,go,golang,java,javascript,lisp,nodejs,object-c,perl,prolog,python,rust,scala,swift" />
        </attvalues>
      </node>
      <node id="fenwii/LibraryBookSearchEngine" label="fenwii/LibraryBookSearchEngine">
        <attvalues>
          <attvalue for="0" value="197countries,academic,book,bookengine,books,college,learning,lib,library,librarysearchengine,logic,research,science,search-engine,student,students,teaching,thinking,university" />
        </attvalues>
      </node>
      <node id="jdswalker/Interpreter-in-Prolog" label="jdswalker/Interpreter-in-Prolog">
        <attvalues>
          <attvalue for="0" value="interpreter,lexer,parser,prolog,prolog-cfg,prolog-interpreter,swi-prolog,tokenizer" />
          <attvalue for="1" value="parser" />
        </attvalues>
      </node>
      <node id="ualib/ualib.github.io" label="ualib/ualib.github.io">
        <attvalues>
          <attvalue for="0" value="agda,agda-library,agda-ualib,dependent-types,formalization,logic,typetheory,universal-algebra" />
        </attvalues>
      </node>
      <node id="ilaspltd/ILASP-releases" label="ilaspltd/ILASP-releases">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,artificial-intelligence,explainable-ml,ilasp,inductive-logic-programming,logic-based-learning,logic-programming,machine-learning" />
          <attvalue for="1" value="constraint-programming" />
        </attvalues>
      </node>
      <node id="coastalwhite/wavedrom-rs" label="coastalwhite/wavedrom-rs">
        <attvalues>
          <attvalue for="0" value="diagrams,digital,logic,svg,timing,wasm,wavedrom,waveform" />
        </attvalues>
      </node>
      <node id="crossbowerbt/prolog-talk" label="crossbowerbt/prolog-talk">
        <attvalues>
          <attvalue for="0" value="artificial-intelligence,common-lisp,natural-language-processing,prolog" />
        </attvalues>
      </node>
      <node id="fatho/logru" label="fatho/logru">
        <attvalues>
          <attvalue for="0" value="hacktoberfest,logic-programming,rust" />
        </attvalues>
      </node>
      <node id="ufocoder/javascript.anomaly" label="ufocoder/javascript.anomaly">
        <attvalues>
          <attvalue for="0" value="anomaly,closure,javascript,logic,math" />
        </attvalues>
      </node>
      <node id="Janko-dev/plogic" label="Janko-dev/plogic">
        <attvalues>
          <attvalue for="0" value="logic,repl,rust" />
        </attvalues>
      </node>
      <node id="AmrSaber/async-short-circuit" label="AmrSaber/async-short-circuit">
        <attvalues>
          <attvalue for="0" value="and,async,circuit,javascript,js,logic,or,promise,promises,short" />
        </attvalues>
      </node>
      <node id="QuMuLab/python-nnf" label="QuMuLab/python-nnf">
        <attvalues>
          <attvalue for="0" value="dimacs,logic,nnf,python" />
        </attvalues>
      </node>
      <node id="retrofor/iamai" label="retrofor/iamai">
        <attvalues>
          <attvalue for="0" value="ai,artificial-intelligence,bot,flow,flowchart,gpt,logic,logic-programming,machine-learning,ml,onebot,python,rasa,rules,whl" />
          <attvalue for="1" value="machine-learning" />
        </attvalues>
      </node>
      <node id="toblotron/praxis-ide" label="toblotron/praxis-ide">
        <attvalues>
          <attvalue for="0" value="low-code,online-idecode-editor,prolog,prolog-programming-language,visual-programming-editor" />
        </attvalues>
      </node>
      <node id="sdiehl/haskell-picosat" label="sdiehl/haskell-picosat">
        <attvalues>
          <attvalue for="0" value="haskell,haskell-library,logic,logic-programming,picosat,picosat-solver,sat-solver" />
          <attvalue for="1" value="language" />
        </attvalues>
      </node>
      <node id="black-sat/black" label="black-sat/black">
        <attvalues>
          <attvalue for="0" value="formal-methods,formal-verification,linear-temporal-logic,logic,temporal-logic" />
        </attvalues>
      </node>
      <node id="souffle-lang/souffle" label="souffle-lang/souffle">
        <attvalues>
          <attvalue for="0" value="datalog,logic-programming,souffle,static-code-analysis,translator" />
        </attvalues>
      </node>
      <node id="acharal/hopes" label="acharal/hopes">
        <attvalues>
          <attvalue for="0" value="higher-order-logic,hopes,interpreter,logic-programming,prolog" />
          <attvalue for="1" value="interpreter" />
        </attvalues>
      </node>
      <node id="trealla-prolog/trealla" label="trealla-prolog/trealla">
        <attvalues>
          <attvalue for="0" value="c,iso-prolog-standard,prolog,prolog-implementation,prolog-interpreter,prolog-programming-language" />
          <attvalue for="1" value="javascript" />
        </attvalues>
      </node>
      <node id="Muqsit/arithmexp" label="Muqsit/arithmexp">
        <attvalues>
          <attvalue for="0" value="calculator,compiler,composer-library,constant-folding,logic,math,mathematical-expression-parser,optimization,parser,php,phpstan-l9,pmmp,pocketmine-mp,strength-reduction,virion" />
        </attvalues>
      </node>
      <node id="timoniq/laurelang" label="timoniq/laurelang">
        <attvalues>
          <attvalue for="0" value="logic-programming" />
        </attvalues>
      </node>
      <node id="ice1000/learn" label="ice1000/learn">
        <attvalues>
          <attvalue for="0" value="android,c,clojure,cpp,csharp,dart,go,groovy,haskell,java,jni,kotlin,learning,prolog,python" />
        </attvalues>
      </node>
      <node id="tau-prolog/tau-prolog" label="tau-prolog/tau-prolog">
        <attvalues>
          <attvalue for="0" value="iso-prolog-standard,javascript,logic-programming,prolog,prolog-implementation,prolog-interpreter,prolog-programming-language,tau-prolog" />
          <attvalue for="1" value="javascript" />
        </attvalues>
      </node>
      <node id="veyselusta/programming-language-research" label="veyselusta/programming-language-research">
        <attvalues>
          <attvalue for="0" value="compilers,formal-methods,functional-programming,interpreters,logic,programming-languages,type-theory" />
        </attvalues>
      </node>
      <node id="ekzhang/percival" label="ekzhang/percival">
        <attvalues>
          <attvalue for="0" value="charts,data-visualization,datalog,dsl,logic-programming,notebook,query-language,reactive,visualization" />
        </attvalues>
      </node>
      <node id="Aluriak/PowerGrASP" label="Aluriak/PowerGrASP">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,graph-compression,python,python-library" />
        </attvalues>
      </node>
      <node id="Anniepoo/prolog-examples" label="Anniepoo/prolog-examples">
        <attvalues>
          <attvalue for="0" value="family-tree,prolog" />
        </attvalues>
      </node>
      <node id="w1nte/vscode-dlv-syntax-highlighting" label="w1nte/vscode-dlv-syntax-highlighting">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,asp,dlv,syntax-highlighting,vscode-extension" />
        </attvalues>
      </node>
      <node id="pietrobarbiero/logic_explained_networks" label="pietrobarbiero/logic_explained_networks">
        <attvalues>
          <attvalue for="0" value="deep-learning,explainable-ai,logic,machine-learning,neural-networks,xai" />
        </attvalues>
      </node>
      <node id="tectijuana/logifun.archived" label="tectijuana/logifun.archived">
        <attvalues>
          <attvalue for="0" value="erlang,prolog-programming-language" />
        </attvalues>
      </node>
      <node id="shettyvarshaa/PRINCIPLES-OF-AI" label="shettyvarshaa/PRINCIPLES-OF-AI">
        <attvalues>
          <attvalue for="0" value="alphabeta-pruning,artificial-intelligence,chatbot,crossword-puzzle,fuzzy-logic,nimgame,prolog-programming-language" />
        </attvalues>
      </node>
      <node id="grafana/thema" label="grafana/thema">
        <attvalues>
          <attvalue for="0" value="config,cue,cuelang,grafana,logic-programming,openapi,openapi3,packaging,schema,versioning" />
        </attvalues>
      </node>
      <node id="Braden1996/Cracking-the-Coding-Interview-TypeScript" label="Braden1996/Cracking-the-Coding-Interview-TypeScript">
        <attvalues>
          <attvalue for="0" value="algorithms,cracking-the-coding-interview,data-structures,logic,prettier,ts-jest,tslint,typescript" />
        </attvalues>
      </node>
      <node id="rutgerswiselab/NLR" label="rutgerswiselab/NLR">
        <attvalues>
          <attvalue for="0" value="logic,neural,reasoning" />
        </attvalues>
      </node>
      <node id="nuric/deeplogic" label="nuric/deeplogic">
        <attvalues>
          <attvalue for="0" value="deep-learning,logic-programming" />
        </attvalues>
      </node>
      <node id="Jumaruba/LPL-solutions" label="Jumaruba/LPL-solutions">
        <attvalues>
          <attvalue for="0" value="fitch,fitch-proofs,logic,lpl,proof" />
        </attvalues>
      </node>
      <node id="DoctorWkt/TTL_TicTacToe" label="DoctorWkt/TTL_TicTacToe">
        <attvalues>
          <attvalue for="0" value="circuit,game,logic,ttl" />
        </attvalues>
      </node>
      <node id="daidr/truth-table" label="daidr/truth-table">
        <attvalues>
          <attvalue for="0" value="logic,math,truth-table,truth-table-generator" />
        </attvalues>
      </node>
      <node id="emarzion/SystemT" label="emarzion/SystemT">
        <attvalues>
          <attvalue for="0" value="logic,mathematical-logic,mathematics" />
        </attvalues>
      </node>
      <node id="gralog/gralog" label="gralog/gralog">
        <attvalues>
          <attvalue for="0" value="algorithm,graph,logic,visualization" />
        </attvalues>
      </node>
      <node id="pietrobarbiero/constraint-learning" label="pietrobarbiero/constraint-learning">
        <attvalues>
          <attvalue for="0" value="constraints,deep-learning,explainable-ai,learning,logic,neural-network,notebook-jupyter,python,pytorch" />
        </attvalues>
      </node>
      <node id="RichardMoot/LinearOne" label="RichardMoot/LinearOne">
        <attvalues>
          <attvalue for="0" value="displacement-calculus-grammars,first-order-logic,latex,linear-logic,logic-programming,proof-net,swi-prolog,theorem-proving" />
        </attvalues>
      </node>
      <node id="namin/scalogno" label="namin/scalogno">
        <attvalues>
          <attvalue for="0" value="logic-programming,metaprogramming,scala,smt,tabling" />
        </attvalues>
      </node>
      <node id="pkMinhas/MaschineKitDuplicator" label="pkMinhas/MaschineKitDuplicator">
        <attvalues>
          <attvalue for="0" value="ableton,daw,flstudio,logic,maschine" />
        </attvalues>
      </node>
      <node id="EricZinda/InductorProlog" label="EricZinda/InductorProlog">
        <attvalues>
          <attvalue for="0" value="cpp,inductor-prolog-engine,prolog,prolog-compiler,prolog-implementation" />
          <attvalue for="1" value="javascript" />
        </attvalues>
      </node>
      <node id="fnogatz/dcg4pt" label="fnogatz/dcg4pt">
        <attvalues>
          <attvalue for="0" value="definite-clause-grammar,grammar,parsing,prolog" />
        </attvalues>
      </node>
      <node id="ana-molinos/fund_prog" label="ana-molinos/fund_prog">
        <attvalues>
          <attvalue for="0" value="algorithm,algorithms,algoritmos,c,logic-programming,logica-de-programacao" />
        </attvalues>
      </node>
      <node id="xf-zhao/LoT" label="xf-zhao/LoT">
        <attvalues>
          <attvalue for="0" value="chain-of-thought,chain-of-thought-prompting,chain-of-thought-reasoning,chain-of-thoughts,coling,coling2024,language,language-model,llm,llms,logic,lot,reasoning,symbolic-logic,symbolic-logic-reasoning,zero-shot" />
        </attvalues>
      </node>
      <node id="SAP-samples/build-codejam" label="SAP-samples/build-codejam">
        <attvalues>
          <attvalue for="0" value="data-access,logic,sample,sap-build-apps,sap-build-process-automation,sap-build-work-zone,sap-codejam,ui" />
        </attvalues>
      </node>
      <node id="xamidi/pmGenerator" label="xamidi/pmGenerator">
        <attvalues>
          <attvalue for="0" value="condensed-detachment,formal-proofs,frege-systems,hilbert-systems,hpc,logic,mathematical-logic,mpi,proof-complexity,proof-theory,propositional-calculus,tbb,unification" />
        </attvalues>
      </node>
      <node id="MNoorFawi/pytholog" label="MNoorFawi/pytholog">
        <attvalues>
          <attvalue for="0" value="backtracking,logic-programming,neuro-symbolic-learning,prolog,prolog-syntax,python,symbolic-artificial-intelligence" />
          <attvalue for="1" value="declarative-language" />
        </attvalues>
      </node>
      <node id="glennstreet/awesome-philosophy-compsci" label="glennstreet/awesome-philosophy-compsci">
        <attvalues>
          <attvalue for="0" value="computer-science,logic,philosophy,prolog" />
        </attvalues>
      </node>
      <node id="awalterschulze/gominikanren" label="awalterschulze/gominikanren">
        <attvalues>
          <attvalue for="0" value="go,logic-programming,minikanren" />
        </attvalues>
      </node>
      <node id="flandreas/antares" label="flandreas/antares">
        <attvalues>
          <attvalue for="0" value="circuit,digital,education,learning,logic,simulation,simulator" />
        </attvalues>
      </node>
      <node id="uuverifiers/princess" label="uuverifiers/princess">
        <attvalues>
          <attvalue for="0" value="logic,smt,smt-lib,smt-solver,theorem-prover" />
        </attvalues>
      </node>
      <node id="huangyz0918/TankLogo" label="huangyz0918/TankLogo">
        <attvalues>
          <attvalue for="0" value="game,logic-programming,netlogo,tank,tank-game,teaching,tech" />
        </attvalues>
      </node>
      <node id="triska/trs" label="triska/trs">
        <attvalues>
          <attvalue for="0" value="prolog,term-rewriting,trs" />
        </attvalues>
      </node>
      <node id="eazar001/yesbot" label="eazar001/yesbot">
        <attvalues>
          <attvalue for="0" value="bot,irc,irc-bot,irc-client,prolog,swi-prolog" />
        </attvalues>
      </node>
      <node id="MatthiasNickles/diff-SAT" label="MatthiasNickles/diff-SAT">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,artificial-intelligence,constraint-programming,differentiable-programming,differentiable-satisfiability,dimacs-cnf,logic-programming,multi-models-optimization,optimization,probabilistic,probabilistic-asp,probabilistic-programming,probabilistic-satisfiability,probability,psat,sat-solver,satisfiability,weighted-sat-solving" />
          <attvalue for="1" value="constraint-programming" />
        </attvalues>
      </node>
      <node id="daviromero/anita" label="daviromero/anita">
        <attvalues>
          <attvalue for="0" value="analytic-tableaux,logic,proof-assistant,teaching-tools" />
        </attvalues>
      </node>
      <node id="mountain/knowledge" label="mountain/knowledge">
        <attvalues>
          <attvalue for="0" value="clojure,knowledge,logic-programming,wikidata" />
        </attvalues>
      </node>
      <node id="dirkschumacher/logician" label="dirkschumacher/logician">
        <attvalues>
          <attvalue for="0" value="datalog,logic-programming,prolog,r" />
          <attvalue for="1" value="language" />
        </attvalues>
      </node>
      <node id="haldai/Jurassic.pl" label="haldai/Jurassic.pl">
        <attvalues>
          <attvalue for="0" value="interface,julia,prolog,swi-prolog" />
        </attvalues>
      </node>
      <node id="twolodzko/prolog-rs" label="twolodzko/prolog-rs">
        <attvalues>
          <attvalue for="0" value="prolog,prolog-implementation,prolog-interpreter,rust,rust-lang" />
          <attvalue for="1" value="javascript" />
        </attvalues>
      </node>
      <node id="fwcd/curry-language-server" label="fwcd/curry-language-server">
        <attvalues>
          <attvalue for="0" value="curry,functional-programming,haskell,language-server-protocol,logic-programming" />
        </attvalues>
      </node>
      <node id="StrykerKKD/Logical" label="StrykerKKD/Logical">
        <attvalues>
          <attvalue for="0" value="logic-programming,microkanren,ocaml" />
        </attvalues>
      </node>
      <node id="ljos/ob-prolog" label="ljos/ob-prolog">
        <attvalues>
          <attvalue for="0" value="emacs-lisp,literate-programming,org-mode,prolog" />
        </attvalues>
      </node>
      <node id="chicolucio/truth-table-generator" label="chicolucio/truth-table-generator">
        <attvalues>
          <attvalue for="0" value="logic,pandas-styling,truth-table,truth-table-generator,truth-tables,ttg" />
        </attvalues>
      </node>
      <node id="Scrounger/ioBroker.linkeddevices" label="Scrounger/ioBroker.linkeddevices">
        <attvalues>
          <attvalue for="0" value="iobroker,iobroker-adapter,logic" />
        </attvalues>
      </node>
      <node id="Periklismant/oPIEC" label="Periklismant/oPIEC">
        <attvalues>
          <attvalue for="0" value="activity-recognition,complex-event-processing,complex-event-recognition,event-calculus,logic-programming,probabilistic-reasoning,stream-reasoning" />
        </attvalues>
      </node>
      <node id="para-droid-ai/scratchpad" label="para-droid-ai/scratchpad">
        <attvalues>
          <attvalue for="0" value="logic,model,reasoning,scratchpad" />
        </attvalues>
      </node>
      <node id="adyavanapalli/stanford-introduction-to-mathematical-thinking" label="adyavanapalli/stanford-introduction-to-mathematical-thinking">
        <attvalues>
          <attvalue for="0" value="coursera,logic,mathematical-logic,mathematical-thinking,number-theory,real-analysis,stanford" />
        </attvalues>
      </node>
      <node id="Hidorikun/Faculty" label="Hidorikun/Faculty">
        <attvalues>
          <attvalue for="0" value="assembly-x86,c,csharp,java,lisp,matlab,prolog,python" />
        </attvalues>
      </node>
      <node id="neogeodev/FusionConverter" label="neogeodev/FusionConverter">
        <attvalues>
          <attvalue for="0" value="aes,converter,cpld,logic,mvs,neogeo,pcb,snk" />
        </attvalues>
      </node>
      <node id="krismuniz/js-to-json-logic" label="krismuniz/js-to-json-logic">
        <attvalues>
          <attvalue for="0" value="javascript,js-to-json,js-to-json-logic,json,json-logic,logic,nodejs" />
        </attvalues>
      </node>
      <node id="DanielBrito/ufc" label="DanielBrito/ufc">
        <attvalues>
          <attvalue for="0" value="competitive-programming,compiler,computer-graphics,data-structures,database,functional-programming,linear-algebra,logic,mathematics,mobile-development,number-theory,operating-system,software-engineering,ui-ux,web-development" />
        </attvalues>
      </node>
      <node id="maciej-nowak/DP-Film-Expert-System" label="maciej-nowak/DP-Film-Expert-System">
        <attvalues>
          <attvalue for="0" value="declarative-programming,expert-system,film-expert,logic-programming,prolog,prolog-rules,university" />
          <attvalue for="1" value="declarative-language" />
        </attvalues>
      </node>
      <node id="byt3n33dl3/httpX" label="byt3n33dl3/httpX">
        <attvalues>
          <attvalue for="0" value="domain,fuzzing,httpx,linux,logic,offensive-security,penetration-testing,server,takeover,web" />
        </attvalues>
      </node>
      <node id="italankin/15Puzzle" label="italankin/15Puzzle">
        <attvalues>
          <attvalue for="0" value="15,15puzzle,android,fifteen,game,java,logic,puzzle" />
        </attvalues>
      </node>
      <node id="namin/logically" label="namin/logically">
        <attvalues>
          <attvalue for="0" value="abstract-interpretation,binders,clojure,logic-programming,metaprogramming,paper-implementations,prolog" />
          <attvalue for="1" value="declarative-language" />
        </attvalues>
      </node>
      <node id="fnogatz/tap" label="fnogatz/tap">
        <attvalues>
          <attvalue for="0" value="prolog,swi-prolog,tap" />
        </attvalues>
      </node>
      <node id="alhassy/PrologCheatSheet" label="alhassy/PrologCheatSheet">
        <attvalues>
          <attvalue for="0" value="cheatsheet,emacs,html,pdf,prolog,relational-programming" />
        </attvalues>
      </node>
      <node id="JCumin/Brachylog" label="JCumin/Brachylog">
        <attvalues>
          <attvalue for="0" value="code-golf,declarative,golfing-language,language,logic-programming,prolog,swi-prolog" />
          <attvalue for="1" value="language" />
        </attvalues>
      </node>
      <node id="jrclogic/SMCDEL" label="jrclogic/SMCDEL">
        <attvalues>
          <attvalue for="0" value="epistemic-logic,haskell,logic,model-checking,symbolic" />
        </attvalues>
      </node>
      <node id="Pufcorina/UBB-Computer-Science" label="Pufcorina/UBB-Computer-Science">
        <attvalues>
          <attvalue for="0" value="c,computer-science,cpp,csharp,css,html,java,lisp,prolog,python,ubb" />
        </attvalues>
      </node>
      <node id="racuna1/cse240-public" label="racuna1/cse240-public">
        <attvalues>
          <attvalue for="0" value="arizona-state-university,c,cpp,cse240,magic,prolog,scheme" />
        </attvalues>
      </node>
      <node id="karlstroetmann/Logic" label="karlstroetmann/Logic">
        <attvalues>
          <attvalue for="0" value="logic,python,z3-prover" />
        </attvalues>
      </node>
      <node id="courses-at-nju-by-hfwei/problem-solving-class-lectures" label="courses-at-nju-by-hfwei/problem-solving-class-lectures">
        <attvalues>
          <attvalue for="0" value="abstract-algebra,algorithms,computational-complexity,course-materials,discrete-mathematics,discrete-probability,graph-theory,group-theory,lecture-notes,linear-programming,logic,nanjing-university,nju-courses,number-theory,set-theory" />
        </attvalues>
      </node>
      <node id="nicoladileo/NephroDoctor" label="nicoladileo/NephroDoctor">
        <attvalues>
          <attvalue for="0" value="artificial-intelligence,expert-system,inference-engine,knowledge-base,medical-informatics,prolog-interpreter,prolog-programming-language,rule-based,uncertainty" />
        </attvalues>
      </node>
      <node id="sebdumancic/pylo2" label="sebdumancic/pylo2">
        <attvalues>
          <attvalue for="0" value="artificial-intelligence,logic-programming,prolog" />
          <attvalue for="1" value="artificial-intelligence" />
        </attvalues>
      </node>
      <node id="sneeuwballen/zipperposition" label="sneeuwballen/zipperposition">
        <attvalues>
          <attvalue for="0" value="cnf,computer-science-algorithms,experimental,induction,logic,ocaml,polymorphism,prototype,prover,rewriting,saturation,superposition,symbolic-computation" />
        </attvalues>
      </node>
      <node id="seanpm2001/AI2001" label="seanpm2001/AI2001">
        <attvalues>
          <attvalue for="0" value="ai,ai-2001,ai2001,artificial-intelligence,artificial-intelligence-2001,c,cython,gpl3,gplv3,home,home-repo,home-repository,homepage,julia,md,prolog,python,r,txt" />
        </attvalues>
      </node>
      <node id="Aluriak/clyngor" label="Aluriak/clyngor">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,python,python-library,python3,wrapper" />
        </attvalues>
      </node>
      <node id="jondot/hypermatch" label="jondot/hypermatch">
        <attvalues>
          <attvalue for="0" value="javascript,logic,matching,nodejs,rule-engine" />
        </attvalues>
      </node>
      <node id="mumuki/mulang" label="mumuki/mulang">
        <attvalues>
          <attvalue for="0" value="ast,browser,code-analysis,educational,functional,haskell,inspection,java,javascript,languages,logic-paradigm,mulang-ast,mumuki,nodejs,object-oriented,prolog,python,ruby,static-analysis" />
        </attvalues>
      </node>
      <node id="sreahw/schuller-geometric" label="sreahw/schuller-geometric">
        <attvalues>
          <attvalue for="0" value="algebras,axioms,bundles,classification,curves,dynkin,geometry,homotopy,lie,logic,manifolds,notes,physics,sets,topology,truth" />
        </attvalues>
      </node>
      <node id="MartimVideira/PFL-Exercises" label="MartimVideira/PFL-Exercises">
        <attvalues>
          <attvalue for="0" value="exercises,haskell,prolog" />
        </attvalues>
      </node>
      <node id="norswap/prolog-dry" label="norswap/prolog-dry">
        <attvalues>
          <attvalue for="0" value="backtracking,dcg,logic-programming,prolog" />
          <attvalue for="1" value="declarative-language" />
        </attvalues>
      </node>
      <node id="blenderskool/lexico" label="blenderskool/lexico">
        <attvalues>
          <attvalue for="0" value="data,dsl,extended,fuzzy,hacktoberfest,indexes,logic,operators,search" />
        </attvalues>
      </node>
      <node id="angrysky56/mcp-logic" label="angrysky56/mcp-logic">
        <attvalues>
          <attvalue for="0" value="ai,claude-3-5-sonnet,llm,logic,mcp-server,server,tool" />
        </attvalues>
      </node>
      <node id="AndreaInfUFSM/elc117-2024b" label="AndreaInfUFSM/elc117-2024b">
        <attvalues>
          <attvalue for="0" value="concurrent-programming,functional-programming,haskell,java,liascript-course,logic-programming,object-oriented-programming,programming-paradigms,prolog" />
          <attvalue for="1" value="language" />
        </attvalues>
      </node>
      <node id="s-webber/projog" label="s-webber/projog">
        <attvalues>
          <attvalue for="0" value="java,prolog,prolog-interpreter" />
        </attvalues>
      </node>
      <node id="aartikis/RTEC" label="aartikis/RTEC">
        <attvalues>
          <attvalue for="0" value="artificial-intelligence,cep,complex-event-processing,complex-event-recognition,data-science,data-stream-processing,event-calculus,logic-programming,multi-agent-systems,prolog,stream-processing,stream-reasoning" />
          <attvalue for="1" value="artificial-intelligence" />
        </attvalues>
      </node>
      <node id="CompSciCabal/reading-material" label="CompSciCabal/reading-material">
        <attvalues>
          <attvalue for="0" value="computer-science,logic-programming,pf-pl,stealthy-trojans,tar-pit,type-theory" />
        </attvalues>
      </node>
      <node id="freand76/digsim" label="freand76/digsim">
        <attvalues>
          <attvalue for="0" value="logic,python,rtl,simulation,simulator,vcd,verilog,yosys" />
        </attvalues>
      </node>
      <node id="rntz/minikanren-datalog" label="rntz/minikanren-datalog">
        <attvalues>
          <attvalue for="0" value="datalog,kanren,logic-programming,minikanren" />
        </attvalues>
      </node>
      <node id="opencog/atomspace" label="opencog/atomspace">
        <attvalues>
          <attvalue for="0" value="atomspace,graph-database,graph-rewriting,knowledge-base,knowledge-graph,knowledge-representation,logic-programming,query-engine,query-language,relational-algebra,relational-database,rewrite-system,rewriting" />
        </attvalues>
      </node>
      <node id="slovnicki/pLam" label="slovnicki/pLam">
        <attvalues>
          <attvalue for="0" value="church,church-encoding,computability,computability-theory,functional-programming,interpreter,lambda,lambda-calculus,language,logic-programming,numeral-systems,programming-language" />
        </attvalues>
      </node>
      <node id="MuhammadSulaiman001/prolog-lab" label="MuhammadSulaiman001/prolog-lab">
        <attvalues>
          <attvalue for="0" value="learn-prolog,logic,logic-programming,logical-programming,logical-programming-language,prolog,prolog-exercises,prolog-programming-language,swi-prolog" />
          <attvalue for="1" value="prolog-exercises" />
        </attvalues>
      </node>
      <node id="chessai/hsdatalog" label="chessai/hsdatalog">
        <attvalues>
          <attvalue for="0" value="bdd,compiler,datalog,logic-programming,relational-algebra,relational-databases" />
        </attvalues>
      </node>
      <node id="VictorYudin/switch" label="VictorYudin/switch">
        <attvalues>
          <attvalue for="0" value="appveyor,game,logic,opengl,usd" />
        </attvalues>
      </node>
      <node id="lps-js/lps.js" label="lps-js/lps.js">
        <attvalues>
          <attvalue for="0" value="ai,artificial-intelligence,interpreter,javascript,language,languages,library,logic,lps,production-systems,programming-language,prolog" />
          <attvalue for="1" value="artificial-intelligence" />
        </attvalues>
      </node>
      <node id="KovtunV/NoStringEvaluating" label="KovtunV/NoStringEvaluating">
        <attvalues>
          <attvalue for="0" value="calculation,calculator,condition,custom,evaluator,expression-evaluator,expressions,formula,formula-parser,function,logic,math,math-parser,mathematical-expression,mathematics,nostring,object-pooling,parser,rpn,solve" />
        </attvalues>
      </node>
      <node id="triska/letswicrypt" label="triska/letswicrypt">
        <attvalues>
          <attvalue for="0" value="https,https-server,prolog,swi-prolog" />
        </attvalues>
      </node>
      <node id="knowsys/nemo" label="knowsys/nemo">
        <attvalues>
          <attvalue for="0" value="datalog,knowledge-graph,language,logic,logic-programming,rdf,rule-engine" />
          <attvalue for="1" value="constraint-programming" />
        </attvalues>
      </node>
      <node id="sdiehl/picologic" label="sdiehl/picologic">
        <attvalues>
          <attvalue for="0" value="haskell,haskell-library,logic,picosat,sat-solver" />
        </attvalues>
      </node>
      <node id="namin/clpsmt-miniKanren" label="namin/clpsmt-miniKanren">
        <attvalues>
          <attvalue for="0" value="constraints,logic-programming,minikanren,scheme,smt" />
        </attvalues>
      </node>
      <node id="guregu/predicates" label="guregu/predicates">
        <attvalues>
          <attvalue for="0" value="dynamodb,go,prolog" />
        </attvalues>
      </node>
      <node id="joshuaguerin/Answer-Set-Programming-Algorithms" label="joshuaguerin/Answer-Set-Programming-Algorithms">
        <attvalues>
          <attvalue for="0" value="algorithm,algorithms,answer-set-programming,clingo,computer-science,constraint-programming,constraint-satisfaction-problem,education,language,logic,logic-programming,np-complete,np-hard" />
          <attvalue for="1" value="constraint-programming" />
        </attvalues>
      </node>
      <node id="Valian/python-business-logic" label="Valian/python-business-logic">
        <attvalues>
          <attvalue for="0" value="business-logic,business-rules,logic,python" />
        </attvalues>
      </node>
      <node id="kovvalsky/LangPro" label="kovvalsky/LangPro">
        <attvalues>
          <attvalue for="0" value="formal-semantics,lambda-logical-form,natural-language-inference,natural-language-processing,natural-logic,natural-tableau,nli,prolog,semantic-tableau,theorem-prover,theorem-proving" />
        </attvalues>
      </node>
      <node id="maheshabburi4/IITH-BTECH-Courses" label="maheshabburi4/IITH-BTECH-Courses">
        <attvalues>
          <attvalue for="0" value="computer-architecture,cool-compiler,data-structures-and-algorithms,discrete-mathematics,eiffel,os,principles-of-programming-languages,prolog" />
        </attvalues>
      </node>
      <node id="joes-esolangs/cassette" label="joes-esolangs/cassette">
        <attvalues>
          <attvalue for="0" value="concatenative,functional-programming,homoiconic,interpreter,metaprogramming,programming-language,programming-languages,prolog,tape-based,untyped" />
        </attvalues>
      </node>
      <node id="xieyuheng/exo" label="xieyuheng/exo">
        <attvalues>
          <attvalue for="0" value="elixir,logic-programming,microkanren,minikanren,the-reasoned-schemer" />
        </attvalues>
      </node>
      <node id="logicmoo/CYC_JRTL_with_CommonLisp" label="logicmoo/CYC_JRTL_with_CommonLisp">
        <attvalues>
          <attvalue for="0" value="abcl,artificial-general-intelligence,artificial-intelligence,common-lisp,cyc,cyc-jrtl,lisp-interpreter,logic-programming,natural-language-processing,opencyc,prolog-programming-language" />
        </attvalues>
      </node>
      <node id="LittleLollipop/LBox" label="LittleLollipop/LBox">
        <attvalues>
          <attvalue for="0" value="android,logic,utils" />
        </attvalues>
      </node>
      <node id="ptarau/TypesAndProofs" label="ptarau/TypesAndProofs">
        <attvalues>
          <attvalue for="0" value="all-binary-trees-generator,all-set-partitions-gnerator,beta-reduction,boltzmann-sampler,curry-howard-isomorphism,de-bruijn-notation,intuitionistic-logic,knuth-s-algorithm-r,lambda-terms,normal-forms,prolog,random-binary-tree,random-set-partition,remy-s-algorithm,tautology-checking,theorem-prover,type-inference" />
        </attvalues>
      </node>
      <node id="friguzzi/cplint" label="friguzzi/cplint">
        <attvalues>
          <attvalue for="0" value="inductive-logic-programming,logic-programming,machine-learning,probabilistic-logic-programming,probabilistic-programming,prolog" />
        </attvalues>
      </node>
      <node id="graphs4value/refinery" label="graphs4value/refinery">
        <attvalues>
          <attvalue for="0" value="graphs,logic,modeling" />
        </attvalues>
      </node>
      <node id="maebert/prolog_puzzles" label="maebert/prolog_puzzles">
        <attvalues>
          <attvalue for="0" value="cognitive-science,exercise,prolog,prolog-puzzles,puzzle" />
        </attvalues>
      </node>
      <node id="garciparedes/prolog-examples" label="garciparedes/prolog-examples">
        <attvalues>
          <attvalue for="0" value="examples,logic-programming,prolog,university,university-of-valladolid" />
          <attvalue for="1" value="declarative-language" />
        </attvalues>
      </node>
      <node id="Tractables/LogicCircuits.jl" label="Tractables/LogicCircuits.jl">
        <attvalues>
          <attvalue for="0" value="automated-reasoning,julia,logic,logic-circuits,logical-reasoning" />
        </attvalues>
      </node>
      <node id="SWI-Prolog/swipl-devel" label="SWI-Prolog/swipl-devel">
        <attvalues>
          <attvalue for="0" value="logic-programming,prolog,swi-prolog" />
        </attvalues>
      </node>
      <node id="typedb/typeql" label="typedb/typeql">
        <attvalues>
          <attvalue for="0" value="database,inference,logic,polymorphic,polymorphism,query,query-language,reasoning,strongly-typed,type-system,typedb,typeql" />
        </attvalues>
      </node>
      <node id="neogeodev/NeoChips" label="neogeodev/NeoChips">
        <attvalues>
          <attvalue for="0" value="arcade,asic,chips,clone,cpld,electronics,fix,fpga,gerber,layout,logic,neo-geo,neogeo,pcb,preservation,repair,snk,verilog" />
        </attvalues>
      </node>
      <node id="ostis-ai/scl-machine" label="ostis-ai/scl-machine">
        <attvalues>
          <attvalue for="0" value="logic,logic-inference,logic-programming,ostis" />
        </attvalues>
      </node>
      <node id="jariazavalverde/fasill" label="jariazavalverde/fasill">
        <attvalues>
          <attvalue for="0" value="fuzzy-connectives,fuzzy-logic,language-design,logic-language,logic-programming,prolog" />
        </attvalues>
      </node>
      <node id="bharathgs/NALU" label="bharathgs/NALU">
        <attvalues>
          <attvalue for="0" value="accumulator,alu,arithmetic,deep-learning,deepmind,logic,machine-learning,nalu,neural-network,pytorch" />
        </attvalues>
      </node>
      <node id="wouterbeek/prolog_library_collection" label="wouterbeek/prolog_library_collection">
        <attvalues>
          <attvalue for="0" value="prolog,swi-prolog" />
        </attvalues>
      </node>
      <node id="logisim-evolution/logisim-evolution" label="logisim-evolution/logisim-evolution">
        <attvalues>
          <attvalue for="0" value="circuit,circuits,digital-circuit,digital-circuits,digital-logic,digital-logic-design,education,fpga,logic,logisim,logisim-evolution,simulator,timing-diagram,verilog,vhdl" />
        </attvalues>
      </node>
      <node id="mthom/scryer-prolog" label="mthom/scryer-prolog">
        <attvalues>
          <attvalue for="0" value="iso-prolog-standard,prolog,prolog-implementation,prolog-interpreter,prolog-programming-language,rust" />
          <attvalue for="1" value="javascript" />
        </attvalues>
      </node>
      <node id="tomcl/issie" label="tomcl/issie">
        <attvalues>
          <attvalue for="0" value="digital,editor,educational,electron,fable,fpga,fsharp,logic,simulator,verilog" />
        </attvalues>
      </node>
      <node id="bnidia/libft" label="bnidia/libft">
        <attvalues>
          <attvalue for="0" value="algorithms,c,logic,rigor,unix" />
        </attvalues>
      </node>
      <node id="microsoft/Guan" label="microsoft/Guan">
        <attvalues>
          <attvalue for="0" value="csharp,guan,library,linux,logic-programming,netstandard20,prolog,windows" />
        </attvalues>
      </node>
      <node id="tuProlog/2p-kt" label="tuProlog/2p-kt">
        <attvalues>
          <attvalue for="0" value="2p,java,javascript,js,jvm,kotlin,kotlin-multi-platform,kotlin-multiplatform,logic-programming,prolog,simbolic-ai,symbolic,tuprolog" />
          <attvalue for="1" value="javascript" />
        </attvalues>
      </node>
      <node id="JanWielemaker/swi-prolog-wasm" label="JanWielemaker/swi-prolog-wasm">
        <attvalues>
          <attvalue for="0" value="prolog,webassembly" />
        </attvalues>
      </node>
      <node id="rj45/digilogic" label="rj45/digilogic">
        <attvalues>
          <attvalue for="0" value="circuit,digital,eda,logic,logic-gates,schematic-capture,simulation" />
        </attvalues>
      </node>
      <node id="921kiyo/symbolic-rl" label="921kiyo/symbolic-rl">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,artificial-intelligence,ilp,inductive-logic-programming,reinforcement-learning,symbolic-reinforcement-learning" />
        </attvalues>
      </node>
      <node id="prove-rs/z3.rs" label="prove-rs/z3.rs">
        <attvalues>
          <attvalue for="0" value="ffi-bindings,logic-programming,rust,rust-bindings,smt,smt-solver" />
        </attvalues>
      </node>
      <node id="qnighy/ipc_solver" label="qnighy/ipc_solver">
        <attvalues>
          <attvalue for="0" value="logic,ocaml,solver,twitter" />
        </attvalues>
      </node>
      <node id="Blog-Core/blog-core" label="Blog-Core/blog-core">
        <attvalues>
          <attvalue for="0" value="blog-core,blog-engine,cms,prolog,swi-prolog" />
        </attvalues>
      </node>
      <node id="linkml/linkml-datalog" label="linkml/linkml-datalog">
        <attvalues>
          <attvalue for="0" value="constraints,datalog,linkml,logic-programming,rdf,reasoning,rule-language,rules,semantic-web,semantics,souffle-datalog-language,validation" />
        </attvalues>
      </node>
      <node id="kyouko-taiga/LogicKit" label="kyouko-taiga/LogicKit">
        <attvalues>
          <attvalue for="0" value="domain-specific-language,logic-programming" />
        </attvalues>
      </node>
      <node id="cmungall/sparqlprog" label="cmungall/sparqlprog">
        <attvalues>
          <attvalue for="0" value="bioinformatics,datalog,ontology,prolog,rdf,semantic-web,sparql,swi-prolog" />
          <attvalue for="1" value="rdf" />
        </attvalues>
      </node>
      <node id="trealla-prolog/go" label="trealla-prolog/go">
        <attvalues>
          <attvalue for="0" value="go,logic-programming,prolog,trealla-prolog,wasm" />
          <attvalue for="1" value="interpreter" />
        </attvalues>
      </node>
      <node id="google/neural-logic-machines" label="google/neural-logic-machines">
        <attvalues>
          <attvalue for="0" value="logic-programming,neuro-symbolic-learning,reinforcement-learning" />
        </attvalues>
      </node>
      <node id="switz/driver" label="switz/driver">
        <attvalues>
          <attvalue for="0" value="javascript,logic,state,state-machine,typescript,ui" />
        </attvalues>
      </node>
      <node id="fenwii/LibraryBookSearchEnginePro" label="fenwii/LibraryBookSearchEnginePro">
        <attvalues>
          <attvalue for="0" value="academic,book,bookengine,books,learning,library,logic,papers,recommendation-system,research,science,search-engine,students,university" />
        </attvalues>
      </node>
      <node id="engboris/stellogen" label="engboris/stellogen">
        <attvalues>
          <attvalue for="0" value="formal-methods,logic,logic-programming,proof-assistant,transcendental-syntax,type-theory,verification" />
        </attvalues>
      </node>
      <node id="cicada-lang/chimera" label="cicada-lang/chimera">
        <attvalues>
          <attvalue for="0" value="json,logic,logic-programming,programming-language" />
          <attvalue for="1" value="javascript" />
        </attvalues>
      </node>
      <node id="uellenberg/Logimat" label="uellenberg/Logimat">
        <attvalues>
          <attvalue for="0" value="language,logic,math" />
        </attvalues>
      </node>
      <node id="uwdata/draco" label="uwdata/draco">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,vega,visualization-constraints,visualization-recommendation" />
        </attvalues>
      </node>
      <node id="ichiban/prolog" label="ichiban/prolog">
        <attvalues>
          <attvalue for="0" value="go,golang,interpreter,logic-programming,prolog" />
          <attvalue for="1" value="interpreter" />
        </attvalues>
      </node>
      <node id="itsanshulverma/du-cs-undergrad-course" label="itsanshulverma/du-cs-undergrad-course">
        <attvalues>
          <attvalue for="0" value="android,assembly,computer-science,cpp,du,html-css-javascript,java,lex,prolog,python,r,undergraduate-course,yacc" />
        </attvalues>
      </node>
      <node id="robsimmons/dusa" label="robsimmons/dusa">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,datalog,forward-chaining,logic-programming" />
        </attvalues>
      </node>
      <node id="amr205/Introduccion-a-la-IA---Libro" label="amr205/Introduccion-a-la-IA---Libro">
        <attvalues>
          <attvalue for="0" value="algoritmos-geneticos,aprendizaje-automatico,aprendizaje-no-supervisado,aprendizaje-supervisado,artifficial-intelligence,artificial-intelligence,book,genetic-algorithm,genetic-programming,inteligencia-artificial,logic-programming,machine-learning,programacion-logica,supervised-learning,unsupervised-learning" />
        </attvalues>
      </node>
      <node id="Rafisto/uni" label="Rafisto/uni">
        <attvalues>
          <attvalue for="0" value="algebra,algorythmic,algorytmiczna,calculus,computer,ina,informatyka,informatyka-algorytmiczna,lecture,logic,notes,pwr,science,university" />
        </attvalues>
      </node>
      <node id="guregu/php" label="guregu/php">
        <attvalues>
          <attvalue for="0" value="cgi,prolog,www" />
        </attvalues>
      </node>
      <node id="i-am-tom/holmes" label="i-am-tom/holmes">
        <attvalues>
          <attvalue for="0" value="backtracking,constraint-solver,logic-programming,propagation" />
        </attvalues>
      </node>
      <node id="mingodad/picat" label="mingodad/picat">
        <attvalues>
          <attvalue for="0" value="constraint-programming,cross-platform,declarative-programming,dynamic-programming,functional-programming,pattern-matching,prolog,solvers,symbolic-computation" />
        </attvalues>
      </node>
      <node id="alpha-asp/Alpha" label="alpha-asp/Alpha">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,lazy-grounding,logic-programming,solver" />
        </attvalues>
      </node>
      <node id="monasticacademy/logical-induction" label="monasticacademy/logical-induction">
        <attvalues>
          <attvalue for="0" value="inference,logic,probability" />
        </attvalues>
      </node>
      <node id="MarcelRobeer/VisualNarrator" label="MarcelRobeer/VisualNarrator">
        <attvalues>
          <attvalue for="0" value="conceptual-models,prolog,requirements-engineering,requirements-quality-analysis,user-story" />
        </attvalues>
      </node>
      <node id="lambduli/minilog" label="lambduli/minilog">
        <attvalues>
          <attvalue for="0" value="language,logic-programming,programming-language,prolog,prolog-implementation,repl,unification" />
          <attvalue for="1" value="language" />
        </attvalues>
      </node>
      <node id="carlosantq/LPL" label="carlosantq/LPL">
        <attvalues>
          <attvalue for="0" value="fitch,fitch-proofs,logic,lpl,proof" />
        </attvalues>
      </node>
      <node id="uuverifiers/eldarica" label="uuverifiers/eldarica">
        <attvalues>
          <attvalue for="0" value="horn-clauses,model-checker,prolog,smt-solver,smt2,verification" />
        </attvalues>
      </node>
      <node id="wouterbeek/prolog_graphviz" label="wouterbeek/prolog_graphviz">
        <attvalues>
          <attvalue for="0" value="graph,graphviz,graphviz-dot,graphviz-dot-language,prolog,swi-prolog,visualization" />
        </attvalues>
      </node>
      <node id="softlang/yas" label="softlang/yas">
        <attvalues>
          <attvalue for="0" value="language,prolog,slr,yas" />
        </attvalues>
      </node>
      <node id="PlugFox/bloc" label="PlugFox/bloc">
        <attvalues>
          <attvalue for="0" value="bloc,business,component,dart,dart-library,dartlang,flutter,flutter-package,library,logic,package,pub,pub-sub,publisher,publisher-subscriber-pattern,state-machine,state-management,sub,subscriber" />
        </attvalues>
      </node>
      <node id="logicmoo/programk" label="logicmoo/programk">
        <attvalues>
          <attvalue for="0" value="aiml,aiml-interpreter,aiml2,chatbot,prolog" />
        </attvalues>
      </node>
      <node id="hakank/hakank" label="hakank/hakank">
        <attvalues>
          <attvalue for="0" value="ampl,answer-set-programming,choco,comet,constraint-programming,constraint-satisfaction,eclipse-clp,essence,frink,gecode,jacop,jgap,minizinc,numberjack,picat,poplog,prolog,setl,sicstus-prolog,z3py" />
        </attvalues>
      </node>
      <node id="DeMaCS-UNICAL/Angry-HEX" label="DeMaCS-UNICAL/Angry-HEX">
        <attvalues>
          <attvalue for="0" value="angry-birds,artificial-intelligence,logic-programming,planning" />
        </attvalues>
      </node>
      <node id="sys27/xFunc" label="sys27/xFunc">
        <attvalues>
          <attvalue for="0" value="analyzer,c-sharp,complex-numbers,derivative,differentiation,dotnet,evaluate-expressions,expression,lexer,logic,math,math-parser,mathematics,parse,parser,simplification,units,units-of-measure" />
        </attvalues>
      </node>
      <node id="OSCC-Project/iMap" label="OSCC-Project/iMap">
        <attvalues>
          <attvalue for="0" value="eda,logic" />
        </attvalues>
      </node>
      <node id="SuperDisk/tar.pl" label="SuperDisk/tar.pl">
        <attvalues>
          <attvalue for="0" value="logic-programming,prolog,tar,unix" />
        </attvalues>
      </node>
      <node id="tgecho/canrun_rs" label="tgecho/canrun_rs">
        <attvalues>
          <attvalue for="0" value="dsl,kanren,logic,rust" />
        </attvalues>
      </node>
      <node id="philzook58/snakelog" label="philzook58/snakelog">
        <attvalues>
          <attvalue for="0" value="datalog,logic" />
        </attvalues>
      </node>
      <node id="gooofy/zamia-ai" label="gooofy/zamia-ai">
        <attvalues>
          <attvalue for="0" value="artificial-intelligence,knowledgebase,natural-language-processing,prolog,python,semantic-web,tensorflow" />
        </attvalues>
      </node>
      <node id="GustikS/NeuraLogic" label="GustikS/NeuraLogic">
        <attvalues>
          <attvalue for="0" value="deep-learning,differentiable-programming,logic-programming,machine-learning,relational-learning" />
        </attvalues>
      </node>
      <node id="jimmyg1997/NTUA-ai-artificial-intelligence" label="jimmyg1997/NTUA-ai-artificial-intelligence">
        <attvalues>
          <attvalue for="0" value="a-star,artificial-intelligence,google-maps,java,ntua-ece,prolog,taxi-app" />
        </attvalues>
      </node>
      <node id="SAKET-SK/Programming-Aptitude-Interview-Prep" label="SAKET-SK/Programming-Aptitude-Interview-Prep">
        <attvalues>
          <attvalue for="0" value="aptitude,aptitude-solver,aptitude-tests,aptitudetraining,exercises,interview-technical,logic-programming,programming-languages,technical-test" />
        </attvalues>
      </node>
      <node id="aarroyoc/scryer-playground" label="aarroyoc/scryer-playground">
        <attvalues>
          <attvalue for="0" value="prolog,webassembly" />
        </attvalues>
      </node>
      <node id="SimonBuxx/LogiJS" label="SimonBuxx/LogiJS">
        <attvalues>
          <attvalue for="0" value="boolean,cpu,electronics,flip-flop,gates,logic,logic-circuit,logic-circuits,logic-gates,simulator" />
        </attvalues>
      </node>
      <node id="complexdb/zincbase" label="complexdb/zincbase">
        <attvalues>
          <attvalue for="0" value="graph-embedding,knowledge-base,knowledge-graph,prolog" />
        </attvalues>
      </node>
      <node id="FLHonker/Awesome-Neural-Logic" label="FLHonker/Awesome-Neural-Logic">
        <attvalues>
          <attvalue for="0" value="causal,causal-inference,causality,first-order-logic,inductive-logic-programming,logic,logic-programming,markov,neural-network" />
          <attvalue for="1" value="artificial-intelligence" />
        </attvalues>
      </node>
      <node id="alexovidiupopa/UBB" label="alexovidiupopa/UBB">
        <attvalues>
          <attvalue for="0" value="assembly-8086,c,cisco-packet-tracer,clisp,cpp,data-structures-and-algorithms,graphs-theory,java,oop,prolog,python,shell,t-sql" />
        </attvalues>
      </node>
      <node id="gingerbeardman/mandala" label="gingerbeardman/mandala">
        <attvalues>
          <attvalue for="0" value="logic,mandala,mandala-art,pixels" />
        </attvalues>
      </node>
      <node id="alejandroaperez1994g/js-shopping-wizard" label="alejandroaperez1994g/js-shopping-wizard">
        <attvalues>
          <attvalue for="0" value="css,forms-validation,html,javascript,logic-programming" />
        </attvalues>
      </node>
      <node id="Jfaler/Philosophy" label="Jfaler/Philosophy">
        <attvalues>
          <attvalue for="0" value="aesthetics,books,dialectic,epistemology,ethics,evil,good,list,logic,mathematics,metaphysics,morals,nothing,philosopher,philosophy,politics,symbols,thinking,truth,wisdom" />
        </attvalues>
      </node>
      <node id="travisjungroth/trinary" label="travisjungroth/trinary">
        <attvalues>
          <attvalue for="0" value="logic,python,trinary" />
        </attvalues>
      </node>
      <node id="AppliedLogicSystems/ALSProlog" label="AppliedLogicSystems/ALSProlog">
        <attvalues>
          <attvalue for="0" value="compiler,iso-prolog-standard,language,logic-programming,programming-language,prolog,prolog-implementation,prolog-programming-language" />
          <attvalue for="1" value="language" />
        </attvalues>
      </node>
      <node id="Merlin04/truthtabl.es" label="Merlin04/truthtabl.es">
        <attvalues>
          <attvalue for="0" value="logic,nextjs,ohm,proof,proof-assistant,symbolic-logic,truth-table,truth-table-generator,truth-tables" />
        </attvalues>
      </node>
      <node id="abdulzakrt/WumpusWorld-CSharp" label="abdulzakrt/WumpusWorld-CSharp">
        <attvalues>
          <attvalue for="0" value="agent,csharp,game,gui,knowledgebase,knowledgebase-agents,prolog,swi-prolog,swipl,world,wpf,wpf-application,wumpus,wumpusworld" />
          <attvalue for="1" value="artificial-intelligence" />
        </attvalues>
      </node>
      <node id="awto/mfjs-logic" label="awto/mfjs-logic">
        <attvalues>
          <attvalue for="0" value="constraint-programming,javascript,logic,logic-programming,mfjs,monad" />
          <attvalue for="1" value="constraint-programming" />
        </attvalues>
      </node>
      <node id="rla/prolog-markdown" label="rla/prolog-markdown">
        <attvalues>
          <attvalue for="0" value="markdown,markdown-parser,swi-prolog" />
        </attvalues>
      </node>
      <node id="triska/lisprolog" label="triska/lisprolog">
        <attvalues>
          <attvalue for="0" value="interpreter,lisp,prolog" />
        </attvalues>
      </node>
      <node id="HarvardPL/AbcDatalog" label="HarvardPL/AbcDatalog">
        <attvalues>
          <attvalue for="0" value="datalog,declarative-programming,knowledge-base,logic-programming,rule-engine" />
        </attvalues>
      </node>
      <node id="fnogatz/plammar" label="fnogatz/plammar">
        <attvalues>
          <attvalue for="0" value="definite-clause-grammar,parser,prolog,serializer,swi-prolog" />
          <attvalue for="1" value="parser" />
        </attvalues>
      </node>
      <node id="wmannis/cl-gambol" label="wmannis/cl-gambol">
        <attvalues>
          <attvalue for="0" value="common-lisp,prolog" />
        </attvalues>
      </node>
      <node id="UberPyro/prowl" label="UberPyro/prowl">
        <attvalues>
          <attvalue for="0" value="based-stack-based-language,forth-like,functional-programming,logic-programming,ocaml,proglangs-discord,programming-language,regex,stack-based-language" />
        </attvalues>
      </node>
      <node id="rm-hull/wam" label="rm-hull/wam">
        <attvalues>
          <attvalue for="0" value="clojure,parser-combinators,prolog-implementation,tutorial,unification,wam" />
        </attvalues>
      </node>
      <node id="Kushal997-das/Pattern_Printing" label="Kushal997-das/Pattern_Printing">
        <attvalues>
          <attvalue for="0" value="cpp,logic-programming,patterns,python,python3" />
        </attvalues>
      </node>
      <node id="haldai/LogicalVision2" label="haldai/LogicalVision2">
        <attvalues>
          <attvalue for="0" value="computer-vision,opencv,swi-prolog" />
        </attvalues>
      </node>
      <node id="briza-insurance/illogical" label="briza-insurance/illogical">
        <attvalues>
          <attvalue for="0" value="comparison,conditional,logic,operand,parser" />
        </attvalues>
      </node>
      <node id="bitkeks/theolog-ss2017" label="bitkeks/theolog-ss2017">
        <attvalues>
          <attvalue for="0" value="german,lecture-notes,logic,theoretical-computer-science,university" />
        </attvalues>
      </node>
      <node id="LAMDASZ-ML/Awesome-Neuro-Symbolic-Learning-with-LLM" label="LAMDASZ-ML/Awesome-Neuro-Symbolic-Learning-with-LLM">
        <attvalues>
          <attvalue for="0" value="artificial-intelligence,awesome,embodied-ai,first-order-logic,gpt-4o,knowledge-graph,large-language-models,llm-agent,logic-programming,machine-learning,neuro-network,neuro-symbolic,papers,planning,reasoning,reinforcement-learning,visual-reasoning" />
        </attvalues>
      </node>
      <node id="metaclass-nl/filter-bundle" label="metaclass-nl/filter-bundle">
        <attvalues>
          <attvalue for="0" value="api-platform,doctrine,doctrine-orm,filter,logic,wherefilter" />
        </attvalues>
      </node>
      <node id="lab-v2/pyreason-gym" label="lab-v2/pyreason-gym">
        <attvalues>
          <attvalue for="0" value="gym,gym-environment,logic,logic-programming,machine-learning,reinforcement-learning,simulation" />
          <attvalue for="1" value="machine-learning" />
        </attvalues>
      </node>
      <node id="sarthak268/Embedded_Logic_and_Design" label="sarthak268/Embedded_Logic_and_Design">
        <attvalues>
          <attvalue for="0" value="arm,c,embedded-c,embedded-logic,embedded-systems,logic-circuit,logic-programming,pmod,verilog,verilog-hdl,verilog-programs,verilog-project,vhdl,vhdl-code,vivado,xilinx,xilinx-fpga,xilinx-sdk,xilinx-vivado,zedboard" />
        </attvalues>
      </node>
      <node id="MainakRepositor/Super-Ciphers" label="MainakRepositor/Super-Ciphers">
        <attvalues>
          <attvalue for="0" value="arithmetic,blockchain,cipher-algorithms,cpp,cryptography,java,logic,python3" />
        </attvalues>
      </node>
      <node id="FormalizedFormalLogic/Arithmetization" label="FormalizedFormalLogic/Arithmetization">
        <attvalues>
          <attvalue for="0" value="lean4,logic" />
        </attvalues>
      </node>
      <node id="jdryg/dls-schematics" label="jdryg/dls-schematics">
        <attvalues>
          <attvalue for="0" value="cpu,digital,dls,logic,schematic,simulation" />
        </attvalues>
      </node>
      <node id="Innocentsax/DSA_IN_JAVA" label="Innocentsax/DSA_IN_JAVA">
        <attvalues>
          <attvalue for="0" value="algorithms-and-data-structures,arrays,bitwise-operators,dsa-algorithm,dynamic-programming,java,logic-programming,regression,searching-algorithms,system-design" />
        </attvalues>
      </node>
      <node id="Shen-Language/shen-sources" label="Shen-Language/shen-sources">
        <attvalues>
          <attvalue for="0" value="functional-programming,lisp,logic-programming,programming-language,prolog,shen,static-typing" />
          <attvalue for="1" value="language" />
        </attvalues>
      </node>
      <node id="0xGeorgii/SharpLogic" label="0xGeorgii/SharpLogic">
        <attvalues>
          <attvalue for="0" value="automate-inference,automate-reasoning,automate-teorem-proofs,dotnet,formula,fsharp,intuitionistic-logic,logic,mathematics,propositional-logic" />
        </attvalues>
      </node>
      <node id="magmide/magmide" label="magmide/magmide">
        <attvalues>
          <attvalue for="0" value="coq,dependent-types,formal-methods,formal-verification,logic,systems-programming,type-safety,verification" />
        </attvalues>
      </node>
      <node id="nicoabie/quickcheck" label="nicoabie/quickcheck">
        <attvalues>
          <attvalue for="0" value="prolog,property-based-testing,quickcheck,swi-prolog" />
        </attvalues>
      </node>
      <node id="terohuttunen/proto-vulcan" label="terohuttunen/proto-vulcan">
        <attvalues>
          <attvalue for="0" value="logic-programming,rust" />
        </attvalues>
      </node>
      <node id="spamegg1/Math-for-CS-solutions" label="spamegg1/Math-for-CS-solutions">
        <attvalues>
          <attvalue for="0" value="calculus,computer-science,counting,functions,graph,graph-theory,induction,logic,math,number-theory,probability,proofs,random-walks,rsa-cryptography,set-theory,sets,solution" />
        </attvalues>
      </node>
      <node id="fnogatz/xsd2json" label="fnogatz/xsd2json">
        <attvalues>
          <attvalue for="0" value="json-schema,prolog,swi-prolog,xml-schema" />
        </attvalues>
      </node>
      <node id="arasgungore/NandGame" label="arasgungore/NandGame">
        <attvalues>
          <attvalue for="0" value="arithmetic-circuits,arithmetic-logic-unit,binary-logic,computer,control-unit,digital-design,fundamentals-of-computing,hardware,logic-circuit,logic-gates,logic-programming,logic-unit,memory,nand-game,nandgame,processor,random-access-memory,solutions,switching,thenandgame-solutions" />
        </attvalues>
      </node>
      <node id="fogfish/datalog" label="fogfish/datalog">
        <attvalues>
          <attvalue for="0" value="datalog,erlang,knowledge,logic-programming,semantic-web" />
        </attvalues>
      </node>
      <node id="triska/ediprolog" label="triska/ediprolog">
        <attvalues>
          <attvalue for="0" value="emacs,emacs-lisp,prolog,prolog-process" />
        </attvalues>
      </node>
      <node id="matchilling/brexit" label="matchilling/brexit">
        <attvalues>
          <attvalue for="0" value="adventure-game,brexit,prolog" />
        </attvalues>
      </node>
      <node id="SHI-Yu-Zhe/awesome-agi-cocosci" label="SHI-Yu-Zhe/awesome-agi-cocosci">
        <attvalues>
          <attvalue for="0" value="abduction,analogy,artificial-general-intelligence,awesome,awesome-list,bayesian,commonsense,computational-cognitive-science,developmental-psychology,explainable-ai,general-pattern-theory,hybrid-system,intuitive-physics,language-of-thought,logic-programming,mind-simulation,planning,pragmatics,scientific-discovery,theory-of-mind" />
        </attvalues>
      </node>
      <node id="luc-tielen/eclair-lang" label="luc-tielen/eclair-lang">
        <attvalues>
          <attvalue for="0" value="compiler,datalog,haskell,llvm,logic-programming" />
        </attvalues>
      </node>
      <node id="flix/flix" label="flix/flix">
        <attvalues>
          <attvalue for="0" value="flix,functional,hacktoberfest,imperative,jvm,language,logic,programming-language" />
        </attvalues>
      </node>
      <node id="ozekik/mathesis" label="ozekik/mathesis">
        <attvalues>
          <attvalue for="0" value="first-order-logic,formal-logic,logic,mathematical-logic,philosophical-logic,philosophy,proof,propositional-logic,prover,semantics" />
        </attvalues>
      </node>
      <node id="leoprover/Leo-III" label="leoprover/Leo-III">
        <attvalues>
          <attvalue for="0" value="atp,deduction-system,higher-order-logic,logic,reasoning,theorem-proving" />
        </attvalues>
      </node>
      <node id="pythological/kanren" label="pythological/kanren">
        <attvalues>
          <attvalue for="0" value="clp,constraint-logic-programming,logic-programming,minikanren,relational-programming,symbolic-computation" />
        </attvalues>
      </node>
      <node id="evertheylen/logicpy" label="evertheylen/logicpy">
        <attvalues>
          <attvalue for="0" value="logic-programming,prolog-implementation,python3" />
        </attvalues>
      </node>
      <node id="logictensornetworks/logictensornetworks" label="logictensornetworks/logictensornetworks">
        <attvalues>
          <attvalue for="0" value="fuzzy-logic,logic-programming,machinelearning,tensorflow" />
        </attvalues>
      </node>
      <node id="malikpiara/logicola" label="malikpiara/logicola">
        <attvalues>
          <attvalue for="0" value="education,elearning,formal-logic,learning,logic,logicola,quizapp" />
        </attvalues>
      </node>
      <node id="LogicalAtomist/principia" label="LogicalAtomist/principia">
        <attvalues>
          <attvalue for="0" value="coq,coq-ecosystem,formal-logic,formal-mathematics,formal-proofs,history-of-philosophy,latex,latex-packages,logic" />
        </attvalues>
      </node>
      <node id="kuba--/ut" label="kuba--/ut">
        <attvalues>
          <attvalue for="0" value="logic-programming,prolog,unification,unification-algorithm" />
          <attvalue for="1" value="language" />
        </attvalues>
      </node>
      <node id="LambdaAlpha/airlang_rs" label="LambdaAlpha/airlang_rs">
        <attvalues>
          <attvalue for="0" value="artificial-intelligence,formal-specification,logic-programming,logical-programming,programming-language,programming-languages,proof-of-concept,solver,specification-language" />
        </attvalues>
      </node>
      <node id="tau-prolog/draw-derivation-trees" label="tau-prolog/draw-derivation-trees">
        <attvalues>
          <attvalue for="0" value="canvas,derivation-tree,prolog,prolog-application,prolog-programming-language,tau-prolog" />
          <attvalue for="1" value="javascript" />
        </attvalues>
      </node>
      <node id="ekzhang/ukanren-rs" label="ekzhang/ukanren-rs">
        <attvalues>
          <attvalue for="0" value="functional-programming,language,logic-programming,microkanren,minikanren,prolog,rust" />
          <attvalue for="1" value="language" />
        </attvalues>
      </node>
      <node id="HouariZegai/PrologExercise" label="HouariZegai/PrologExercise">
        <attvalues>
          <attvalue for="0" value="exercise,exercise-solutions,prolog,prolog-programming-language" />
        </attvalues>
      </node>
      <node id="InKnowWorks/IKW-GraphEngine" label="InKnowWorks/IKW-GraphEngine">
        <attvalues>
          <attvalue for="0" value="knowledge-base,knowledge-graph,logic,logic-solver,ontology,semantic-reasoning" />
        </attvalues>
      </node>
      <node id="iOperator/CRSF-HLA" label="iOperator/CRSF-HLA">
        <attvalues>
          <attvalue for="0" value="analyzer,crossfire,expresslrs,logic,rc,tbs,tracer" />
        </attvalues>
      </node>
      <node id="philzook58/egglog0" label="philzook58/egglog0">
        <attvalues>
          <attvalue for="0" value="prolog,rust,theorem-prover" />
        </attvalues>
      </node>
      <node id="iliasam/uProbe" label="iliasam/uProbe">
        <attvalues>
          <attvalue for="0" value="lcd,logic,oscilloscope,probe,stm32" />
        </attvalues>
      </node>
      <node id="Ducasse/SOUL" label="Ducasse/SOUL">
        <attvalues>
          <attvalue for="0" value="logic-programming,pharo,prolog,unification" />
          <attvalue for="1" value="language" />
        </attvalues>
      </node>
      <node id="alexanyernas/Ejercicios-Practicos" label="alexanyernas/Ejercicios-Practicos">
        <attvalues>
          <attvalue for="0" value="exercises,logic,logic-programming,practice" />
        </attvalues>
      </node>
      <node id="Preetiraj3697/30dayofJavascript" label="Preetiraj3697/30dayofJavascript">
        <attvalues>
          <attvalue for="0" value="api,calculator,calendar,clock,country-guide-app,css3,dark-theme,favicon-generator,filtering,html,javascript,logic,mathgame,recipe-app,tic-tac-toe" />
        </attvalues>
      </node>
      <node id="i5ting/imove" label="i5ting/imove">
        <attvalues>
          <attvalue for="0" value="flowchart,javascript,logic,lowcode,x6,xstate" />
        </attvalues>
      </node>
      <node id="thuwzy/Neural-Symbolic-and-Probabilistic-Logic-Papers" label="thuwzy/Neural-Symbolic-and-Probabilistic-Logic-Papers">
        <attvalues>
          <attvalue for="0" value="deep-logic,logic-programming,neural-logic,neural-module-networks,neural-symbolic,neurosymbolic,probabilistic-logic,probability" />
        </attvalues>
      </node>
      <node id="AIT-Protocol/einstein-ait-prod" label="AIT-Protocol/einstein-ait-prod">
        <attvalues>
          <attvalue for="0" value="aai,bittensor,blockchain,decentralization,llm,logic,machine-learning,mathematics" />
        </attvalues>
      </node>
      <node id="noprompt/meander" label="noprompt/meander">
        <attvalues>
          <attvalue for="0" value="logic-programming,pattern-matching,program-transformation,substitution,term-rewriting,unification" />
        </attvalues>
      </node>
      <node id="konclude/Konclude" label="konclude/Konclude">
        <attvalues>
          <attvalue for="0" value="logic,ontology,owl,owl-reasoner,reasoning,semantic-web,sparql" />
        </attvalues>
      </node>
      <node id="RadostinaIvanova/Expert-system-in-Prolog" label="RadostinaIvanova/Expert-system-in-Prolog">
        <attvalues>
          <attvalue for="0" value="artificial-intelligence,backward-chaining,backward-chaining-prolog,expert-system,expert-system-diagnosis,expert-systems,goal-driven,prolog,prolog-programming-language,rule-based" />
        </attvalues>
      </node>
      <node id="triska/clpz" label="triska/clpz">
        <attvalues>
          <attvalue for="0" value="clp,constraint-programming,constraints,integer-arithmetic,prolog,sicstus-prolog" />
        </attvalues>
      </node>
      <node id="aditeyabaral/DDCO-Lab-UE18CS207" label="aditeyabaral/DDCO-Lab-UE18CS207">
        <attvalues>
          <attvalue for="0" value="computer-organization,digital-design,icarus-verilog,logic-programming,verilog,verilog-code" />
        </attvalues>
      </node>
      <node id="ztangent/Julog.jl" label="ztangent/Julog.jl">
        <attvalues>
          <attvalue for="0" value="first-order-logic,fol,julia,logic,logic-programming,prolog" />
          <attvalue for="1" value="artificial-intelligence" />
        </attvalues>
      </node>
      <node id="jaalonso/Lecturas_GLC" label="jaalonso/Lecturas_GLC">
        <attvalues>
          <attvalue for="0" value="coq,functional-programming,haskell,isabelle-hol,itp,leanprover,logic,logic-programming,prolog" />
          <attvalue for="1" value="language" />
        </attvalues>
      </node>
      <node id="triska/simsttab" label="triska/simsttab">
        <attvalues>
          <attvalue for="0" value="clp,constraint-programming,prolog,school,timetable,timetabling-engine" />
        </attvalues>
      </node>
      <node id="xmonader/prolog-rands" label="xmonader/prolog-rands">
        <attvalues>
          <attvalue for="0" value="constraint-satisfaction-problem,prolog,puzzles,riddles" />
        </attvalues>
      </node>
      <node id="neuroimaginador/fcaR" label="neuroimaginador/fcaR">
        <attvalues>
          <attvalue for="0" value="arules,concept-extraction,concept-lattice,formal-concept-analysis,formal-contexts,fuzzy-sets,implications,logic,recommendation-engine" />
        </attvalues>
      </node>
      <node id="santifa/pasp-mode" label="santifa/pasp-mode">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,emacs,major-mode" />
        </attvalues>
      </node>
      <node id="AAAI-DISIM-UnivAQ/DALI" label="AAAI-DISIM-UnivAQ/DALI">
        <attvalues>
          <attvalue for="0" value="event-driven,logic-programming,multi-agent-systems,prolog" />
          <attvalue for="1" value="artificial-intelligence" />
        </attvalues>
      </node>
      <node id="EvgSkv/logica" label="EvgSkv/logica">
        <attvalues>
          <attvalue for="0" value="bigquery,datalog,language,logic-programming,logica,postgresql,presto,prolog,prolog-implementation,sql,sqlite,trino" />
          <attvalue for="1" value="language" />
        </attvalues>
      </node>
      <node id="HackerFoo/poprc" label="HackerFoo/poprc">
        <attvalues>
          <attvalue for="0" value="compiler,concatenative,dependent-types,functional,high-level-synthesis,language,linear-logic,logic-programming,non-deterministic,partial-evaluators,popr,popr-compiler,supercompiler,verilog" />
        </attvalues>
      </node>
      <node id="danyvarghese/PyGol" label="danyvarghese/PyGol">
        <attvalues>
          <attvalue for="0" value="abductive-commonsense-reasoning,abductive-learning,artificial-intelligence,automated-data-science,automated-machine-learning,automl,explainable-ai,explainable-ml,inductive-logic-programming,inference-engine,inverse-entailment,logic-programming,machine-learning,pygol" />
        </attvalues>
      </node>
      <node id="latte-central/LaTTe" label="latte-central/LaTTe">
        <attvalues>
          <attvalue for="0" value="clojure,logic,mathematics,proof-assistant" />
        </attvalues>
      </node>
      <node id="AILab-FOI/pyxf" label="AILab-FOI/pyxf">
        <attvalues>
          <attvalue for="0" value="eclipse,ergo-lite,flora-2,interface,prolog,python,swipl,xsb" />
        </attvalues>
      </node>
      <node id="wotbrew/relic" label="wotbrew/relic">
        <attvalues>
          <attvalue for="0" value="clojure,dataflow,incremental-view-maintenance,logic,relational-algebra,relations,sql" />
        </attvalues>
      </node>
      <node id="davidallysson/logica-de-programacao" label="davidallysson/logica-de-programacao">
        <attvalues>
          <attvalue for="0" value="competitive-programming,exercises,logic-programming,programming,programming-language,spoj,uri,uva" />
        </attvalues>
      </node>
      <node id="logicmoo/prologmud" label="logicmoo/prologmud">
        <attvalues>
          <attvalue for="0" value="agi,artificial-general-intelligence,logicmoo,mud-servers,prolog,text-adventure-game" />
        </attvalues>
      </node>
      <node id="ekaf/wordnet-prolog" label="ekaf/wordnet-prolog">
        <attvalues>
          <attvalue for="0" value="princeton-wordnet,prolog,relational-databases,wordnet" />
        </attvalues>
      </node>
      <node id="IBM/LNN" label="IBM/LNN">
        <attvalues>
          <attvalue for="0" value="logic,machine-learning,neuro-symbolic-ai,reasoning" />
        </attvalues>
      </node>
      <node id="almossawi/badarguments" label="almossawi/badarguments">
        <attvalues>
          <attvalue for="0" value="arguments,critical-thinking,debate,free-books,illustrated-book,logic,logical-fallacies" />
        </attvalues>
      </node>
      <node id="namin/metamk" label="namin/metamk">
        <attvalues>
          <attvalue for="0" value="logic-programming,meta,metaprogramming,minikanren,reflection,scheme" />
        </attvalues>
      </node>
      <node id="arkark/d-prolog" label="arkark/d-prolog">
        <attvalues>
          <attvalue for="0" value="dlang,parser,prolog,repl" />
        </attvalues>
      </node>
      <node id="usmonovshohruxmirzo/leetcode-usmonovshohruxmirzo" label="usmonovshohruxmirzo/leetcode-usmonovshohruxmirzo">
        <attvalues>
          <attvalue for="0" value="algorithms,data-structures,javascript,leetcode,logic,problem-solving,problems,questions,solutions" />
        </attvalues>
      </node>
      <node id="CursedPrograms/ConfederateAI" label="CursedPrograms/ConfederateAI">
        <attvalues>
          <attvalue for="0" value="ai,artificial-intelligence,combat,logic,logic-based-artificial-intelligence,navmesh,unity,unity3d" />
        </attvalues>
      </node>
      <node id="viebel/klipse" label="viebel/klipse">
        <attvalues>
          <attvalue for="0" value="brainfuck,clojure,clojurescript,code-evaluation,codemirror-editor,common-lisp,evaluation,interactive-snippets,javascript,klipse-plugin,lua,ocaml,prolog,python,react,reactjs,reasonml,ruby,scheme" />
        </attvalues>
      </node>
      <node id="eshelyaron/debug_adapter" label="eshelyaron/debug_adapter">
        <attvalues>
          <attvalue for="0" value="debugger,emacs,logic-programming,prolog,swi-prolog,swipl" />
          <attvalue for="1" value="artificial-intelligence" />
        </attvalues>
      </node>
      <node id="RustemB/profetch" label="RustemB/profetch">
        <attvalues>
          <attvalue for="0" value="fetch,neofetch,prolog" />
        </attvalues>
      </node>
      <node id="Ana06/AI" label="Ana06/AI">
        <attvalues>
          <attvalue for="0" value="artificial-intelligence,jess,natural-language-processing,ontology,prolog,protege,recommender-system,ucm" />
        </attvalues>
      </node>
      <node id="logicmoo/wam_common_lisp" label="logicmoo/wam_common_lisp">
        <attvalues>
          <attvalue for="0" value="common-lisp,greenspun,lisp,lisp-compiler,lisp-interpreter,object-oriented-programming,oop,prolog,prolog-programmers,prolog-programming-language,swi,swi-prolog,swi-prolog-library,yap-prolog" />
        </attvalues>
      </node>
      <node id="Logoi-Linguistics/Logoi-Linguistics" label="Logoi-Linguistics/Logoi-Linguistics">
        <attvalues>
          <attvalue for="0" value="agi,lisp,prolog" />
        </attvalues>
      </node>
      <node id="Kushal997-das/C-PROGRAM" label="Kushal997-das/C-PROGRAM">
        <attvalues>
          <attvalue for="0" value="cprogramming-language,logic,programming" />
        </attvalues>
      </node>
      <node id="Bodigrim/logict" label="Bodigrim/logict">
        <attvalues>
          <attvalue for="0" value="backtracking,logic-programming,logict,monad-transformers" />
        </attvalues>
      </node>
      <node id="EricZinda/InductorHtn" label="EricZinda/InductorHtn">
        <attvalues>
          <attvalue for="0" value="ai,c-plus-plus,cplusplus,cpp,cpp-library,hierarchical-task-network,htn,prolog-implementation,python,python-3,python-library,python3" />
        </attvalues>
      </node>
      <node id="hneemann/Digital" label="hneemann/Digital">
        <attvalues>
          <attvalue for="0" value="circuit,digital-circuits,education,logic,logic-gates,logisim,simulator" />
        </attvalues>
      </node>
      <node id="wyvernSemi/vproc" label="wyvernSemi/vproc">
        <attvalues>
          <attvalue for="0" value="asic-verification,c,codesign,cosimulation,cpp,dpi,dpi-c,fpga,logic,logic-simulation,pli,processor,python,simulation-element,systemverilog,verification,verilog,vhdl,vhpidirect,vpi" />
        </attvalues>
      </node>
      <node id="Mazin-O3/Veecom" label="Mazin-O3/Veecom">
        <attvalues>
          <attvalue for="0" value="computer,computer-architecture,computer-engineering,cpu,logic,logisim,logisim-computer,risc-v" />
        </attvalues>
      </node>
      <node id="altaywtf/react-json-logic" label="altaywtf/react-json-logic">
        <attvalues>
          <attvalue for="0" value="builder,component,json,logic,react,ui" />
        </attvalues>
      </node>
      <node id="TSG405/C-for-Everyone-Programming-Fundamentals" label="TSG405/C-for-Everyone-Programming-Fundamentals">
        <attvalues>
          <attvalue for="0" value="basic-programming,c-programming-language,coursera,data-structures,fundamentals-of-programming,logic-programming,solutions,university-of-california-santa-cruz" />
        </attvalues>
      </node>
      <node id="01mf02/kontroli-rs" label="01mf02/kontroli-rs">
        <attvalues>
          <attvalue for="0" value="dedukti,dependent-types,logic,rust,typechecker" />
        </attvalues>
      </node>
      <node id="hintikkasworld/hintikkasworld" label="hintikkasworld/hintikkasworld">
        <attvalues>
          <attvalue for="0" value="agents,artificial-intelligence,dynamic-logics,epistemic-logic,ijcai-18,logic,logic-game,modal-logic" />
        </attvalues>
      </node>
      <node id="triska/clpb" label="triska/clpb">
        <attvalues>
          <attvalue for="0" value="bdd,clp,constraint-programming,constraints,independent-sets,matchsticks-puzzle,prolog,sat,satisfiability" />
        </attvalues>
      </node>
      <node id="drendog/Logic-Circuit-Simulator" label="drendog/Logic-Circuit-Simulator">
        <attvalues>
          <attvalue for="0" value="js,logic,logic-circuit,logic-circuit-simulator,logic-gate,logic-gate-simulator,logic-gates,p5js,simulator" />
        </attvalues>
      </node>
      <node id="nzbr/vlogsolv" label="nzbr/vlogsolv">
        <attvalues>
          <attvalue for="0" value="logic,v,vlang" />
        </attvalues>
      </node>
      <node id="Attempto/APE" label="Attempto/APE">
        <attvalues>
          <attvalue for="0" value="ace,attempto,cnl,nlp,swi-prolog" />
        </attvalues>
      </node>
      <node id="nunchaku-inria/nunchaku" label="nunchaku-inria/nunchaku">
        <attvalues>
          <attvalue for="0" value="cvc4,higher-order,hol,isabelle,logic,model-finding,proof-assistant,sat" />
        </attvalues>
      </node>
      <node id="AmziLS/AmziProlog" label="AmziLS/AmziProlog">
        <attvalues>
          <attvalue for="0" value="eclipse-plugin,ide,logic-programming,prolog,virtual-machine" />
          <attvalue for="1" value="javascript" />
        </attvalues>
      </node>
      <node id="friguzzi/bddem" label="friguzzi/bddem">
        <attvalues>
          <attvalue for="0" value="binary-decision-diagrams,c,cudd,inductive-logic-programming,probabilistic-logic-programming,prolog" />
        </attvalues>
      </node>
      <node id="ekzhang/crepe" label="ekzhang/crepe">
        <attvalues>
          <attvalue for="0" value="datalog,logic-programming,rust,souffle,static-analysis,translator" />
        </attvalues>
      </node>
      <node id="aljen/spaghetti" label="aljen/spaghetti">
        <attvalues>
          <attvalue for="0" value="cpp,cpp-library,cpp14,cpp17,editor,logic,logic-circuit-simulator,logic-gates,modern-cpp,qt5,simulation" />
        </attvalues>
      </node>
      <node id="Spydr06/logicrs" label="Spydr06/logicrs">
        <attvalues>
          <attvalue for="0" value="boolean-algebra,boolean-logic,circuit,gates,gtk,gtk4,hacktoberfest,hacktoberfest2023,libadwaita,libadwaita-rs,logic,logic-gates,logicrs,rust,simulation,simulator" />
        </attvalues>
      </node>
      <node id="Es1chUbJyan9/32bit_Quine-McCluskey_and_Petrick_Method_in_C" label="Es1chUbJyan9/32bit_Quine-McCluskey_and_Petrick_Method_in_C">
        <attvalues>
          <attvalue for="0" value="c,digital-logic,logic-programming,petrick-method,quine-mccluskey,quine-mccluskey-algorithm,simplification" />
        </attvalues>
      </node>
      <node id="SheafificationOfG/BoolosBrewery" label="SheafificationOfG/BoolosBrewery">
        <attvalues>
          <attvalue for="0" value="logic,puzzle-game" />
        </attvalues>
      </node>
      <node id="c-cube/smbc" label="c-cube/smbc">
        <attvalues>
          <attvalue for="0" value="computational,formal-methods,logic,model,ocaml,sat,solver" />
        </attvalues>
      </node>
      <node id="roboticslab-cseiitg/ProjectTartarus" label="roboticslab-cseiitg/ProjectTartarus">
        <attvalues>
          <attvalue for="0" value="agent,agent-oriented-programming,autonomous-agents,cyber-physical-systems,emulation,internet-of-things,mobile-agents,multi-agent-systems,prolog,raspberry-pi,swi-prolog,tartarus" />
          <attvalue for="1" value="artificial-intelligence" />
        </attvalues>
      </node>
      <node id="rubycocos/cocos" label="rubycocos/cocos">
        <attvalues>
          <attvalue for="0" value="cocos,commons,gems,prelude,prolog,ruby" />
        </attvalues>
      </node>
      <node id="billhails/PyScheme" label="billhails/PyScheme">
        <attvalues>
          <attvalue for="0" value="functional-programming,language,logic-programming,pycharm,python" />
        </attvalues>
      </node>
      <node id="hargettp/prolog_lsp" label="hargettp/prolog_lsp">
        <attvalues>
          <attvalue for="0" value="language-server-protocol,prolog" />
        </attvalues>
      </node>
      <node id="NucleoidAI/Nucleoid" label="NucleoidAI/Nucleoid">
        <attvalues>
          <attvalue for="0" value="expert-system,graph-rag,javascript,knowledge,knowledge-base,knowledge-graph,logic,logic-programming,neuro-symbolic,neuro-symbolic-ai,neuro-symbolic-learning,node,rag,reasoning,reasoning-engine,semantic-reasoner,semantic-reasoning,symbolic" />
          <attvalue for="1" value="constraint-programming" />
        </attvalues>
      </node>
      <node id="mdiep/Kanren.swift" label="mdiep/Kanren.swift">
        <attvalues>
          <attvalue for="0" value="kanren,logic-programming,swift" />
        </attvalues>
      </node>
      <node id="roberthoenig/FirstOrderLogic.jl" label="roberthoenig/FirstOrderLogic.jl">
        <attvalues>
          <attvalue for="0" value="first-order-logic,julia,logic,satisfiability-solver" />
        </attvalues>
      </node>
      <node id="cardillan/mindcode" label="cardillan/mindcode">
        <attvalues>
          <attvalue for="0" value="compiler,logic,mindustry,mlog,schematics" />
        </attvalues>
      </node>
      <node id="johnphantom/Dynamic-Stateless-Computer" label="johnphantom/Dynamic-Stateless-Computer">
        <attvalues>
          <attvalue for="0" value="computing,connectionism,connections,counter-strike,counter-strike-global-offensive,counter-strike-source,dynamic,dynamic-logics,entanglement,functional-programming,geometry,half-life,logic,quake,quake-engine,quantum-computing,quantum-mechanics,stateless,turing-machine" />
        </attvalues>
      </node>
      <node id="c-cube/datalog" label="c-cube/datalog">
        <attvalues>
          <attvalue for="0" value="datalog,logic-programming,memoization,ocaml,prolog" />
          <attvalue for="1" value="language" />
        </attvalues>
      </node>
      <node id="simply-logical/simply-logical" label="simply-logical/simply-logical">
        <attvalues>
          <attvalue for="0" value="jupyter-book,prolog,simply-logical,swish" />
        </attvalues>
      </node>
      <node id="linkml/owlstar" label="linkml/owlstar">
        <attvalues>
          <attvalue for="0" value="fol,knowledge-graph,logic,owl,probabilistic-models,rdf,rdfstar,semantics,semweb" />
        </attvalues>
      </node>
      <node id="hemansnation/Python-For-Data-Professionals" label="hemansnation/Python-For-Data-Professionals">
        <attvalues>
          <attvalue for="0" value="data-analytics,data-professionals,data-science,exploratory-data-analysis,logic-programming,machine-learning,pandas,python" />
        </attvalues>
      </node>
      <node id="newca12/awesome-rust-formalized-reasoning" label="newca12/awesome-rust-formalized-reasoning">
        <attvalues>
          <attvalue for="0" value="automated-theorem-provers,constructive-mathematics,dependent-types,formal-verification,logic,proof-assistants,prover,reasoning,rust,theorem-prover,theorem-proving" />
        </attvalues>
      </node>
      <node id="logigator/logigator" label="logigator/logigator">
        <attvalues>
          <attvalue for="0" value="angular,logic,logic-circuit,logic-gates,simulation" />
        </attvalues>
      </node>
      <node id="SWI-Prolog/swipl-wasm" label="SWI-Prolog/swipl-wasm">
        <attvalues>
          <attvalue for="0" value="prolog,swi-prolog,webassembly" />
        </attvalues>
      </node>
      <node id="daviromero/nadia" label="daviromero/nadia">
        <attvalues>
          <attvalue for="0" value="educational-software,logic,natural-deduction,proof-assistant" />
        </attvalues>
      </node>
      <node id="stdgregwar/elve" label="stdgregwar/elve">
        <attvalues>
          <attvalue for="0" value="circuit,extendable,extensible,graph,logic,logic-circuit,logic-design,nodes,plugin,qmake,visualisation" />
        </attvalues>
      </node>
      <node id="ikokkari/AI" label="ikokkari/AI">
        <attvalues>
          <attvalue for="0" value="aima-book,artificial-intelligence,ilkka-kokkarinen,prolog,python" />
        </attvalues>
      </node>
      <node id="RyanMarcus/vulcan" label="RyanMarcus/vulcan">
        <attvalues>
          <attvalue for="0" value="javascript,logic,proof,proof-assistant" />
        </attvalues>
      </node>
      <node id="dafengzhen/bootstrap-react-logic" label="dafengzhen/bootstrap-react-logic">
        <attvalues>
          <attvalue for="0" value="bootstrap,logic,react,typescript" />
        </attvalues>
      </node>
      <node id="ciao-lang/ciao" label="ciao-lang/ciao">
        <attvalues>
          <attvalue for="0" value="bytecode,ciao-prolog,clp,compiler,constraints,interpreter,iso-prolog-standard,logic,logic-programming,programming-language,prolog,prolog-compiler,prolog-implementation,prolog-interpreter,prolog-programming-language,virtual-machine" />
          <attvalue for="1" value="javascript" />
        </attvalues>
      </node>
      <node id="ptarau/pypro" label="ptarau/pypro">
        <attvalues>
          <attvalue for="0" value="interpreter,nested-tuples,prolog,python3,tuple-mining,unification" />
        </attvalues>
      </node>
      <node id="VanHakobyan/SWI-Prolog" label="VanHakobyan/SWI-Prolog">
        <attvalues>
          <attvalue for="0" value="logical-programming,prolog,prolog-programming-language,swi-prolog" />
        </attvalues>
      </node>
      <node id="kamel-usp/dpasp" label="kamel-usp/dpasp">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,credal-sets,logic-programming,neurosymbolic-ai,probabilistic-logic-programming,probabilistic-programming" />
          <attvalue for="1" value="constraint-programming" />
        </attvalues>
      </node>
      <node id="LogtalkDotOrg/logtalk3" label="LogtalkDotOrg/logtalk3">
        <attvalues>
          <attvalue for="0" value="declarative-language,declarative-programming,logic-programming,logtalk,oop,prolog" />
          <attvalue for="1" value="declarative-language" />
        </attvalues>
      </node>
      <node id="jdormit/sicp-logic" label="jdormit/sicp-logic">
        <attvalues>
          <attvalue for="0" value="clojure,datalog,logic-programming,sicp" />
        </attvalues>
      </node>
      <node id="pythological/unification" label="pythological/unification">
        <attvalues>
          <attvalue for="0" value="logic-programming,multiple-dispatch,python,unification" />
        </attvalues>
      </node>
      <node id="yuce/pyswip" label="yuce/pyswip">
        <attvalues>
          <attvalue for="0" value="artificial-intelligence,expert-systems,logic-programming,natural-language-processing,prolog,python,robotics,swi-prolog" />
          <attvalue for="1" value="artificial-intelligence" />
        </attvalues>
      </node>
      <node id="rzese/trill" label="rzese/trill">
        <attvalues>
          <attvalue for="0" value="axiom-pinpointing,description-logics,probabilistic-description-logics,probabilistic-knowledge-bases,prolog,tableau-reasoner,trill" />
        </attvalues>
      </node>
      <node id="Kaljurand/owl-verbalizer" label="Kaljurand/owl-verbalizer">
        <attvalues>
          <attvalue for="0" value="ace,owl,swi-prolog,web-ontology-language" />
        </attvalues>
      </node>
      <node id="Herb-AI/HerbSWIPL.jl" label="Herb-AI/HerbSWIPL.jl">
        <attvalues>
          <attvalue for="0" value="artificial-intelligence,automated-reasoning,julia,logic,logic-programming,prolog" />
          <attvalue for="1" value="artificial-intelligence" />
        </attvalues>
      </node>
      <node id="AthenaFoundation/athena" label="AthenaFoundation/athena">
        <attvalues>
          <attvalue for="0" value="formal-verification,functional-programming,logic,natural-deduction,proof-assistant,proof-language,theorem-proving" />
        </attvalues>
      </node>
      <node id="ysyesilyurt/Metu-CENG" label="ysyesilyurt/Metu-CENG">
        <attvalues>
          <attvalue for="0" value="c,computer-graphics,computer-organization,computer-security,coursework,cpp,embedded-systems,formal-languages,haskell,java,logic-design,metu,metu-ceng,networking,opengl,operating-systems,programming-languages,prolog,python,signal-processing" />
        </attvalues>
      </node>
      <node id="xieyuheng/logic-db" label="xieyuheng/logic-db">
        <attvalues>
          <attvalue for="0" value="logic-programming,prolog,typescript" />
        </attvalues>
      </node>
      <node id="mrieppel/fitchjs" label="mrieppel/fitchjs">
        <attvalues>
          <attvalue for="0" value="fitch-proofs,javascript,latex,logic,proof,proof-assistant" />
        </attvalues>
      </node>
      <node id="eBay/oja" label="eBay/oja">
        <attvalues>
          <attvalue for="0" value="dependency-injection,discovery-service,javascript,logic,middleware,nodejs,structure" />
        </attvalues>
      </node>
      <node id="Sintrastes/Montague" label="Sintrastes/Montague">
        <attvalues>
          <attvalue for="0" value="kripke-model,logic-programming,nlp,parsing" />
        </attvalues>
      </node>
      <node id="alehander92/hatlog" label="alehander92/hatlog">
        <attvalues>
          <attvalue for="0" value="grammar,prolog,python,type-system" />
        </attvalues>
      </node>
      <node id="arcadio/data-logic" label="arcadio/data-logic">
        <attvalues>
          <attvalue for="0" value="dcg,dsl,expert-system,logic-programming,metaprogramming,nlp,ontology,prolog,symbolic-ai,term-rewriting" />
          <attvalue for="1" value="declarative-language" />
        </attvalues>
      </node>
      <node id="ciao-lang/ciaopp" label="ciao-lang/ciaopp">
        <attvalues>
          <attvalue for="0" value="abstract-interpretation,ciao-prolog,prolog,static-analysis" />
        </attvalues>
      </node>
      <node id="wouterbeek/prolog_rdf" label="wouterbeek/prolog_rdf">
        <attvalues>
          <attvalue for="0" value="linked-data,prolog,rdf,semantic-web,swi-prolog" />
          <attvalue for="1" value="rdf" />
        </attvalues>
      </node>
      <node id="pveyes/smartass" label="pveyes/smartass">
        <attvalues>
          <attvalue for="0" value="interview-questions,javascript,logic,nodejs,questions" />
        </attvalues>
      </node>
      <node id="utahnlp/consistency" label="utahnlp/consistency">
        <attvalues>
          <attvalue for="0" value="bert,consistency,emnlp2019,first-order-logic,logic,loss-functions,mnli,mscoco,nli,pytorch,regularization,snli" />
        </attvalues>
      </node>
      <node id="r4gus/nodus" label="r4gus/nodus">
        <attvalues>
          <attvalue for="0" value="bevy,bevy-engine,circuit,gate,logic,logic-circuit,logic-gates,rust,simulator" />
        </attvalues>
      </node>
      <node id="Bram-Hub/LEGUP" label="Bram-Hub/LEGUP">
        <attvalues>
          <attvalue for="0" value="logic,logic-puzzles,puzzle" />
        </attvalues>
      </node>
      <node id="mndrix/regex" label="mndrix/regex">
        <attvalues>
          <attvalue for="0" value="prolog,regex,regular-expression" />
        </attvalues>
      </node>
      <node id="mdiep/Logician" label="mdiep/Logician">
        <attvalues>
          <attvalue for="0" value="constraints,kanren,logic-programming,solver,swift" />
        </attvalues>
      </node>
      <node id="tomgrek/zincbase" label="tomgrek/zincbase">
        <attvalues>
          <attvalue for="0" value="graph-neural-networks,knowledge-base,knowledge-graph,neural-network,prolog" />
        </attvalues>
      </node>
      <node id="ianthehenry/mixologician" label="ianthehenry/mixologician">
        <attvalues>
          <attvalue for="0" value="cocktails,datalog,logic-programming,mixology,souffle,souffle-datalog-language" />
        </attvalues>
      </node>
      <node id="prismplp/prism" label="prismplp/prism">
        <attvalues>
          <attvalue for="0" value="logic-programming,probabilistic-models,probabilistic-neural-network,probabilistic-programming" />
        </attvalues>
      </node>
      <node id="s-arash/ascent" label="s-arash/ascent">
        <attvalues>
          <attvalue for="0" value="datalog,declarative-language,lattice,logic-programming,rust" />
        </attvalues>
      </node>
      <node id="pietrobarbiero/pytorch_explain" label="pietrobarbiero/pytorch_explain">
        <attvalues>
          <attvalue for="0" value="deep-learning,entropy,explainability,explainable-ai,interpretability,interpretable-ai,interpretable-deep-learning,interpretable-machine-learning,lens,logic,machine-learning,neural-network,python,pytorch,sympy" />
        </attvalues>
      </node>
      <node id="raydac/jprol" label="raydac/jprol">
        <attvalues>
          <attvalue for="0" value="engine,gui-editor,java,prolog,prolog-engine,prolog-programming-language" />
        </attvalues>
      </node>
      <node id="potassco/clingo" label="potassco/clingo">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,declarative-programming,logic-programming" />
        </attvalues>
      </node>
      <node id="CoNarrative/precept" label="CoNarrative/precept">
        <attvalues>
          <attvalue for="0" value="clojure,clojurescript,declarative-programming,functional-reactive-programming,functional-relational-programming,logic-programming,rules" />
        </attvalues>
      </node>
      <node id="logicmoo/logicmoo_workspace" label="logicmoo/logicmoo_workspace">
        <attvalues>
          <attvalue for="0" value="agi,artifical-intelligence,game-server,logicmoo,mud,planner,prolog-programming-language" />
        </attvalues>
      </node>
      <node id="ErgoAI/ErgoEngine" label="ErgoAI/ErgoEngine">
        <attvalues>
          <attvalue for="0" value="ergo,ergo-engine,ergo-reasoner,ergoreasoner,knowledge-reasoning,knowledge-representation-reasoning,logic-programming,object-oriented-programming,reasoner" />
        </attvalues>
      </node>
      <node id="IBM/ULKB" label="IBM/ULKB">
        <attvalues>
          <attvalue for="0" value="knowledge-graph,logic,prover" />
        </attvalues>
      </node>
      <node id="OpenCircuits/OpenCircuits" label="OpenCircuits/OpenCircuits">
        <attvalues>
          <attvalue for="0" value="circuit,circuit-simulator,circuits,designer,digital-circuit-design,digital-circuits,education,hacktoberfest,logic,logic-gates,simulator,typescript" />
        </attvalues>
      </node>
      <node id="philzook58/knuckledragger" label="philzook58/knuckledragger">
        <attvalues>
          <attvalue for="0" value="logic,proof-assistant,python,theorem-proving" />
        </attvalues>
      </node>
      <node id="LukasZahradnik/PyNeuraLogic" label="LukasZahradnik/PyNeuraLogic">
        <attvalues>
          <attvalue for="0" value="deep-learning,differentiable-programming,geometric-deep-learning,graph-neural-networks,logic-programming,machine-learning,python,pytorch,relational-learning" />
        </attvalues>
      </node>
      <node id="DoctorWkt/CSCv2" label="DoctorWkt/CSCv2">
        <attvalues>
          <attvalue for="0" value="7400,alu,cpu,logic" />
        </attvalues>
      </node>
      <node id="Jaraxxus-Me/LogiCity" label="Jaraxxus-Me/LogiCity">
        <attvalues>
          <attvalue for="0" value="logic-programming,planning,reasoning,reinforcement-learning-environments" />
        </attvalues>
      </node>
      <node id="ai4reason/Prover9" label="ai4reason/Prover9">
        <attvalues>
          <attvalue for="0" value="computer-science,first-order-logic,logic,mathematics,model-checking,theorem-prover,theorem-proving" />
        </attvalues>
      </node>
      <node id="DevOgabek/LeetCodePythonSolutions" label="DevOgabek/LeetCodePythonSolutions">
        <attvalues>
          <attvalue for="0" value="leetcode,leetcode-python,leetcode-solutions,logic-programming,solutions" />
        </attvalues>
      </node>
      <node id="mistupv/SWIPrologZ3" label="mistupv/SWIPrologZ3">
        <attvalues>
          <attvalue for="0" value="api,c,prolog,swi,z3,z3-smt-solver" />
        </attvalues>
      </node>
      <node id="triska/clpfd" label="triska/clpfd">
        <attvalues>
          <attvalue for="0" value="clp,constraint-programming,constraints,integer-arithmetic,prolog,teaching" />
        </attvalues>
      </node>
      <node id="TEN-framework/ten_framework" label="TEN-framework/ten_framework">
        <attvalues>
          <attvalue for="0" value="ai,ai-agents,answer-set-programming,c,clingo,cloud-edge-computing,cloud-store,cpp,cross-language,cross-platform,golang,javascript,nodejs,package-management,plugin-system,python,rust,typescript,workflow" />
        </attvalues>
      </node>
      <node id="viatra/VIATRA-Generator" label="viatra/VIATRA-Generator">
        <attvalues>
          <attvalue for="0" value="eclipse-plugin,graphs,logic,modeling" />
        </attvalues>
      </node>
      <node id="acharal/wam" label="acharal/wam">
        <attvalues>
          <attvalue for="0" value="logic-programming,machine,prolog,prolog-compiler,wam,warren" />
          <attvalue for="1" value="javascript" />
        </attvalues>
      </node>
      <node id="CapelliC/hitchhicker-prolog" label="CapelliC/hitchhicker-prolog">
        <attvalues>
          <attvalue for="0" value="browser,javascript,logic-programming,nodejs,prolog,prolog-implementation,semantic-publishing,virtual-machine" />
          <attvalue for="1" value="javascript" />
        </attvalues>
      </node>
      <node id="microsoft/service-fabric-healer" label="microsoft/service-fabric-healer">
        <attvalues>
          <attvalue for="0" value="auto-mitigation,csharp,guan,linux,logic-programming,net6,service-fabric,windows" />
        </attvalues>
      </node>
      <node id="wernsey/Jatalog" label="wernsey/Jatalog">
        <attvalues>
          <attvalue for="0" value="datalog,datalog-engine,evaluation-engine,logic-programming" />
        </attvalues>
      </node>
      <node id="aclai-lab/ModalDecisionTrees.jl" label="aclai-lab/ModalDecisionTrees.jl">
        <attvalues>
          <attvalue for="0" value="decision-trees,logic,machine-learning,modal-logic,symbolic-learning,time-series-classification" />
        </attvalues>
      </node>
      <node id="sudiptog81/ducscode" label="sudiptog81/ducscode">
        <attvalues>
          <attvalue for="0" value="assembly,cpp,cs,du,hacktoberfest,java,javascript,prolog,system-architecture" />
        </attvalues>
      </node>
      <node id="newca12/scala-atp" label="newca12/scala-atp">
        <attvalues>
          <attvalue for="0" value="logic,scala,scala-port" />
        </attvalues>
      </node>
      <node id="sdleffler/whisper" label="sdleffler/whisper">
        <attvalues>
          <attvalue for="0" value="backtracking-search,dsl,logic-programming,rust,rust-lang,unification" />
        </attvalues>
      </node>
      <node id="utahnlp/layer_augmentation" label="utahnlp/layer_augmentation">
        <attvalues>
          <attvalue for="0" value="acl2019,attention,attention-mechanism,decomposable-attention,first-order-logic,logic,nli,pytorch,snli" />
        </attvalues>
      </node>
      <node id="agustingianni/Utilities" label="agustingianni/Utilities">
        <attvalues>
          <attvalue for="0" value="arm,exploiting,ida,idapython,prolog,research,scripts,vulndev" />
        </attvalues>
      </node>
      <node id="uclnlp/ntp" label="uclnlp/ntp">
        <attvalues>
          <attvalue for="0" value="deep-learning,nips-2017,prolog,tensorflow" />
        </attvalues>
      </node>
      <node id="lps-js/lps-studio" label="lps-js/lps-studio">
        <attvalues>
          <attvalue for="0" value="ai,app,artificial-intelligence,canvas,electron,electron-app,gui,html5,html5-canvas,logic,logic-programming,lps,simulation,visualisation,visualization" />
          <attvalue for="1" value="machine-learning" />
        </attvalues>
      </node>
      <node id="GGBRW/BOOLR" label="GGBRW/BOOLR">
        <attvalues>
          <attvalue for="0" value="digital,logic,logic-gates,simulation,simulator" />
        </attvalues>
      </node>
      <node id="schwering/limbo" label="schwering/limbo">
        <attvalues>
          <attvalue for="0" value="beliefs,knowledge,logic,reasoning" />
        </attvalues>
      </node>
      <node id="acl2/acl2" label="acl2/acl2">
        <attvalues>
          <attvalue for="0" value="acl2,common-lisp,first-order-logic,formal-methods,formal-verification,logic,rewriting,theorem-prover,theorem-proving" />
        </attvalues>
      </node>
      <node id="bnidia/ft_printf" label="bnidia/ft_printf">
        <attvalues>
          <attvalue for="0" value="algorithms,logic,rigor,unix" />
        </attvalues>
      </node>
      <node id="diagram-of-thought/diagram-of-thought" label="diagram-of-thought/diagram-of-thought">
        <attvalues>
          <attvalue for="0" value="large-language-models,llm,logic,math,reasoning" />
        </attvalues>
      </node>
      <node id="Farfi55/CookedUp" label="Farfi55/CookedUp">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,game,overcooked,unical,unity,unity3d" />
        </attvalues>
      </node>
      <node id="rla/prolog-target-js" label="rla/prolog-target-js">
        <attvalues>
          <attvalue for="0" value="javascript,swi-prolog,transpiler" />
        </attvalues>
      </node>
      <node id="triska/proloxy" label="triska/proloxy">
        <attvalues>
          <attvalue for="0" value="http-proxy,https,https-proxy,prolog,proxy-server,swi-prolog,websocket-connection" />
        </attvalues>
      </node>
      <node id="spamegg1/Epp-Discrete-Math-5th-solutions" label="spamegg1/Epp-Discrete-Math-5th-solutions">
        <attvalues>
          <attvalue for="0" value="algorithmic-complexity,big-o,circuits,computer-science,counting,discrete-mathematics,finite-state-automata,functions,graphs,logic,number-theory,probability,proofs,regular-expressions,relations,sets,trees" />
        </attvalues>
      </node>
      <node id="lab-v2/pyreason" label="lab-v2/pyreason">
        <attvalues>
          <attvalue for="0" value="logic,logic-programming,machine-learning,neurosymbolic,python,temporal-logic" />
          <attvalue for="1" value="machine-learning" />
        </attvalues>
      </node>
      <node id="kmtusher97/Knowledge-Based-QA-System-with-Python-and-Prolog" label="kmtusher97/Knowledge-Based-QA-System-with-Python-and-Prolog">
        <attvalues>
          <attvalue for="0" value="chatbot,chatbots,knowledge-based-systems,prolog,prolog-application,prolog-python,python,python3" />
        </attvalues>
      </node>
      <node id="DeMaCS-UNICAL/LoIDE" label="DeMaCS-UNICAL/LoIDE">
        <attvalues>
          <attvalue for="0" value="editing,editor,ide,logic-based-languages,logic-formalisms,logic-programming,web-app,web-application,web-based-ide,web-editor" />
        </attvalues>
      </node>
      <node id="bnediction/bonesis" label="bnediction/bonesis">
        <attvalues>
          <attvalue for="0" value="answer-set-programming,boolean-networks,synthesis,systems-biology" />
        </attvalues>
      </node>
      <node id="anskarl/LoMRF" label="anskarl/LoMRF">
        <attvalues>
          <attvalue for="0" value="graphical-models,inference,logic,machine-learning,probabilistic-programming,scala" />
        </attvalues>
      </node>
      <node id="guregu/trealla-js" label="guregu/trealla-js">
        <attvalues>
          <attvalue for="0" value="javascript,logic-programming,prolog,webassembly" />
          <attvalue for="1" value="javascript" />
        </attvalues>
      </node>
      <node id="rla/simple-template" label="rla/simple-template">
        <attvalues>
          <attvalue for="0" value="swi-prolog,template-engine" />
        </attvalues>
      </node>
      <node id="aclai-lab/SoleLogics.jl" label="aclai-lab/SoleLogics.jl">
        <attvalues>
          <attvalue for="0" value="logic,modal-logic,symbolic-learning" />
        </attvalues>
      </node>
      <node id="LaMatemaga/CF-Matematicas" label="LaMatemaga/CF-Matematicas">
        <attvalues>
          <attvalue for="0" value="codigo-facilito,discrete-mathematics,fundamentals-of-programming,graph-theory,logic,mathematics,programming-exercises,set-theory,spanish" />
        </attvalues>
      </node>
      <node id="pchampio/othello-prolog" label="pchampio/othello-prolog">
        <attvalues>
          <attvalue for="0" value="alpha-beta,artificial-intelligence,board-game,logic-programming,minmax,othello-game,prolog,student-project,swipl,univ-lemans" />
          <attvalue for="1" value="artificial-intelligence" />
        </attvalues>
      </node>
      <node id="thautwarm/RSolve" label="thautwarm/RSolve">
        <attvalues>
          <attvalue for="0" value="logic-programming,solvers" />
        </attvalues>
      </node>
      <node id="rachelwiles/GoT-Check" label="rachelwiles/GoT-Check">
        <attvalues>
          <attvalue for="0" value="database,family-tree,game-of-thrones,got,prolog,prolog-application,prolog-exercises,prolog-implementation,prolog-programming-language,prolog-rules,prolog-tutorial,swi-prolog" />
          <attvalue for="1" value="prolog-exercises" />
        </attvalues>
      </node>
      <node id="hylang/hydiomatic" label="hylang/hydiomatic">
        <attvalues>
          <attvalue for="0" value="hy,logic-programming,minikanren,python,static-code-analysis,symbolic-computation" />
        </attvalues>
      </node>
      <node id="ML-KULeuven/problog" label="ML-KULeuven/problog">
        <attvalues>
          <attvalue for="0" value="aproblog,dtproblog,lfi-problog,probabilistic,probabilistic-inference,probabilistic-logic-programming,probabilistic-programming,problog,prolog" />
        </attvalues>
      </node>
      <node id="klaudiosinani/awesome-prolog" label="klaudiosinani/awesome-prolog">
        <attvalues>
          <attvalue for="0" value="awesome,list,logic,programming,prolog" />
        </attvalues>
      </node>
      <node id="martinmogusu/course_advisor" label="martinmogusu/course_advisor">
        <attvalues>
          <attvalue for="0" value="artificial-intelligence,expert-system,knowledge-representation,prolog" />
        </attvalues>
      </node>
      <node id="ColemanGariety/derivation-machine" label="ColemanGariety/derivation-machine">
        <attvalues>
          <attvalue for="0" value="calculus,conclusion,homework,logic,premise" />
        </attvalues>
      </node>
      <node id="mrieppel/TruthTableGenerator" label="mrieppel/TruthTableGenerator">
        <attvalues>
          <attvalue for="0" value="javascript,latex,logic,semantics,truth-table" />
        </attvalues>
      </node>
      <node id="typedb/typedb" label="typedb/typedb">
        <attvalues>
          <attvalue for="0" value="database,inference,knowledge-base,knowledge-representation,logic,polymorphic,polymorphism,reasoning,strongly-typed,type-system,typedb,typeql" />
        </attvalues>
      </node>
      <node id="aclai-lab/Sole.jl" label="aclai-lab/Sole.jl">
        <attvalues>
          <attvalue for="0" value="artificial-intelligence,julia,logic,symbolic-learning" />
        </attvalues>
      </node>
      <node id="matsud224/wamcompiler" label="matsud224/wamcompiler">
        <attvalues>
          <attvalue for="0" value="common-lisp,compiler,prolog,wam,warren-abstract-machine" />
        </attvalues>
      </node>
      <node id="steshaw/plt" label="steshaw/plt">
        <attvalues>
          <attvalue for="0" value="category-theory,functional-programming,logic,programming-languages,proof-theory,type-theory" />
        </attvalues>
      </node>
      <node id="kanugurajesh/RAG-Gemini" label="kanugurajesh/RAG-Gemini">
        <attvalues>
          <attvalue for="0" value="gemini-api,generative-ai,logic-programming,pineconedb,rag-template,retrieval-augmented-generation,script,semantic-search,typescript,vector-database" />
        </attvalues>
      </node>
      <node id="triska/bitcoinolog" label="triska/bitcoinolog">
        <attvalues>
          <attvalue for="0" value="bitcoin,bitcoin-wallet,cryptocurrency,elliptic-curves,offline-capable,prolog" />
        </attvalues>
      </node>
      <node id="leopoglia/java" label="leopoglia/java">
        <attvalues>
          <attvalue for="0" value="java,logic,oriented-object-programming" />
        </attvalues>
      </node>
      <node id="sasagawa888/Elxlog" label="sasagawa888/Elxlog">
        <attvalues>
          <attvalue for="0" value="elixir,prolog" />
        </attvalues>
      </node>
      <node id="mndrix/func" label="mndrix/func">
        <attvalues>
          <attvalue for="0" value="functions,prolog" />
        </attvalues>
      </node>
    </nodes>
    <edges>
      <edge source="gooofy/zamia-prolog" target="MNoorFawi/pytholog" id="0">
        <attvalues>
          <attvalue for="2" value="python" />
        </attvalues>
      </edge>
      <edge source="gooofy/zamia-prolog" target="LogtalkDotOrg/logtalk3" id="1">
        <attvalues>
          <attvalue for="2" value="declarative-language" />
        </attvalues>
      </edge>
      <edge source="gooofy/zamia-prolog" target="yuce/pyswip" id="2">
        <attvalues>
          <attvalue for="2" value="python" />
        </attvalues>
      </edge>
      <edge source="marcincuber/modal_logic" target="lab-v2/pyreason" id="3">
        <attvalues>
          <attvalue for="2" value="temporal-logic" />
        </attvalues>
      </edge>
      <edge source="Xachap/Neuro-FLOPER" target="yuce/pyswip" id="4">
        <attvalues>
          <attvalue for="2" value="python" />
        </attvalues>
      </edge>
      <edge source="mcsoto/cosmos" target="acharal/hopes" id="5">
        <attvalues>
          <attvalue for="2" value="interpreter" />
        </attvalues>
      </edge>
      <edge source="mcsoto/cosmos" target="JCumin/Brachylog" id="6">
        <attvalues>
          <attvalue for="2" value="language" />
        </attvalues>
      </edge>
      <edge source="mcsoto/cosmos" target="ichiban/prolog" id="7">
        <attvalues>
          <attvalue for="2" value="interpreter" />
        </attvalues>
      </edge>
      <edge source="mcsoto/cosmos" target="lambduli/minilog" id="8">
        <attvalues>
          <attvalue for="2" value="language" />
        </attvalues>
      </edge>
      <edge source="mcsoto/cosmos" target="AppliedLogicSystems/ALSProlog" id="9">
        <attvalues>
          <attvalue for="2" value="language" />
        </attvalues>
      </edge>
      <edge source="mcsoto/cosmos" target="ekzhang/ukanren-rs" id="10">
        <attvalues>
          <attvalue for="2" value="language" />
        </attvalues>
      </edge>
      <edge source="mcsoto/cosmos" target="EvgSkv/logica" id="11">
        <attvalues>
          <attvalue for="2" value="language" />
        </attvalues>
      </edge>
      <edge source="mcsoto/cosmos" target="ciao-lang/ciao" id="12">
        <attvalues>
          <attvalue for="2" value="interpreter" />
        </attvalues>
      </edge>
      <edge source="triska/the-power-of-prolog" target="namin/clpset-miniKanren" id="13">
        <attvalues>
          <attvalue for="2" value="constraints" />
        </attvalues>
      </edge>
      <edge source="triska/the-power-of-prolog" target="ciao-lang/ciao" id="14">
        <attvalues>
          <attvalue for="2" value="constraints" />
        </attvalues>
      </edge>
      <edge source="evoldoers/biomake" target="cmungall/sparqlprog" id="15">
        <attvalues>
          <attvalue for="2" value="bioinformatics" />
        </attvalues>
      </edge>
      <edge source="CapelliC/hhprolog" target="tau-prolog/tau-prolog" id="16">
        <attvalues>
          <attvalue for="2" value="javascript" />
        </attvalues>
      </edge>
      <edge source="CapelliC/hhprolog" target="EricZinda/InductorProlog" id="17">
        <attvalues>
          <attvalue for="2" value="cpp" />
        </attvalues>
      </edge>
      <edge source="CapelliC/hhprolog" target="ciao-lang/ciao" id="18">
        <attvalues>
          <attvalue for="2" value="virtual-machine" />
        </attvalues>
      </edge>
      <edge source="CapelliC/hhprolog" target="CapelliC/hitchhicker-prolog" id="19">
        <attvalues>
          <attvalue for="2" value="javascript,virtual-machine" />
        </attvalues>
      </edge>
      <edge source="namin/clpset-miniKanren" target="namin/logically" id="20">
        <attvalues>
          <attvalue for="2" value="paper-implementations" />
        </attvalues>
      </edge>
      <edge source="namin/clpset-miniKanren" target="ekzhang/ukanren-rs" id="21">
        <attvalues>
          <attvalue for="2" value="minikanren" />
        </attvalues>
      </edge>
      <edge source="namin/clpset-miniKanren" target="ciao-lang/ciao" id="22">
        <attvalues>
          <attvalue for="2" value="constraints" />
        </attvalues>
      </edge>
      <edge source="jdswalker/Interpreter-in-Prolog" target="fnogatz/plammar" id="23">
        <attvalues>
          <attvalue for="2" value="parser" />
        </attvalues>
      </edge>
      <edge source="ilaspltd/ILASP-releases" target="MatthiasNickles/diff-SAT" id="24">
        <attvalues>
          <attvalue for="2" value="artificial-intelligence" />
        </attvalues>
      </edge>
      <edge source="retrofor/iamai" target="lab-v2/pyreason-gym" id="25">
        <attvalues>
          <attvalue for="2" value="machine-learning" />
        </attvalues>
      </edge>
      <edge source="retrofor/iamai" target="Herb-AI/HerbSWIPL.jl" id="26">
        <attvalues>
          <attvalue for="2" value="artificial-intelligence" />
        </attvalues>
      </edge>
      <edge source="retrofor/iamai" target="lps-js/lps-studio" id="27">
        <attvalues>
          <attvalue for="2" value="ai,artificial-intelligence" />
        </attvalues>
      </edge>
      <edge source="retrofor/iamai" target="lab-v2/pyreason" id="28">
        <attvalues>
          <attvalue for="2" value="machine-learning,python" />
        </attvalues>
      </edge>
      <edge source="sdiehl/haskell-picosat" target="jaalonso/Lecturas_GLC" id="29">
        <attvalues>
          <attvalue for="2" value="haskell" />
        </attvalues>
      </edge>
      <edge source="acharal/hopes" target="ichiban/prolog" id="30">
        <attvalues>
          <attvalue for="2" value="interpreter" />
        </attvalues>
      </edge>
      <edge source="acharal/hopes" target="ciao-lang/ciao" id="31">
        <attvalues>
          <attvalue for="2" value="interpreter" />
        </attvalues>
      </edge>
      <edge source="trealla-prolog/trealla" target="tau-prolog/tau-prolog" id="32">
        <attvalues>
          <attvalue for="2" value="iso-prolog-standard,prolog-interpreter" />
        </attvalues>
      </edge>
      <edge source="trealla-prolog/trealla" target="twolodzko/prolog-rs" id="33">
        <attvalues>
          <attvalue for="2" value="prolog-interpreter" />
        </attvalues>
      </edge>
      <edge source="trealla-prolog/trealla" target="mthom/scryer-prolog" id="34">
        <attvalues>
          <attvalue for="2" value="iso-prolog-standard,prolog-interpreter" />
        </attvalues>
      </edge>
      <edge source="trealla-prolog/trealla" target="AppliedLogicSystems/ALSProlog" id="35">
        <attvalues>
          <attvalue for="2" value="iso-prolog-standard" />
        </attvalues>
      </edge>
      <edge source="trealla-prolog/trealla" target="ciao-lang/ciao" id="36">
        <attvalues>
          <attvalue for="2" value="iso-prolog-standard,prolog-interpreter" />
        </attvalues>
      </edge>
      <edge source="tau-prolog/tau-prolog" target="twolodzko/prolog-rs" id="37">
        <attvalues>
          <attvalue for="2" value="prolog-interpreter" />
        </attvalues>
      </edge>
      <edge source="tau-prolog/tau-prolog" target="mthom/scryer-prolog" id="38">
        <attvalues>
          <attvalue for="2" value="iso-prolog-standard,prolog-interpreter" />
        </attvalues>
      </edge>
      <edge source="tau-prolog/tau-prolog" target="tuProlog/2p-kt" id="39">
        <attvalues>
          <attvalue for="2" value="javascript" />
        </attvalues>
      </edge>
      <edge source="tau-prolog/tau-prolog" target="AppliedLogicSystems/ALSProlog" id="40">
        <attvalues>
          <attvalue for="2" value="iso-prolog-standard" />
        </attvalues>
      </edge>
      <edge source="tau-prolog/tau-prolog" target="tau-prolog/draw-derivation-trees" id="41">
        <attvalues>
          <attvalue for="2" value="tau-prolog" />
        </attvalues>
      </edge>
      <edge source="tau-prolog/tau-prolog" target="ciao-lang/ciao" id="42">
        <attvalues>
          <attvalue for="2" value="iso-prolog-standard,prolog-interpreter" />
        </attvalues>
      </edge>
      <edge source="tau-prolog/tau-prolog" target="CapelliC/hitchhicker-prolog" id="43">
        <attvalues>
          <attvalue for="2" value="javascript" />
        </attvalues>
      </edge>
      <edge source="tau-prolog/tau-prolog" target="guregu/trealla-js" id="44">
        <attvalues>
          <attvalue for="2" value="javascript" />
        </attvalues>
      </edge>
      <edge source="EricZinda/InductorProlog" target="ciao-lang/ciao" id="45">
        <attvalues>
          <attvalue for="2" value="prolog-compiler" />
        </attvalues>
      </edge>
      <edge source="MNoorFawi/pytholog" target="norswap/prolog-dry" id="46">
        <attvalues>
          <attvalue for="2" value="backtracking" />
        </attvalues>
      </edge>
      <edge source="MNoorFawi/pytholog" target="yuce/pyswip" id="47">
        <attvalues>
          <attvalue for="2" value="python" />
        </attvalues>
      </edge>
      <edge source="MatthiasNickles/diff-SAT" target="joshuaguerin/Answer-Set-Programming-Algorithms" id="48">
        <attvalues>
          <attvalue for="2" value="constraint-programming" />
        </attvalues>
      </edge>
      <edge source="MatthiasNickles/diff-SAT" target="kamel-usp/dpasp" id="49">
        <attvalues>
          <attvalue for="2" value="probabilistic-programming" />
        </attvalues>
      </edge>
      <edge source="dirkschumacher/logician" target="EvgSkv/logica" id="50">
        <attvalues>
          <attvalue for="2" value="datalog" />
        </attvalues>
      </edge>
      <edge source="dirkschumacher/logician" target="c-cube/datalog" id="51">
        <attvalues>
          <attvalue for="2" value="datalog" />
        </attvalues>
      </edge>
      <edge source="twolodzko/prolog-rs" target="mthom/scryer-prolog" id="52">
        <attvalues>
          <attvalue for="2" value="prolog-interpreter,rust" />
        </attvalues>
      </edge>
      <edge source="twolodzko/prolog-rs" target="ciao-lang/ciao" id="53">
        <attvalues>
          <attvalue for="2" value="prolog-interpreter" />
        </attvalues>
      </edge>
      <edge source="maciej-nowak/DP-Film-Expert-System" target="garciparedes/prolog-examples" id="54">
        <attvalues>
          <attvalue for="2" value="university" />
        </attvalues>
      </edge>
      <edge source="maciej-nowak/DP-Film-Expert-System" target="LogtalkDotOrg/logtalk3" id="55">
        <attvalues>
          <attvalue for="2" value="declarative-programming" />
        </attvalues>
      </edge>
      <edge source="maciej-nowak/DP-Film-Expert-System" target="arcadio/data-logic" id="56">
        <attvalues>
          <attvalue for="2" value="expert-system" />
        </attvalues>
      </edge>
      <edge source="namin/logically" target="arcadio/data-logic" id="57">
        <attvalues>
          <attvalue for="2" value="metaprogramming" />
        </attvalues>
      </edge>
      <edge source="JCumin/Brachylog" target="lambduli/minilog" id="58">
        <attvalues>
          <attvalue for="2" value="language" />
        </attvalues>
      </edge>
      <edge source="JCumin/Brachylog" target="AppliedLogicSystems/ALSProlog" id="59">
        <attvalues>
          <attvalue for="2" value="language" />
        </attvalues>
      </edge>
      <edge source="JCumin/Brachylog" target="ekzhang/ukanren-rs" id="60">
        <attvalues>
          <attvalue for="2" value="language" />
        </attvalues>
      </edge>
      <edge source="JCumin/Brachylog" target="EvgSkv/logica" id="61">
        <attvalues>
          <attvalue for="2" value="language" />
        </attvalues>
      </edge>
      <edge source="sebdumancic/pylo2" target="aartikis/RTEC" id="62">
        <attvalues>
          <attvalue for="2" value="artificial-intelligence" />
        </attvalues>
      </edge>
      <edge source="sebdumancic/pylo2" target="yuce/pyswip" id="63">
        <attvalues>
          <attvalue for="2" value="artificial-intelligence" />
        </attvalues>
      </edge>
      <edge source="sebdumancic/pylo2" target="Herb-AI/HerbSWIPL.jl" id="64">
        <attvalues>
          <attvalue for="2" value="artificial-intelligence" />
        </attvalues>
      </edge>
      <edge source="sebdumancic/pylo2" target="pchampio/othello-prolog" id="65">
        <attvalues>
          <attvalue for="2" value="artificial-intelligence" />
        </attvalues>
      </edge>
      <edge source="norswap/prolog-dry" target="arcadio/data-logic" id="66">
        <attvalues>
          <attvalue for="2" value="dcg" />
        </attvalues>
      </edge>
      <edge source="AndreaInfUFSM/elc117-2024b" target="tuProlog/2p-kt" id="67">
        <attvalues>
          <attvalue for="2" value="java" />
        </attvalues>
      </edge>
      <edge source="AndreaInfUFSM/elc117-2024b" target="Shen-Language/shen-sources" id="68">
        <attvalues>
          <attvalue for="2" value="functional-programming" />
        </attvalues>
      </edge>
      <edge source="AndreaInfUFSM/elc117-2024b" target="ekzhang/ukanren-rs" id="69">
        <attvalues>
          <attvalue for="2" value="functional-programming" />
        </attvalues>
      </edge>
      <edge source="AndreaInfUFSM/elc117-2024b" target="jaalonso/Lecturas_GLC" id="70">
        <attvalues>
          <attvalue for="2" value="functional-programming,haskell" />
        </attvalues>
      </edge>
      <edge source="aartikis/RTEC" target="AAAI-DISIM-UnivAQ/DALI" id="71">
        <attvalues>
          <attvalue for="2" value="multi-agent-systems" />
        </attvalues>
      </edge>
      <edge source="aartikis/RTEC" target="yuce/pyswip" id="72">
        <attvalues>
          <attvalue for="2" value="artificial-intelligence" />
        </attvalues>
      </edge>
      <edge source="aartikis/RTEC" target="Herb-AI/HerbSWIPL.jl" id="73">
        <attvalues>
          <attvalue for="2" value="artificial-intelligence" />
        </attvalues>
      </edge>
      <edge source="aartikis/RTEC" target="pchampio/othello-prolog" id="74">
        <attvalues>
          <attvalue for="2" value="artificial-intelligence" />
        </attvalues>
      </edge>
      <edge source="MuhammadSulaiman001/prolog-lab" target="rachelwiles/GoT-Check" id="75">
        <attvalues>
          <attvalue for="2" value="prolog-exercises" />
        </attvalues>
      </edge>
      <edge source="lps-js/lps.js" target="ciao-lang/ciao" id="76">
        <attvalues>
          <attvalue for="2" value="interpreter,programming-language" />
        </attvalues>
      </edge>
      <edge source="lps-js/lps.js" target="Herb-AI/HerbSWIPL.jl" id="77">
        <attvalues>
          <attvalue for="2" value="artificial-intelligence" />
        </attvalues>
      </edge>
      <edge source="triska/letswicrypt" target="triska/proloxy" id="78">
        <attvalues>
          <attvalue for="2" value="https" />
        </attvalues>
      </edge>
      <edge source="knowsys/nemo" target="joshuaguerin/Answer-Set-Programming-Algorithms" id="79">
        <attvalues>
          <attvalue for="2" value="language" />
        </attvalues>
      </edge>
      <edge source="knowsys/nemo" target="NucleoidAI/Nucleoid" id="80">
        <attvalues>
          <attvalue for="2" value="knowledge-graph" />
        </attvalues>
      </edge>
      <edge source="joshuaguerin/Answer-Set-Programming-Algorithms" target="awto/mfjs-logic" id="81">
        <attvalues>
          <attvalue for="2" value="constraint-programming" />
        </attvalues>
      </edge>
      <edge source="mthom/scryer-prolog" target="AppliedLogicSystems/ALSProlog" id="82">
        <attvalues>
          <attvalue for="2" value="iso-prolog-standard" />
        </attvalues>
      </edge>
      <edge source="mthom/scryer-prolog" target="ciao-lang/ciao" id="83">
        <attvalues>
          <attvalue for="2" value="iso-prolog-standard,prolog-interpreter" />
        </attvalues>
      </edge>
      <edge source="tuProlog/2p-kt" target="CapelliC/hitchhicker-prolog" id="84">
        <attvalues>
          <attvalue for="2" value="javascript" />
        </attvalues>
      </edge>
      <edge source="tuProlog/2p-kt" target="guregu/trealla-js" id="85">
        <attvalues>
          <attvalue for="2" value="javascript" />
        </attvalues>
      </edge>
      <edge source="cmungall/sparqlprog" target="wouterbeek/prolog_rdf" id="86">
        <attvalues>
          <attvalue for="2" value="rdf,semantic-web" />
        </attvalues>
      </edge>
      <edge source="trealla-prolog/go" target="ichiban/prolog" id="87">
        <attvalues>
          <attvalue for="2" value="go" />
        </attvalues>
      </edge>
      <edge source="cicada-lang/chimera" target="ciao-lang/ciao" id="88">
        <attvalues>
          <attvalue for="2" value="programming-language" />
        </attvalues>
      </edge>
      <edge source="ichiban/prolog" target="ciao-lang/ciao" id="89">
        <attvalues>
          <attvalue for="2" value="interpreter" />
        </attvalues>
      </edge>
      <edge source="lambduli/minilog" target="AppliedLogicSystems/ALSProlog" id="90">
        <attvalues>
          <attvalue for="2" value="language,programming-language" />
        </attvalues>
      </edge>
      <edge source="lambduli/minilog" target="Shen-Language/shen-sources" id="91">
        <attvalues>
          <attvalue for="2" value="programming-language" />
        </attvalues>
      </edge>
      <edge source="lambduli/minilog" target="kuba--/ut" id="92">
        <attvalues>
          <attvalue for="2" value="unification" />
        </attvalues>
      </edge>
      <edge source="lambduli/minilog" target="ekzhang/ukanren-rs" id="93">
        <attvalues>
          <attvalue for="2" value="language" />
        </attvalues>
      </edge>
      <edge source="lambduli/minilog" target="Ducasse/SOUL" id="94">
        <attvalues>
          <attvalue for="2" value="unification" />
        </attvalues>
      </edge>
      <edge source="lambduli/minilog" target="EvgSkv/logica" id="95">
        <attvalues>
          <attvalue for="2" value="language" />
        </attvalues>
      </edge>
      <edge source="lambduli/minilog" target="ciao-lang/ciao" id="96">
        <attvalues>
          <attvalue for="2" value="programming-language" />
        </attvalues>
      </edge>
      <edge source="FLHonker/Awesome-Neural-Logic" target="ztangent/Julog.jl" id="97">
        <attvalues>
          <attvalue for="2" value="first-order-logic" />
        </attvalues>
      </edge>
      <edge source="AppliedLogicSystems/ALSProlog" target="Shen-Language/shen-sources" id="98">
        <attvalues>
          <attvalue for="2" value="programming-language" />
        </attvalues>
      </edge>
      <edge source="AppliedLogicSystems/ALSProlog" target="ekzhang/ukanren-rs" id="99">
        <attvalues>
          <attvalue for="2" value="language" />
        </attvalues>
      </edge>
      <edge source="AppliedLogicSystems/ALSProlog" target="EvgSkv/logica" id="100">
        <attvalues>
          <attvalue for="2" value="language" />
        </attvalues>
      </edge>
      <edge source="AppliedLogicSystems/ALSProlog" target="ciao-lang/ciao" id="101">
        <attvalues>
          <attvalue for="2" value="compiler,iso-prolog-standard,programming-language" />
        </attvalues>
      </edge>
      <edge source="abdulzakrt/WumpusWorld-CSharp" target="eshelyaron/debug_adapter" id="102">
        <attvalues>
          <attvalue for="2" value="swipl" />
        </attvalues>
      </edge>
      <edge source="abdulzakrt/WumpusWorld-CSharp" target="roboticslab-cseiitg/ProjectTartarus" id="103">
        <attvalues>
          <attvalue for="2" value="agent" />
        </attvalues>
      </edge>
      <edge source="awto/mfjs-logic" target="NucleoidAI/Nucleoid" id="104">
        <attvalues>
          <attvalue for="2" value="javascript" />
        </attvalues>
      </edge>
      <edge source="lab-v2/pyreason-gym" target="lps-js/lps-studio" id="105">
        <attvalues>
          <attvalue for="2" value="simulation" />
        </attvalues>
      </edge>
      <edge source="lab-v2/pyreason-gym" target="lab-v2/pyreason" id="106">
        <attvalues>
          <attvalue for="2" value="machine-learning" />
        </attvalues>
      </edge>
      <edge source="Shen-Language/shen-sources" target="ekzhang/ukanren-rs" id="107">
        <attvalues>
          <attvalue for="2" value="functional-programming" />
        </attvalues>
      </edge>
      <edge source="Shen-Language/shen-sources" target="jaalonso/Lecturas_GLC" id="108">
        <attvalues>
          <attvalue for="2" value="functional-programming" />
        </attvalues>
      </edge>
      <edge source="Shen-Language/shen-sources" target="ciao-lang/ciao" id="109">
        <attvalues>
          <attvalue for="2" value="programming-language" />
        </attvalues>
      </edge>
      <edge source="kuba--/ut" target="Ducasse/SOUL" id="110">
        <attvalues>
          <attvalue for="2" value="unification" />
        </attvalues>
      </edge>
      <edge source="ekzhang/ukanren-rs" target="jaalonso/Lecturas_GLC" id="111">
        <attvalues>
          <attvalue for="2" value="functional-programming" />
        </attvalues>
      </edge>
      <edge source="ekzhang/ukanren-rs" target="EvgSkv/logica" id="112">
        <attvalues>
          <attvalue for="2" value="language" />
        </attvalues>
      </edge>
      <edge source="ztangent/Julog.jl" target="Herb-AI/HerbSWIPL.jl" id="113">
        <attvalues>
          <attvalue for="2" value="julia" />
        </attvalues>
      </edge>
      <edge source="EvgSkv/logica" target="c-cube/datalog" id="114">
        <attvalues>
          <attvalue for="2" value="datalog" />
        </attvalues>
      </edge>
      <edge source="eshelyaron/debug_adapter" target="pchampio/othello-prolog" id="115">
        <attvalues>
          <attvalue for="2" value="swipl" />
        </attvalues>
      </edge>
      <edge source="AmziLS/AmziProlog" target="ciao-lang/ciao" id="116">
        <attvalues>
          <attvalue for="2" value="virtual-machine" />
        </attvalues>
      </edge>
      <edge source="AmziLS/AmziProlog" target="CapelliC/hitchhicker-prolog" id="117">
        <attvalues>
          <attvalue for="2" value="virtual-machine" />
        </attvalues>
      </edge>
      <edge source="ciao-lang/ciao" target="acharal/wam" id="118">
        <attvalues>
          <attvalue for="2" value="prolog-compiler" />
        </attvalues>
      </edge>
      <edge source="ciao-lang/ciao" target="CapelliC/hitchhicker-prolog" id="119">
        <attvalues>
          <attvalue for="2" value="virtual-machine" />
        </attvalues>
      </edge>
      <edge source="yuce/pyswip" target="Herb-AI/HerbSWIPL.jl" id="120">
        <attvalues>
          <attvalue for="2" value="artificial-intelligence" />
        </attvalues>
      </edge>
      <edge source="yuce/pyswip" target="pchampio/othello-prolog" id="121">
        <attvalues>
          <attvalue for="2" value="artificial-intelligence" />
        </attvalues>
      </edge>
      <edge source="Herb-AI/HerbSWIPL.jl" target="lps-js/lps-studio" id="122">
        <attvalues>
          <attvalue for="2" value="artificial-intelligence" />
        </attvalues>
      </edge>
      <edge source="Herb-AI/HerbSWIPL.jl" target="pchampio/othello-prolog" id="123">
        <attvalues>
          <attvalue for="2" value="artificial-intelligence" />
        </attvalues>
      </edge>
      <edge source="CapelliC/hitchhicker-prolog" target="guregu/trealla-js" id="124">
        <attvalues>
          <attvalue for="2" value="javascript" />
        </attvalues>
      </edge>
    </edges>
  </graph>
</gexf>
